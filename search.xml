<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>汇总</title>
    <url>/%E4%B8%80%E7%BA%A7%E7%9B%AE%E5%BD%95.html</url>
    <content><![CDATA[<h2 id="1-语言"><a href="#1-语言" class="headerlink" title="1. 语言"></a>1. <strong><a href="/%E8%AF%AD%E8%A8%80.html">语言</a></strong></h2><h2 id="2-计算机基础"><a href="#2-计算机基础" class="headerlink" title="2. 计算机基础"></a>2. <strong><a href="/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80.html">计算机基础</a></strong></h2><h2 id="3-每日一题"><a href="#3-每日一题" class="headerlink" title="3. 每日一题"></a>3. <strong><a href="/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98.html">每日一题</a></strong></h2><span id="more"></span>
<h2 id="4-工具"><a href="#4-工具" class="headerlink" title="4. 工具"></a>4. <strong><a href="/%E5%B7%A5%E5%85%B7.html">工具</a></strong></h2><h2 id="5-八股"><a href="#5-八股" class="headerlink" title="5. 八股"></a>5. <strong><a href="/%E5%85%AB%E8%82%A1.html">八股</a></strong></h2><h2 id="6-其他"><a href="#6-其他" class="headerlink" title="6. 其他"></a>6. <strong><a href="/%E5%85%B6%E4%BB%96.html">其他</a></strong></h2>]]></content>
      <categories>
        <category>一级目录</category>
      </categories>
  </entry>
  <entry>
    <title>codeforces1895C-Torn-Lucky-Ticket</title>
    <url>/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-11/codeforces1895C-Torn-Lucky-Ticket.html</url>
    <content><![CDATA[<p><a href="https://codeforces.com/contest/1895/problem/C">原题链接 1895 C. Torn Lucky Ticket</a></p>
<hr>
<details>
    <summary>展开答案</summary>

<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int long long</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> PII pair<span class="string">&lt;int,int&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> x first</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> y second</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">2e5</span> + <span class="number">9</span>, P = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"><span class="type">int</span> T, n;</span><br><span class="line">string s[N];</span><br><span class="line">map&lt;<span class="type">int</span>, <span class="type">int</span>&gt;cnt[<span class="number">6</span>];</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	cin &gt;&gt; n;</span><br><span class="line">	<span class="comment">//	for (int i = 0; i &lt; 6; i++) cnt[i].clear();</span></span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">		cin &gt;&gt; s[i];</span><br><span class="line">		<span class="type">int</span> res = <span class="number">0</span>;</span><br><span class="line">		<span class="keyword">for</span> (<span class="type">char</span> c : s[i]) res += c - <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">		cnt[s[i].<span class="built_in">size</span>()][res]++;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">//	return;</span></span><br><span class="line">	<span class="type">int</span> ans = <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">6</span>; i++) &#123;</span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">auto</span> it : cnt[i]) &#123;</span><br><span class="line">			ans += it.y * it.y;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line"><span class="comment">//		int res = 0;</span></span><br><span class="line"><span class="comment">//		for (char c : s[i]) res += c - &#x27;0&#x27;;</span></span><br><span class="line">		<span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt; s[i].<span class="built_in">size</span>(); j++) &#123;</span><br><span class="line">			<span class="keyword">if</span> ((s[i].<span class="built_in">size</span>() + j) % <span class="number">2</span> == <span class="number">1</span>) <span class="keyword">continue</span>;</span><br><span class="line">			<span class="type">int</span> len = j + s[i].<span class="built_in">size</span>();</span><br><span class="line">			<span class="type">int</span> res1 = <span class="number">0</span>, res2 = <span class="number">0</span>;</span><br><span class="line">			<span class="keyword">for</span> (<span class="type">int</span> k = <span class="number">0</span>; k &lt; len / <span class="number">2</span>; k++) res1 += s[i][k] - <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">			<span class="keyword">for</span> (<span class="type">int</span> k = len / <span class="number">2</span>; k &lt; s[i].<span class="built_in">size</span>(); k++) res2 += s[i][k] - <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line"><span class="comment">//			cout &lt;&lt; i &lt;&lt; &quot; &quot; &lt;&lt; len &lt;&lt; &quot; &quot; &lt;&lt; res1 &lt;&lt; &quot; &quot; &lt;&lt; res2 &lt;&lt; &quot; &quot; &lt;&lt; ans &lt;&lt; &quot;\n&quot;;</span></span><br><span class="line">			ans += cnt[j][res1 - res2];</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt; s[i].<span class="built_in">size</span>(); j++) &#123;</span><br><span class="line">			<span class="keyword">if</span> ((s[i].<span class="built_in">size</span>() + j) % <span class="number">2</span> == <span class="number">1</span>) <span class="keyword">continue</span>;</span><br><span class="line">			<span class="type">int</span> len = j + s[i].<span class="built_in">size</span>();</span><br><span class="line">			<span class="type">int</span> res1 = <span class="number">0</span>, res2 = <span class="number">0</span>;</span><br><span class="line">			<span class="type">int</span> p = s[i].<span class="built_in">size</span>() - <span class="number">1</span>;</span><br><span class="line">			<span class="keyword">for</span> (<span class="type">int</span> k = <span class="number">0</span>; k &lt; len / <span class="number">2</span>; k++, p--) res1 += s[i][p] - <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">			<span class="keyword">for</span> (<span class="type">int</span> k = len / <span class="number">2</span>; k &lt; s[i].<span class="built_in">size</span>(); k++, p--) res2 += s[i][p] - <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line"><span class="comment">//			cout &lt;&lt; i &lt;&lt; &quot; &quot; &lt;&lt; len &lt;&lt; &quot; &quot; &lt;&lt; res1 &lt;&lt; &quot; &quot; &lt;&lt; res2 &lt;&lt; &quot; &quot; &lt;&lt; ans &lt;&lt; &quot;\n&quot;;</span></span><br><span class="line">			ans += cnt[j][res1 - res2];</span><br><span class="line">		&#125;</span><br><span class="line"><span class="comment">//		cnt[s[i].size()][res]++;</span></span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">//	cout&lt;&lt;2*ans-n;</span></span><br><span class="line"><span class="comment">//	cout &lt;&lt; &quot;\t\t::&quot;;</span></span><br><span class="line">	cout &lt;&lt; ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	<span class="comment">//	ios::sync_with_stdio(false);</span></span><br><span class="line">	<span class="comment">//	cin &gt;&gt; T;</span></span><br><span class="line">	T = <span class="number">1</span>;</span><br><span class="line">	<span class="keyword">while</span> (T--) <span class="built_in">solve</span>();</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</details>]]></content>
      <categories>
        <category>刷题</category>
        <category>每日一题</category>
      </categories>
      <tags>
        <tag>刷题</tag>
      </tags>
  </entry>
  <entry>
    <title>abc327E-Maximize-Rating</title>
    <url>/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-11/abc327E-Maximize-Rating.html</url>
    <content><![CDATA[<p><a href="https://atcoder.jp/contests/abc327/tasks/abc327_e">原题链接 abc327 E - Maximize Rating</a></p>
<hr>
<details>
    <summary>展开答案</summary>

<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int long long</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> PII pair<span class="string">&lt;double,double&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> PIII pair<span class="string">&lt;double,pair&lt;double,double&gt;</span>&gt;</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> x first</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> y second</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">5050</span>, P = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"><span class="type">int</span> T, n, p[N];</span><br><span class="line"><span class="type">double</span> a[N], suma[N];</span><br><span class="line">PIII f[N][N], pr[N][N];</span><br><span class="line"><span class="function">PIII <span class="title">calc</span><span class="params">(<span class="type">double</span> u, <span class="type">double</span> d, <span class="type">int</span> k, <span class="type">double</span> p)</span> </span>&#123;</span><br><span class="line">	<span class="type">double</span> uu = u * <span class="number">0.9</span> + p;</span><br><span class="line">	<span class="type">double</span> dd = d + a[k - <span class="number">1</span>];</span><br><span class="line">	PIII res;</span><br><span class="line">	res.x = uu / dd;</span><br><span class="line">	res.y.x = uu;</span><br><span class="line">	res.y.y = dd;</span><br><span class="line">	<span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	cin &gt;&gt; n;</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++) cin &gt;&gt; p[i];</span><br><span class="line">	a[<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">	suma[<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">		a[i] = a[i - <span class="number">1</span>] * <span class="number">0.9</span>;</span><br><span class="line">		suma[i] = suma[i - <span class="number">1</span>] + a[i];</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">		<span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt;= n; j++) &#123;</span><br><span class="line">			f[i][j].x = <span class="number">-1e18</span>;</span><br><span class="line">			f[i][j].y.y = <span class="number">1</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="type">double</span> ans = <span class="number">-1e18</span>;</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line"><span class="comment">//		pr[0].x = -1e18;</span></span><br><span class="line"><span class="comment">//		for (int k = 1; k &lt;= i - 1; k++) &#123;</span></span><br><span class="line"><span class="comment">//			pr[k] = max(pr[k - 1], f[i - 1][k]);</span></span><br><span class="line"><span class="comment">////			pr[k] = max(pr[k], pr[k - 1]);</span></span><br><span class="line"><span class="comment">//		&#125;</span></span><br><span class="line">		<span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt;= i; j++) &#123;</span><br><span class="line">			PIII tmp = <span class="built_in">calc</span>(pr[i - <span class="number">1</span>][j - <span class="number">1</span>].y.x, pr[i - <span class="number">1</span>][j - <span class="number">1</span>].y.y, j, p[i]);</span><br><span class="line">			f[i][j] = <span class="built_in">max</span>(f[i][j], tmp);</span><br><span class="line">			pr[i][j] = <span class="built_in">max</span>(pr[i][j], f[i][j]);</span><br><span class="line">			pr[i][j] = <span class="built_in">max</span>(pr[i][j], pr[i - <span class="number">1</span>][j]);</span><br><span class="line"><span class="comment">//			for (int k = j - 1; k &lt;= i - 1; k++) &#123;</span></span><br><span class="line"><span class="comment">//				PIII tmp = calc(f[k][j - 1].y.x, f[k][j - 1].y.y, j, p[i]);</span></span><br><span class="line"><span class="comment">//				f[i][j] = max(f[i][j], tmp);</span></span><br><span class="line"><span class="comment">//			&#125;</span></span><br><span class="line">			ans = <span class="built_in">max</span>(ans, f[i][j].x - <span class="number">1200</span> / <span class="built_in">sqrt</span>(j * <span class="number">1.0</span>));</span><br><span class="line"><span class="comment">//			cout &lt;&lt; i &lt;&lt; &quot; &quot; &lt;&lt; j &lt;&lt; &quot; &quot; &lt;&lt; f[i][j].x &lt;&lt; &quot;\n&quot;;</span></span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	cout &lt;&lt; ans;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">	cout &lt;&lt; fixed &lt;&lt; <span class="built_in">setprecision</span>(<span class="number">10</span>);</span><br><span class="line">	<span class="comment">//	cin &gt;&gt; T;</span></span><br><span class="line">	T = <span class="number">1</span>;</span><br><span class="line">	<span class="keyword">while</span> (T--) <span class="built_in">solve</span>();</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</details>]]></content>
      <categories>
        <category>刷题</category>
        <category>每日一题</category>
      </categories>
      <tags>
        <tag>刷题</tag>
      </tags>
  </entry>
  <entry>
    <title>codeforces1891D-Suspicious-logarithms</title>
    <url>/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-10/codeforces1891D-Suspicious-logarithms.html</url>
    <content><![CDATA[<p><a href="https://codeforces.com/contest/1891/problem/D">原题链接 1891D. Suspicious logarithms</a></p>
<hr>
<details>
    <summary>展开答案</summary>

<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 2023-10-31 22:10:29</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> i128 __int128</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int long long</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> PII pair<span class="string">&lt;int,int&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> x first</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> y second</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">64</span>, P = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"><span class="type">int</span> T;</span><br><span class="line">vector&lt;PII&gt;a[N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">init</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">2</span>; i &lt; N; i++) &#123;</span><br><span class="line">		<span class="type">int</span> l = <span class="number">1</span>, r = <span class="number">1</span>;</span><br><span class="line">		l &lt;&lt;= i;</span><br><span class="line">		r &lt;&lt;= i + <span class="number">1</span>;</span><br><span class="line">		r--;</span><br><span class="line">		<span class="type">int</span> gl = <span class="number">0</span>, gr = <span class="number">0</span>;</span><br><span class="line">		<span class="keyword">for</span> (i128 j = <span class="number">1</span>; j &lt;= l; j *= i, gl++) &#123;&#125;</span><br><span class="line">		<span class="keyword">for</span> (i128 j = <span class="number">1</span>; j &lt;= r; j *= i, gr++) &#123;&#125;</span><br><span class="line">		<span class="keyword">if</span> (gl == gr) &#123;</span><br><span class="line">			a[gl].<span class="built_in">push_back</span>(&#123;l, r&#125;);</span><br><span class="line"><span class="comment">//			cout &lt;&lt; gl &lt;&lt; &quot;:&quot; &lt;&lt; l &lt;&lt; &quot;-&quot; &lt;&lt; r &lt;&lt; &quot;\n&quot;;</span></span><br><span class="line">		&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">			<span class="type">int</span> ml = l, mr = r;</span><br><span class="line">			<span class="keyword">while</span> (ml &lt; mr) &#123;</span><br><span class="line">				<span class="comment">//				cout &lt;&lt; l &lt;&lt; &quot; &quot; &lt;&lt; r &lt;&lt; &quot; &quot; &lt;&lt; ml &lt;&lt; &quot; &quot; &lt;&lt; mr &lt;&lt; &quot;\n&quot;;</span></span><br><span class="line">				<span class="type">int</span> m = (ml + mr) &gt;&gt; <span class="number">1</span>;</span><br><span class="line">				<span class="type">int</span> g = <span class="number">0</span>;</span><br><span class="line">				<span class="keyword">for</span> (i128 j = <span class="number">1</span>; j &lt;= m; j *= i, g++) &#123;&#125;</span><br><span class="line">				<span class="keyword">if</span> (g == gl) ml = m + <span class="number">1</span>;</span><br><span class="line">				<span class="keyword">else</span> mr = m;</span><br><span class="line">			&#125;</span><br><span class="line">			a[gl].<span class="built_in">push_back</span>(&#123;l, ml - <span class="number">1</span>&#125;);</span><br><span class="line">			a[gr].<span class="built_in">push_back</span>(&#123;ml	, r&#125;);</span><br><span class="line"><span class="comment">//			cout &lt;&lt; gl &lt;&lt; &quot; &quot; &lt;&lt; gr &lt;&lt; &quot;:&quot; &lt;&lt; l &lt;&lt; &quot;-&quot; &lt;&lt; ml &lt;&lt; &quot;-&quot; &lt;&lt; r &lt;&lt; &quot;\n&quot;;</span></span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	<span class="type">int</span> l, r;</span><br><span class="line">	cin &gt;&gt; l &gt;&gt; r;</span><br><span class="line">	<span class="type">int</span> ans = <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt; N; i++) &#123;</span><br><span class="line">		<span class="keyword">for</span> (PII tt : a[i]) &#123;</span><br><span class="line">			<span class="type">int</span> l1 = l, r1 = r;</span><br><span class="line">			<span class="type">int</span> l2 = tt.x, r2 = tt.y;</span><br><span class="line">			<span class="keyword">if</span> (l1 &gt; l2) <span class="built_in">swap</span>(l1, l2), <span class="built_in">swap</span>(r1, r2);</span><br><span class="line">			<span class="keyword">if</span> (r1 &gt;= l2) &#123;</span><br><span class="line">				ans += (<span class="built_in">min</span>(r1, r2) - l2 + <span class="number">1</span>) * (i - <span class="number">1</span>);</span><br><span class="line">				ans %= P;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"><span class="comment">//	cout &lt;&lt; &quot;\t\t:::&quot;;</span></span><br><span class="line">	cout &lt;&lt; ans &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">	<span class="built_in">init</span>();</span><br><span class="line">	cin &gt;&gt; T;</span><br><span class="line">	<span class="keyword">while</span> (T--) <span class="built_in">solve</span>();</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</details>]]></content>
      <categories>
        <category>刷题</category>
        <category>每日一题</category>
      </categories>
      <tags>
        <tag>刷题</tag>
      </tags>
  </entry>
  <entry>
    <title>codeforces1891C-Smilo-and-Monsters</title>
    <url>/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-10/codeforces1891C-Smilo-and-Monsters.html</url>
    <content><![CDATA[<p><a href="https://codeforces.com/contest/1891/problem/C">原题链接 1891C. Smilo and Monsters</a></p>
<hr>
<details>
    <summary>展开答案</summary>

<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int long long</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> PII pair<span class="string">&lt;int,int&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> x first</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> y second</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">2e5</span> + <span class="number">9</span>, P = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"><span class="type">int</span> T, n, a[N], q, x[N];</span><br><span class="line">string s;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	cin &gt;&gt; n;</span><br><span class="line">	<span class="type">int</span> sum = <span class="number">0</span>;</span><br><span class="line">	priority_queue&lt;<span class="type">int</span>&gt;q;</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">		cin &gt;&gt; a[i];</span><br><span class="line">		sum += a[i];</span><br><span class="line">		q.<span class="built_in">push</span>(a[i]);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="type">int</span> cnt = (sum) / <span class="number">2</span>;</span><br><span class="line">	<span class="type">int</span> ans = (sum + <span class="number">1</span>) / <span class="number">2</span>, base = <span class="number">0</span>;</span><br><span class="line">	<span class="built_in">sort</span>(a + <span class="number">1</span>, a + n + <span class="number">1</span>);</span><br><span class="line">	<span class="type">int</span> ss = <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>, j = n; j &gt;= <span class="number">0</span>; j--, i++) &#123;</span><br><span class="line">		<span class="keyword">if</span> (ss &gt;= cnt) &#123;</span><br><span class="line">			base = i;</span><br><span class="line">			<span class="keyword">break</span>;</span><br><span class="line">		&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">			ss += a[j];</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"><span class="comment">//	cout &lt;&lt; &quot;\t\t:::&quot;;</span></span><br><span class="line">	cout &lt;&lt; <span class="built_in">max</span>(n, ans + base - <span class="number">1</span>) &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">	cin &gt;&gt; T;</span><br><span class="line">	<span class="keyword">while</span> (T--) <span class="built_in">solve</span>();</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</details>]]></content>
      <categories>
        <category>刷题</category>
        <category>每日一题</category>
      </categories>
      <tags>
        <tag>刷题</tag>
      </tags>
  </entry>
  <entry>
    <title>codeforces1890E1-Doremy-s-Drying-Plan-Easy-Version</title>
    <url>/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-10/codeforces1890E1-Doremy-s-Drying-Plan-Easy-Version.html</url>
    <content><![CDATA[<p><a href="https://codeforces.com/contest/1890/problem/E1">原题链接 1890E1. Doremy’s Drying Plan (Easy Version)</a></p>
<hr>
<details>
    <summary>展开答案</summary>

<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 2023-10-29 15:26:47</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int long long</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> PII pair<span class="string">&lt;int,int&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> x first</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> y second</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">2e5</span> + <span class="number">9</span>, P = <span class="number">998244353</span>;</span><br><span class="line"><span class="type">int</span> T;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	<span class="type">int</span> n, m, k;</span><br><span class="line">	cin &gt;&gt; n &gt;&gt; m &gt;&gt; k;</span><br><span class="line">	vector&lt;PII&gt;<span class="built_in">a</span>(m + <span class="number">1</span>);</span><br><span class="line">	vector&lt;<span class="type">int</span>&gt;<span class="built_in">d</span>(n + <span class="number">2</span>), <span class="built_in">sum</span>(n + <span class="number">1</span>), <span class="built_in">sum1</span>(n + <span class="number">1</span>), <span class="built_in">sum2</span>(n + <span class="number">1</span>), <span class="built_in">ds</span>(n + <span class="number">2</span>), <span class="built_in">sums</span>(n + <span class="number">1</span>);</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= m; i++) &#123;</span><br><span class="line">		<span class="type">int</span> l, r;</span><br><span class="line">		cin &gt;&gt; l &gt;&gt; r;</span><br><span class="line">		a[i].x = l, a[i].y = r;</span><br><span class="line">		d[l]++, d[r + <span class="number">1</span>]--;</span><br><span class="line">		ds[l] += i, ds[r + <span class="number">1</span>] -= i;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="type">int</span> base = <span class="number">0</span>;</span><br><span class="line">	set&lt;<span class="type">int</span>&gt;p2;</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">		sum[i] = sum[i - <span class="number">1</span>] + d[i];</span><br><span class="line">		sums[i] = sums[i - <span class="number">1</span>] + ds[i];</span><br><span class="line">		base += sum[i] == <span class="number">0</span>;</span><br><span class="line">		<span class="keyword">if</span> (sum[i] == <span class="number">2</span>) p2.<span class="built_in">insert</span>(i);</span><br><span class="line"><span class="comment">//		cout &lt;&lt; i &lt;&lt; &quot; &quot; &lt;&lt; sum[i] &lt;&lt; &quot; \n&quot;;</span></span><br><span class="line">		sum1[i] = sum1[i - <span class="number">1</span>] + (sum[i] == <span class="number">1</span>);</span><br><span class="line">		sum2[i] = sum2[i - <span class="number">1</span>] + (sum[i] == <span class="number">2</span>);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	vector&lt;<span class="type">int</span>&gt;<span class="built_in">f</span>(n + <span class="number">1</span>), <span class="built_in">g</span>(n + <span class="number">1</span>);</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= m; i++) &#123;</span><br><span class="line">		<span class="type">int</span> l = a[i].x, r = a[i].y;</span><br><span class="line">		f[r] = <span class="built_in">max</span>(f[r], sum1[r] - sum1[l - <span class="number">1</span>]);</span><br><span class="line">		g[r] = <span class="built_in">max</span>(g[r], sum1[r] - sum1[l - <span class="number">1</span>]);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">2</span>; i &lt;= n; i++) f[i] = <span class="built_in">max</span>(f[i], f[i - <span class="number">1</span>]);</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = n - <span class="number">1</span>; i &gt;= <span class="number">1</span>; i--) g[i] = <span class="built_in">max</span>(g[i], g[i + <span class="number">1</span>]);</span><br><span class="line"></span><br><span class="line">	<span class="type">int</span> ans = <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt; n; i++) &#123;</span><br><span class="line">		<span class="type">int</span> res = f[i] + g[i + <span class="number">1</span>];</span><br><span class="line">		ans = <span class="built_in">max</span>(ans, res);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">//	for (int i = 1; i &lt;= n; i++) &#123;</span></span><br><span class="line">	<span class="comment">//		cout &lt;&lt; &quot;\t ifg &quot; &lt;&lt; i &lt;&lt; &quot; &quot; &lt;&lt; f[i] &lt;&lt; &quot; &quot; &lt;&lt; g[i] &lt;&lt; &quot;\n&quot;;</span></span><br><span class="line">	<span class="comment">//	&#125;</span></span><br><span class="line">	<span class="comment">//	cout &lt;&lt; &quot;\tans= &quot; &lt;&lt; ans + base &lt;&lt; &quot; &quot; &lt;&lt; base &lt;&lt; &quot;\n&quot;;</span></span><br><span class="line"></span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= m; i++) &#123;</span><br><span class="line">		<span class="type">int</span> l = a[i].x, r = a[i].y;</span><br><span class="line">		<span class="keyword">auto</span> it = p2.<span class="built_in">lower_bound</span>(l);</span><br><span class="line">		set&lt;<span class="type">int</span>&gt;rm;</span><br><span class="line">		<span class="keyword">while</span> (it != p2.<span class="built_in">end</span>() &amp;&amp; ((*it) &lt;= r)) &#123;</span><br><span class="line">			<span class="type">int</span> p = *it;</span><br><span class="line">			<span class="type">int</span> l1 = l, r1 = r, l2, r2;</span><br><span class="line">			l2 = a[sums[p] - i].x, r2 = a[sums[p] - i].y;</span><br><span class="line">			<span class="keyword">if</span> (l1 &gt; l2) &#123;</span><br><span class="line">				<span class="built_in">swap</span>(l1, l2);</span><br><span class="line">				<span class="built_in">swap</span>(r1, r2);</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="type">int</span> res = sum1[<span class="built_in">max</span>(r1, r2)] - sum1[<span class="built_in">min</span>(l1, l2) - <span class="number">1</span>] + sum2[<span class="built_in">min</span>(r1, r2)] - sum2[<span class="built_in">max</span>(l1, l2) - <span class="number">1</span>];</span><br><span class="line"><span class="comment">//			cout &lt;&lt; &quot;\t|| &quot; &lt;&lt; l1 &lt;&lt; &quot; &quot; &lt;&lt; r1 &lt;&lt; &quot; &quot; &lt;&lt; l2 &lt;&lt; &quot; &quot; &lt;&lt; r2 &lt;&lt; &quot; &quot; &lt;&lt; res &lt;&lt; &quot;\n&quot;;</span></span><br><span class="line">			ans = <span class="built_in">max</span>(ans, res);</span><br><span class="line">			rm.<span class="built_in">insert</span>(p);</span><br><span class="line">			it++;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">for</span> (<span class="type">int</span> x : rm) p2.<span class="built_in">erase</span>(x);</span><br><span class="line">	&#125;</span><br><span class="line"><span class="comment">//	cout &lt;&lt; &quot;\tans= &quot; &lt;&lt; ans + base &lt;&lt; &quot; &quot; &lt;&lt; base &lt;&lt; &quot;\n\n&quot;;</span></span><br><span class="line">	cout &lt;&lt; ans + base &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">	cin &gt;&gt; T;</span><br><span class="line">	<span class="keyword">while</span> (T--)<span class="built_in">solve</span>();</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</details>
]]></content>
      <categories>
        <category>刷题</category>
        <category>每日一题</category>
      </categories>
      <tags>
        <tag>刷题</tag>
      </tags>
  </entry>
  <entry>
    <title>abc326E-Revenge-of-The-Salary-of-AtCoder-Inc</title>
    <url>/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-10/abc326E-Revenge-of-The-Salary-of-AtCoder-Inc.html</url>
    <content><![CDATA[<p><a href="https://atcoder.jp/contests/abc326/tasks/abc326_e">原题链接 abc326 E - Revenge of “The Salary of AtCoder Inc.”</a></p>
<hr>
<details>
    <summary>展开答案</summary>

<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 2023-10-29 14:31:51</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int long long</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> PII pair<span class="string">&lt;int,int&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> x first</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> y second</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">2e6</span> + <span class="number">9</span>, P = <span class="number">998244353</span>;</span><br><span class="line"><span class="type">int</span> T, n, a[N];</span><br><span class="line"><span class="type">int</span> p[N], sump[N];</span><br><span class="line"></span><br><span class="line"><span class="function">ll <span class="title">fpow</span><span class="params">(ll a, ll b)</span> </span>&#123;</span><br><span class="line">	<span class="keyword">if</span> (!b)<span class="keyword">return</span> <span class="number">1</span> % P;</span><br><span class="line">	<span class="keyword">else</span> <span class="keyword">if</span> (b &amp; <span class="number">1</span>) <span class="keyword">return</span> a * <span class="built_in">fpow</span>(a * a % P, b &gt;&gt; <span class="number">1</span>) % P;</span><br><span class="line">	<span class="keyword">else</span> <span class="keyword">return</span> <span class="built_in">fpow</span>(a * a % P, b &gt;&gt; <span class="number">1</span>) % P;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">	cin &gt;&gt; n;</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">		cin &gt;&gt; a[i];</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="type">int</span> invn = <span class="built_in">fpow</span>(n, P - <span class="number">2</span>);</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">		p[i] = (sump[i - <span class="number">1</span>] * invn + invn) % P;</span><br><span class="line">		sump[i] = (sump[i - <span class="number">1</span>] + p[i]) % P;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="type">int</span> ans = <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">		ans += p[i] * a[i] % P;</span><br><span class="line">		ans %= P;</span><br><span class="line">	&#125;</span><br><span class="line">	cout &lt;&lt; ans;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</details>]]></content>
      <categories>
        <category>刷题</category>
        <category>每日一题</category>
      </categories>
      <tags>
        <tag>刷题</tag>
      </tags>
  </entry>
  <entry>
    <title>abc326D-ABC-Puzzle</title>
    <url>/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-10/abc326D-ABC-Puzzle.html</url>
    <content><![CDATA[<p><a href="https://atcoder.jp/contests/abc326/tasks/abc326_d">原题链接 abc326 D - ABC Puzzle</a></p>
<hr>
<details>
    <summary>展开答案</summary>

<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 2023-10-29 14:10:00</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> PII pair<span class="string">&lt;int,int&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> x first</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> y second</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">2e5</span> + <span class="number">9</span>, P = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"><span class="type">int</span> T, n, a[N];</span><br><span class="line">string r, c;</span><br><span class="line">set&lt;string&gt;v;</span><br><span class="line">map&lt;string, <span class="type">char</span>&gt;stmp;</span><br><span class="line"><span class="type">int</span> ok = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">vector&lt;string&gt;res;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">check</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">//	return 1;</span></span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">		string s = <span class="string">&quot;&quot;</span>;</span><br><span class="line">		<span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; n; j++) &#123;</span><br><span class="line">			s.<span class="built_in">push_back</span>(res[j][i]);</span><br><span class="line">		&#125;</span><br><span class="line"><span class="comment">//		cout &lt;&lt; s &lt;&lt; &quot;\n&quot;;</span></span><br><span class="line">		<span class="keyword">if</span> (!v.<span class="built_in">count</span>(s)) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">		<span class="keyword">if</span> (stmp[s] != c[i]) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">dfs</span><span class="params">(<span class="type">int</span> idx)</span> </span>&#123;</span><br><span class="line">	<span class="keyword">if</span> (ok) <span class="keyword">return</span> ;</span><br><span class="line">	<span class="keyword">if</span> (idx == n) &#123;</span><br><span class="line">		<span class="keyword">if</span> (<span class="built_in">check</span>()) &#123;</span><br><span class="line">			ok = <span class="number">1</span>;</span><br><span class="line">			cout &lt;&lt; <span class="string">&quot;Yes\n&quot;</span>;</span><br><span class="line">			<span class="keyword">for</span> (<span class="keyword">auto</span> r : res) cout &lt;&lt; r &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">			<span class="keyword">return</span> ;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">return</span> ;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span> (string s : v) &#123;</span><br><span class="line">		<span class="keyword">if</span> (stmp[s] == r[idx]) &#123;</span><br><span class="line">			res.<span class="built_in">push_back</span>(s);</span><br><span class="line">			<span class="built_in">dfs</span>(idx + <span class="number">1</span>);</span><br><span class="line">			res.<span class="built_in">pop_back</span>();</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">	cin &gt;&gt; n &gt;&gt; r &gt;&gt; c;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; (<span class="number">1</span> &lt;&lt; (<span class="number">2</span> * n)); i++) &#123;</span><br><span class="line">		<span class="type">int</span> ic = i;</span><br><span class="line">		map&lt;<span class="type">int</span>, <span class="type">int</span>&gt;cnt;</span><br><span class="line">		vector&lt;<span class="type">int</span>&gt;<span class="built_in">res</span>(<span class="number">0</span>);</span><br><span class="line">		<span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; n; j++) &#123;</span><br><span class="line">			res.<span class="built_in">push_back</span>(ic % <span class="number">4</span>);</span><br><span class="line">			cnt[ic % <span class="number">4</span>]++;</span><br><span class="line">			ic /= <span class="number">4</span>;</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="keyword">if</span> (cnt[<span class="number">1</span>] == <span class="number">1</span> &amp;&amp; cnt[<span class="number">2</span>] == <span class="number">1</span> &amp;&amp; cnt[<span class="number">3</span>] == <span class="number">1</span>) &#123;</span><br><span class="line">			string s = <span class="string">&quot;&quot;</span>;</span><br><span class="line">			<span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; n; j++) &#123;</span><br><span class="line">				<span class="keyword">if</span> (res[j] == <span class="number">0</span>) s.<span class="built_in">push_back</span>(<span class="string">&#x27;.&#x27;</span>);</span><br><span class="line">				<span class="keyword">if</span> (res[j] == <span class="number">1</span>) s.<span class="built_in">push_back</span>(<span class="string">&#x27;A&#x27;</span>);</span><br><span class="line">				<span class="keyword">if</span> (res[j] == <span class="number">2</span>) s.<span class="built_in">push_back</span>(<span class="string">&#x27;B&#x27;</span>);</span><br><span class="line">				<span class="keyword">if</span> (res[j] == <span class="number">3</span>) s.<span class="built_in">push_back</span>(<span class="string">&#x27;C&#x27;</span>);</span><br><span class="line">			&#125;</span><br><span class="line">			v.<span class="built_in">insert</span>(s);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">for</span> (<span class="keyword">auto</span> s : v) &#123;</span><br><span class="line">		<span class="keyword">for</span> (<span class="keyword">auto</span> c : s) &#123;</span><br><span class="line">			<span class="keyword">if</span> (c != <span class="string">&#x27;.&#x27;</span>) &#123;</span><br><span class="line">				stmp[s] = c;</span><br><span class="line">				<span class="keyword">break</span>;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="built_in">dfs</span>(<span class="number">0</span>);</span><br><span class="line">	<span class="keyword">if</span> (!ok) &#123;</span><br><span class="line">		cout &lt;&lt; <span class="string">&quot;No&quot;</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</details>]]></content>
      <categories>
        <category>刷题</category>
        <category>每日一题</category>
      </categories>
      <tags>
        <tag>刷题</tag>
      </tags>
  </entry>
  <entry>
    <title>abc326C-Peak</title>
    <url>/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-10/abc326C-Peak.html</url>
    <content><![CDATA[<p><a href="https://atcoder.jp/contests/abc326/tasks/abc326_c">原题链接 abc326 C - Peak</a></p>
<hr>
<details>
    <summary>展开答案</summary>

<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int long long</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> PII pair<span class="string">&lt;int,int&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> x first</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> y second</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">2e6</span> + <span class="number">9</span>, P = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"><span class="type">int</span> T;</span><br><span class="line">string s;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	<span class="type">int</span> n, m;</span><br><span class="line">	cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line">	vector&lt;<span class="type">int</span>&gt;<span class="built_in">a</span>(n);</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> &amp;i : a) cin &gt;&gt; i;</span><br><span class="line">	<span class="built_in">sort</span>(a.<span class="built_in">begin</span>(), a.<span class="built_in">end</span>());</span><br><span class="line">	<span class="type">int</span> ans = <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">		<span class="type">int</span> res = <span class="built_in">lower_bound</span>(a.<span class="built_in">begin</span>(), a.<span class="built_in">end</span>(), a[i] + m) - a.<span class="built_in">begin</span>() - i;</span><br><span class="line">		ans = <span class="built_in">max</span>(ans, res);</span><br><span class="line">	&#125;</span><br><span class="line">	cout &lt;&lt; ans;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">	T = <span class="number">1</span>;</span><br><span class="line">	<span class="keyword">while</span> (T--) <span class="built_in">solve</span>();</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</details>]]></content>
      <categories>
        <category>刷题</category>
        <category>每日一题</category>
      </categories>
      <tags>
        <tag>刷题</tag>
      </tags>
  </entry>
  <entry>
    <title>leetcode1726.同积元组</title>
    <url>/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-10/leetcode1726-%E5%90%8C%E7%A7%AF%E5%85%83%E7%BB%84.html</url>
    <content><![CDATA[<p><a href="https://leetcode.cn/problems/tuple-with-same-product/">原题链接 1726. 同积元组</a></p>
<hr>
<details>
    <summary>展开答案</summary>

<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">tupleSameProduct</span><span class="params">(nums []<span class="type">int</span>)</span></span> (res <span class="type">int</span>) &#123;</span><br><span class="line">	cnt := <span class="built_in">make</span>(<span class="keyword">map</span>[<span class="type">int</span>]<span class="type">int</span>, <span class="number">0</span>)</span><br><span class="line">	<span class="keyword">for</span> i := <span class="number">0</span>; i &lt; <span class="built_in">len</span>(nums); i++ &#123;</span><br><span class="line">		<span class="keyword">for</span> j := i + <span class="number">1</span>; j &lt; <span class="built_in">len</span>(nums); j++ &#123;</span><br><span class="line">			cnt[nums[i]*nums[j]]++</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span> _, v := <span class="keyword">range</span> cnt &#123;</span><br><span class="line">		res += v * (v - <span class="number">1</span>)</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> res * <span class="number">4</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</details>]]></content>
      <categories>
        <category>刷题</category>
        <category>每日一题</category>
      </categories>
      <tags>
        <tag>刷题</tag>
      </tags>
  </entry>
  <entry>
    <title>leetcode2530.执行K次操作后的最大分数</title>
    <url>/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-10/leetcode2530-%E6%89%A7%E8%A1%8CK%E6%AC%A1%E6%93%8D%E4%BD%9C%E5%90%8E%E7%9A%84%E6%9C%80%E5%A4%A7%E5%88%86%E6%95%B0.html</url>
    <content><![CDATA[<p><a href="https://leetcode.cn/problems/split-with-minimum-sum/">原题链接 2530. 执行 K 次操作后的最大分数</a></p>
<hr>
<details>
    <summary>展开答案</summary>

<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">maxKelements</span><span class="params">(nums []<span class="type">int</span>, k <span class="type">int</span>)</span></span> (res <span class="type">int64</span>) &#123;</span><br><span class="line">	a := <span class="built_in">make</span>([]<span class="type">int</span>, k)</span><br><span class="line"></span><br><span class="line">	<span class="keyword">for</span> i := <span class="number">0</span>; i &lt; k; i++ &#123;</span><br><span class="line">		a[i] = <span class="number">1</span></span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">var</span> down <span class="function"><span class="keyword">func</span><span class="params">(u <span class="type">int</span>)</span></span></span><br><span class="line">	down = <span class="function"><span class="keyword">func</span><span class="params">(u <span class="type">int</span>)</span></span> &#123;</span><br><span class="line">		t := u</span><br><span class="line">		<span class="keyword">if</span> <span class="number">2</span>*u &lt; k &amp;&amp; a[<span class="number">2</span>*u] &lt; a[t] &#123;</span><br><span class="line">			t = <span class="number">2</span> * u</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span> <span class="number">2</span>*u+<span class="number">1</span> &lt; k &amp;&amp; a[<span class="number">2</span>*u+<span class="number">1</span>] &lt; a[t] &#123;</span><br><span class="line">			t = <span class="number">2</span>*u + <span class="number">1</span></span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span> t != u &#123;</span><br><span class="line">			a[u], a[t] = a[t], a[u]</span><br><span class="line">			down(t)</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">for</span> _, v := <span class="keyword">range</span> nums &#123;</span><br><span class="line">		<span class="keyword">for</span> v != <span class="number">1</span> &#123;</span><br><span class="line">			<span class="keyword">if</span> v &gt; a[<span class="number">0</span>] &#123;</span><br><span class="line">				a[<span class="number">0</span>] = v</span><br><span class="line">				down(<span class="number">0</span>)</span><br><span class="line">			&#125;</span><br><span class="line">			v = (v + <span class="number">2</span>) / <span class="number">3</span></span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">for</span> _, v := <span class="keyword">range</span> a &#123;</span><br><span class="line">		res = res + <span class="type">int64</span>(v)</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> res</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</details>]]></content>
      <categories>
        <category>刷题</category>
        <category>每日一题</category>
      </categories>
      <tags>
        <tag>刷题</tag>
      </tags>
  </entry>
  <entry>
    <title>leetcode2652.倍数求和</title>
    <url>/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-10/leetcode2652-%E5%80%8D%E6%95%B0%E6%B1%82%E5%92%8C.html</url>
    <content><![CDATA[<p><a href="https://leetcode.cn/problems/sum-multiples/">原题链接 2652. 倍数求和</a></p>
<hr>
<details>
    <summary>展开答案</summary>

<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">sumOfMultiples</span><span class="params">(n <span class="type">int</span>)</span></span> <span class="type">int</span> &#123;</span><br><span class="line">	res := <span class="number">0</span></span><br><span class="line">	<span class="keyword">for</span> i := <span class="number">1</span>; i &lt;= n; i++ &#123;</span><br><span class="line">		<span class="keyword">if</span> i%<span class="number">3</span> == <span class="number">0</span> &#123;</span><br><span class="line">			res += i</span><br><span class="line">			<span class="keyword">continue</span></span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span> i%<span class="number">5</span> == <span class="number">0</span> &#123;</span><br><span class="line">			res += i</span><br><span class="line">			<span class="keyword">continue</span></span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span> i%<span class="number">7</span> == <span class="number">0</span> &#123;</span><br><span class="line">			res += i</span><br><span class="line">			<span class="keyword">continue</span></span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> res</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</details>]]></content>
      <categories>
        <category>刷题</category>
        <category>每日一题</category>
      </categories>
      <tags>
        <tag>刷题</tag>
      </tags>
  </entry>
  <entry>
    <title>leetcode260.只出现一次的数字III</title>
    <url>/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-10/leetcode260-%E5%8F%AA%E5%87%BA%E7%8E%B0%E4%B8%80%E6%AC%A1%E7%9A%84%E6%95%B0%E5%AD%97III.html</url>
    <content><![CDATA[<p><a href="https://leetcode.cn/problems/single-number-iii/">原题链接 260. 只出现一次的数字 III</a></p>
<hr>
<details>
    <summary>展开答案</summary>

<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">singleNumber</span><span class="params">(nums []<span class="type">int</span>)</span></span> (res []<span class="type">int</span>) &#123;</span><br><span class="line">	cnt := <span class="built_in">make</span>(<span class="keyword">map</span>[<span class="type">int</span>]<span class="type">int</span>)</span><br><span class="line">	<span class="keyword">for</span> _, v := <span class="keyword">range</span> nums &#123;</span><br><span class="line">		cnt[v]++</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span> k, v := <span class="keyword">range</span> cnt &#123;</span><br><span class="line">		<span class="keyword">if</span> v == <span class="number">1</span> &#123;</span><br><span class="line">			res = <span class="built_in">append</span>(res, k)</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> res</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</details>]]></content>
      <categories>
        <category>刷题</category>
        <category>每日一题</category>
      </categories>
      <tags>
        <tag>刷题</tag>
      </tags>
  </entry>
  <entry>
    <title>leetcode137.只出现一次的数字II</title>
    <url>/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-10/leetcode137-%E5%8F%AA%E5%87%BA%E7%8E%B0%E4%B8%80%E6%AC%A1%E7%9A%84%E6%95%B0%E5%AD%97II.html</url>
    <content><![CDATA[<p><a href="https://leetcode.cn/problems/single-number-ii/">原题链接 137. 只出现一次的数字 II</a></p>
<hr>
<details>
    <summary>展开答案</summary>

<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">singleNumber</span><span class="params">(nums []<span class="type">int</span>)</span></span> <span class="type">int</span> &#123;</span><br><span class="line">	cnt := <span class="built_in">make</span>(<span class="keyword">map</span>[<span class="type">int</span>]<span class="type">int</span>, <span class="number">0</span>)</span><br><span class="line">	<span class="keyword">for</span> _, v := <span class="keyword">range</span> nums &#123;</span><br><span class="line">		cnt[v]++</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span> k, v := <span class="keyword">range</span> cnt &#123;</span><br><span class="line">		<span class="keyword">if</span> v == <span class="number">1</span> &#123;</span><br><span class="line">			<span class="keyword">return</span> k</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">-1</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</details>]]></content>
      <categories>
        <category>刷题</category>
        <category>每日一题</category>
      </categories>
      <tags>
        <tag>刷题</tag>
      </tags>
  </entry>
  <entry>
    <title>leetcode136.只出现一次的数字</title>
    <url>/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-10/leetcode136-%E5%8F%AA%E5%87%BA%E7%8E%B0%E4%B8%80%E6%AC%A1%E7%9A%84%E6%95%B0%E5%AD%97.html</url>
    <content><![CDATA[<p><a href="https://leetcode.cn/problems/single-number/">原题链接 136. 只出现一次的数字</a></p>
<hr>
<details>
    <summary>展开答案</summary>

<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">singleNumber</span><span class="params">(nums []<span class="type">int</span>)</span></span> (res <span class="type">int</span>) &#123;</span><br><span class="line">	<span class="keyword">for</span> _, v := <span class="keyword">range</span> nums &#123;</span><br><span class="line">		res ^= v</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> res</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</details>]]></content>
      <categories>
        <category>刷题</category>
        <category>每日一题</category>
      </categories>
      <tags>
        <tag>刷题</tag>
      </tags>
  </entry>
  <entry>
    <title>leetcode1488.避免洪水泛滥</title>
    <url>/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-10/leetcode1488-%E9%81%BF%E5%85%8D%E6%B4%AA%E6%B0%B4%E6%B3%9B%E6%BB%A5.html</url>
    <content><![CDATA[<p><a href="https://leetcode.cn/problems/avoid-flood-in-the-city/">原题链接 1488. 避免洪水泛滥</a></p>
<hr>
<details>
    <summary>展开答案</summary>

<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">avoidFlood</span><span class="params">(vector&lt;<span class="type">int</span>&gt; &amp;rains)</span> </span>&#123;</span><br><span class="line">        <span class="type">int</span> n = rains.<span class="built_in">size</span>();</span><br><span class="line">        <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">res</span><span class="params">(n)</span></span>;</span><br><span class="line">        map&lt;<span class="type">int</span>, <span class="type">int</span>&gt; pr;</span><br><span class="line">        <span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">ne</span><span class="params">(n)</span></span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span>(pr.<span class="built_in">count</span>(rains[i])) ne[pr[rains[i]]] = i;</span><br><span class="line">            pr[rains[i]] = i;</span><br><span class="line">        &#125;</span><br><span class="line">        map&lt;<span class="type">int</span>, <span class="type">bool</span>&gt; mp;</span><br><span class="line">        priority_queue&lt;<span class="type">int</span>, vector&lt;<span class="type">int</span>&gt;, greater&lt;<span class="type">int</span>&gt;&gt; p;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span>(rains[i] &amp;&amp; mp[rains[i]]) <span class="keyword">return</span> <span class="built_in">vector</span>&lt;<span class="type">int</span>&gt;(<span class="number">0</span>);</span><br><span class="line">            <span class="keyword">if</span>(rains[i]) res[i] = <span class="number">-1</span>, mp[rains[i]] = <span class="literal">true</span>, p.<span class="built_in">push</span>(ne[i]);</span><br><span class="line">            <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">while</span> (p.<span class="built_in">size</span>() &amp;&amp; p.<span class="built_in">top</span>() &lt; i) p.<span class="built_in">pop</span>();</span><br><span class="line">                <span class="keyword">if</span>(!p.<span class="built_in">size</span>()) res[i] = <span class="number">1</span>;</span><br><span class="line">                <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="type">int</span> w = p.<span class="built_in">top</span>();</span><br><span class="line">                    p.<span class="built_in">pop</span>();</span><br><span class="line">                    mp[rains[w]] = <span class="literal">false</span>;</span><br><span class="line">                    res[i] = rains[w];</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
</details>]]></content>
      <categories>
        <category>刷题</category>
        <category>每日一题</category>
      </categories>
      <tags>
        <tag>刷题</tag>
      </tags>
  </entry>
  <entry>
    <title>leetcode2562.找出数组的串联值</title>
    <url>/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-10/leetcode2562-%E6%89%BE%E5%87%BA%E6%95%B0%E7%BB%84%E7%9A%84%E4%B8%B2%E8%81%94%E5%80%BC.html</url>
    <content><![CDATA[<p><a href="https://leetcode.cn/problems/find-the-array-concatenation-value/">原题链接 2562. 找出数组的串联值</a></p>
<hr>
<details>
    <summary>展开答案</summary>

<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">findTheArrayConcVal</span><span class="params">(nums []<span class="type">int</span>)</span></span> (res <span class="type">int64</span>) &#123;</span><br><span class="line">	<span class="keyword">for</span> i, j := <span class="number">0</span>, <span class="built_in">len</span>(nums)<span class="number">-1</span>; i &lt;= j; i, j = i+<span class="number">1</span>, j<span class="number">-1</span> &#123;</span><br><span class="line">		<span class="keyword">if</span> i == j &#123;</span><br><span class="line">			res += <span class="type">int64</span>(nums[i])</span><br><span class="line">		&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">			a, b := <span class="type">int64</span>(nums[i]), <span class="type">int64</span>(nums[j])</span><br><span class="line">			res += b</span><br><span class="line">			<span class="keyword">for</span> b != <span class="number">0</span> &#123;</span><br><span class="line">				a *= <span class="number">10</span></span><br><span class="line">				b /= <span class="number">10</span></span><br><span class="line">			&#125;</span><br><span class="line">			res += a</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> res</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</details>]]></content>
      <categories>
        <category>刷题</category>
        <category>每日一题</category>
      </categories>
      <tags>
        <tag>刷题</tag>
      </tags>
  </entry>
  <entry>
    <title>leetcode2512.奖励最顶尖的K名学生</title>
    <url>/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-10/leetcode2512-%E5%A5%96%E5%8A%B1%E6%9C%80%E9%A1%B6%E5%B0%96%E7%9A%84K%E5%90%8D%E5%AD%A6%E7%94%9F.html</url>
    <content><![CDATA[<p><a href="https://leetcode.cn/problems/reward-top-k-students/">原题链接 2512. 奖励最顶尖的 K 名学生</a></p>
<hr>
<details>
    <summary>展开答案</summary>

<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">topStudents</span><span class="params">(positive_feedback []<span class="type">string</span>, negative_feedback []<span class="type">string</span>, report []<span class="type">string</span>, student_id []<span class="type">int</span>, k <span class="type">int</span>)</span></span> (res []<span class="type">int</span>) &#123;</span><br><span class="line">	mp := <span class="built_in">make</span>(<span class="keyword">map</span>[<span class="type">string</span>]<span class="type">int</span>, <span class="built_in">len</span>(positive_feedback)+<span class="built_in">len</span>(negative_feedback))</span><br><span class="line">	<span class="keyword">for</span> _, v := <span class="keyword">range</span> positive_feedback &#123;</span><br><span class="line">		mp[v] = <span class="number">3</span></span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span> _, v := <span class="keyword">range</span> negative_feedback &#123;</span><br><span class="line">		mp[v] = <span class="number">-1</span></span><br><span class="line">	&#125;</span><br><span class="line">	get_score := <span class="function"><span class="keyword">func</span><span class="params">(s <span class="type">string</span>)</span></span> (res <span class="type">int</span>) &#123;</span><br><span class="line">		words := strings.Split(s, <span class="string">&quot; &quot;</span>)</span><br><span class="line">		<span class="keyword">for</span> _, v := <span class="keyword">range</span> words &#123;</span><br><span class="line">			res += mp[v]</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">return</span> res</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">type</span> data <span class="keyword">struct</span> &#123;</span><br><span class="line">		id, score <span class="type">int</span></span><br><span class="line">	&#125;</span><br><span class="line">	stus := <span class="built_in">make</span>([]data, <span class="built_in">len</span>(student_id))</span><br><span class="line">	<span class="keyword">for</span> i := <span class="number">0</span>; i &lt; <span class="built_in">len</span>(stus); i++ &#123;</span><br><span class="line">		stus[i].id = student_id[i]</span><br><span class="line">		stus[i].score = get_score(report[i])</span><br><span class="line">	&#125;</span><br><span class="line">	sort.Slice(stus, <span class="function"><span class="keyword">func</span><span class="params">(i, j <span class="type">int</span>)</span></span> <span class="type">bool</span> &#123;</span><br><span class="line">		<span class="keyword">if</span> stus[i].score == stus[j].score &#123;</span><br><span class="line">			<span class="keyword">return</span> stus[i].id &lt; stus[j].id</span><br><span class="line">		&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">			<span class="keyword">return</span> stus[i].score &gt; stus[j].score</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;)</span><br><span class="line">	<span class="keyword">for</span> i := <span class="number">0</span>; i &lt; k; i++ &#123;</span><br><span class="line">		res = <span class="built_in">append</span>(res, stus[i].id)</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</details>]]></content>
      <categories>
        <category>刷题</category>
        <category>每日一题</category>
      </categories>
      <tags>
        <tag>刷题</tag>
      </tags>
  </entry>
  <entry>
    <title>leetcode2731.移动机器人</title>
    <url>/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-10/leetcode2731-%E7%A7%BB%E5%8A%A8%E6%9C%BA%E5%99%A8%E4%BA%BA.html</url>
    <content><![CDATA[<p><a href="https://leetcode.cn/problems/movement-of-robots/">原题链接 2731. 移动机器人</a></p>
<hr>
<details>
    <summary>展开答案</summary>

<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">sumDistance</span><span class="params">(nums []<span class="type">int</span>, s <span class="type">string</span>, d <span class="type">int</span>)</span></span> (res <span class="type">int</span>) &#123;</span><br><span class="line">	<span class="keyword">const</span> mod <span class="type">int</span> = <span class="number">1e9</span> + <span class="number">7</span></span><br><span class="line">	<span class="keyword">for</span> i, v := <span class="keyword">range</span> s &#123;</span><br><span class="line">		<span class="keyword">if</span> v == <span class="string">&#x27;L&#x27;</span> &#123;</span><br><span class="line">			nums[i] -= d</span><br><span class="line">		&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">			nums[i] += d</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	sort.Ints(nums)</span><br><span class="line">	sum := <span class="number">0</span></span><br><span class="line">	<span class="keyword">for</span> i, v := <span class="keyword">range</span> nums &#123;</span><br><span class="line">		res += i*v - sum</span><br><span class="line">		res %= mod</span><br><span class="line">		sum += v</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> res</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</details>
]]></content>
      <categories>
        <category>刷题</category>
        <category>每日一题</category>
      </categories>
      <tags>
        <tag>刷题</tag>
      </tags>
  </entry>
  <entry>
    <title>leetcode2578.最小和分割</title>
    <url>/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-10/leetcode2578-%E6%9C%80%E5%B0%8F%E5%92%8C%E5%88%86%E5%89%B2.html</url>
    <content><![CDATA[<p><a href="https://leetcode.cn/problems/split-with-minimum-sum/">原题链接 2578. 最小和分割</a></p>
<hr>
<details>
    <summary>展开答案</summary>

<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">splitNum</span><span class="params">(num <span class="type">int</span>)</span></span> <span class="type">int</span> &#123;</span><br><span class="line">	a, b := <span class="number">0</span>, <span class="number">0</span></span><br><span class="line">	cnt := <span class="built_in">make</span>([]<span class="type">int</span>, <span class="number">10</span>)</span><br><span class="line">	<span class="keyword">for</span> num != <span class="number">0</span> &#123;</span><br><span class="line">		cnt[num%<span class="number">10</span>]++</span><br><span class="line">		num /= <span class="number">10</span></span><br><span class="line">	&#125;</span><br><span class="line">	turn := <span class="number">0</span></span><br><span class="line">	<span class="keyword">for</span> i := <span class="number">0</span>; i &lt; <span class="number">10</span>; i++ &#123;</span><br><span class="line">		<span class="keyword">for</span> j := <span class="number">0</span>; j &lt; cnt[i]; j++ &#123;</span><br><span class="line">			turn++</span><br><span class="line">			<span class="keyword">if</span> turn&amp;<span class="number">1</span> == <span class="number">1</span> &#123;</span><br><span class="line">				a = a*<span class="number">10</span> + i</span><br><span class="line">			&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">				b = b*<span class="number">10</span> + i</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> a + b</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</details>]]></content>
      <categories>
        <category>刷题</category>
        <category>每日一题</category>
      </categories>
      <tags>
        <tag>刷题</tag>
      </tags>
  </entry>
  <entry>
    <title>leetcode2034.股票价格波动</title>
    <url>/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-10/leetcode2034-%E8%82%A1%E7%A5%A8%E4%BB%B7%E6%A0%BC%E6%B3%A2%E5%8A%A8.html</url>
    <content><![CDATA[<p><a href="https://leetcode.cn/problems/stock-price-fluctuation/">原题链接 2034. 股票价格波动</a></p>
<hr>
<details>
    <summary>展开答案</summary>

<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">StockPrice</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    map&lt;<span class="type">int</span>,<span class="type">int</span>&gt;mp;</span><br><span class="line">    multiset&lt;<span class="type">int</span>&gt;s;</span><br><span class="line">    <span class="type">int</span> cur;</span><br><span class="line">    <span class="built_in">StockPrice</span>() &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">update</span><span class="params">(<span class="type">int</span> timestamp, <span class="type">int</span> price)</span> </span>&#123;</span><br><span class="line">        <span class="type">int</span> pr=mp[timestamp];</span><br><span class="line">        <span class="keyword">if</span>(pr)&#123;</span><br><span class="line">            s.<span class="built_in">erase</span>(s.<span class="built_in">find</span>(pr));</span><br><span class="line">        &#125;</span><br><span class="line">        mp[timestamp]=price;</span><br><span class="line">        s.<span class="built_in">insert</span>(price);</span><br><span class="line">        cur=<span class="built_in">max</span>(cur,timestamp);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">current</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> mp[cur];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">maximum</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">auto</span> res=s.<span class="built_in">rbegin</span>();</span><br><span class="line">        <span class="keyword">return</span> *res;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">minimum</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">auto</span> res=s.<span class="built_in">begin</span>();</span><br><span class="line">        <span class="keyword">return</span> *res;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Your StockPrice object will be instantiated and called as such:</span></span><br><span class="line"><span class="comment"> * StockPrice* obj = new StockPrice();</span></span><br><span class="line"><span class="comment"> * obj-&gt;update(timestamp,price);</span></span><br><span class="line"><span class="comment"> * int param_2 = obj-&gt;current();</span></span><br><span class="line"><span class="comment"> * int param_3 = obj-&gt;maximum();</span></span><br><span class="line"><span class="comment"> * int param_4 = obj-&gt;minimum();</span></span><br><span class="line"><span class="comment"> */</span></span><br></pre></td></tr></table></figure>
</details>]]></content>
      <categories>
        <category>刷题</category>
        <category>每日一题</category>
      </categories>
      <tags>
        <tag>刷题</tag>
      </tags>
  </entry>
  <entry>
    <title>leetcode901.股票价格跨度</title>
    <url>/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-10/leetcode901-%E8%82%A1%E7%A5%A8%E4%BB%B7%E6%A0%BC%E8%B7%A8%E5%BA%A6.html</url>
    <content><![CDATA[<p><a href="https://leetcode.cn/problems/online-stock-span/">原题链接 901. 股票价格跨度</a></p>
<hr>
<details>
    <summary>展开答案</summary>

<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">type</span> StockSpanner <span class="keyword">struct</span> &#123;</span><br><span class="line">	a, st []<span class="type">int</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Constructor</span><span class="params">()</span></span> StockSpanner &#123;</span><br><span class="line">	<span class="keyword">return</span> StockSpanner&#123;</span><br><span class="line">		a:  <span class="built_in">make</span>([]<span class="type">int</span>, <span class="number">0</span>),</span><br><span class="line">		st: <span class="built_in">make</span>([]<span class="type">int</span>, <span class="number">0</span>),</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(this *StockSpanner)</span></span> Next(price <span class="type">int</span>) (res <span class="type">int</span>) &#123;</span><br><span class="line">	this.a = <span class="built_in">append</span>(this.a, price)</span><br><span class="line">	<span class="keyword">for</span> <span class="built_in">len</span>(this.st) &gt; <span class="number">0</span> &amp;&amp; this.a[this.st[<span class="built_in">len</span>(this.st)<span class="number">-1</span>]] &lt;= price &#123;</span><br><span class="line">		this.st = this.st[<span class="number">0</span> : <span class="built_in">len</span>(this.st)<span class="number">-1</span>]</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span> <span class="built_in">len</span>(this.st) == <span class="number">0</span> &#123;</span><br><span class="line">		res = <span class="built_in">len</span>(this.a)</span><br><span class="line">	&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">		res = <span class="built_in">len</span>(this.a) - <span class="number">1</span> - this.st[<span class="built_in">len</span>(this.st)<span class="number">-1</span>]</span><br><span class="line">	&#125;</span><br><span class="line">	this.st = <span class="built_in">append</span>(this.st, <span class="built_in">len</span>(this.a)<span class="number">-1</span>)</span><br><span class="line">	<span class="keyword">return</span> res</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</details>]]></content>
      <categories>
        <category>刷题</category>
        <category>每日一题</category>
      </categories>
      <tags>
        <tag>刷题</tag>
      </tags>
  </entry>
  <entry>
    <title>docker</title>
    <url>/%E5%B7%A5%E5%85%B7/docker.html</url>
    <content><![CDATA[]]></content>
  </entry>
  <entry>
    <title>git</title>
    <url>/%E5%B7%A5%E5%85%B7/git.html</url>
    <content><![CDATA[]]></content>
  </entry>
  <entry>
    <title>工具</title>
    <url>/%E5%B7%A5%E5%85%B7.html</url>
    <content><![CDATA[<h2 id="1-git"><a href="#1-git" class="headerlink" title="1. git"></a>1. <strong><a href="/%E5%B7%A5%E5%85%B7/git.html">git</a></strong></h2><h2 id="2-docker"><a href="#2-docker" class="headerlink" title="2. docker"></a>2. <strong><a href="/%E5%B7%A5%E5%85%B7/docker.html">docker</a></strong></h2><h2 id="1-git-1"><a href="#1-git-1" class="headerlink" title="1. git"></a>1. <strong><a href="/%E5%B7%A5%E5%85%B7/git.html">git</a></strong></h2><span id="more"></span>
<h2 id="1-git-2"><a href="#1-git-2" class="headerlink" title="1. git"></a>1. <strong><a href="/%E5%B7%A5%E5%85%B7/git.html">git</a></strong></h2>]]></content>
      <categories>
        <category>工具</category>
      </categories>
      <tags>
        <tag>工具</tag>
      </tags>
  </entry>
  <entry>
    <title>leetcode714.买卖股票的最佳时机含手续费</title>
    <url>/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-10/leetcode714-%E4%B9%B0%E5%8D%96%E8%82%A1%E7%A5%A8%E7%9A%84%E6%9C%80%E4%BD%B3%E6%97%B6%E6%9C%BA%E5%90%AB%E6%89%8B%E7%BB%AD%E8%B4%B9.html</url>
    <content><![CDATA[<p><a href="https://leetcode.cn/problems/best-time-to-buy-and-sell-stock-with-transaction-fee/">原题链接 714. 买卖股票的最佳时机含手续费</a></p>
<hr>
<details>
    <summary>展开答案</summary>

<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">maxProfit</span><span class="params">(prices []<span class="type">int</span>, fee <span class="type">int</span>)</span></span> (res <span class="type">int</span>) &#123;</span><br><span class="line">	<span class="comment">// f[i]= j:0-&gt;i-1 max(f[j]+max(a[i]-a[i],a[i]-a[i-1],...,a[i]-a[j]))-fee</span></span><br><span class="line">	<span class="comment">// f[i+1]= j:0-&gt;i max(f[j]+max(a[i+1]-a[i+1],a[i+1]-a[i],...,a[i+1]-a[j]))-fee</span></span><br><span class="line">	max := <span class="function"><span class="keyword">func</span><span class="params">(x, y <span class="type">int</span>)</span></span> <span class="type">int</span> &#123;</span><br><span class="line">		<span class="keyword">if</span> x &gt; y &#123;</span><br><span class="line">			<span class="keyword">return</span> x</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">return</span> y</span><br><span class="line">	&#125;</span><br><span class="line">	n := <span class="built_in">len</span>(prices)</span><br><span class="line">	dp := <span class="built_in">make</span>([]<span class="type">int</span>, n)</span><br><span class="line">	ma := <span class="number">0</span></span><br><span class="line">	<span class="keyword">for</span> i := <span class="number">1</span>; i &lt; n; i++ &#123;</span><br><span class="line">		dp[i] = max(dp[i], dp[i<span class="number">-1</span>]-prices[i<span class="number">-1</span>]+prices[i])</span><br><span class="line">		dp[i] = max(dp[i], ma-fee)</span><br><span class="line">		ma = max(ma, dp[i])</span><br><span class="line">		res = max(res, dp[i]-fee)</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> res</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</details>]]></content>
      <categories>
        <category>刷题</category>
        <category>每日一题</category>
      </categories>
      <tags>
        <tag>刷题</tag>
      </tags>
  </entry>
  <entry>
    <title>leetcode309.买卖股票的最佳时机含冷冻期</title>
    <url>/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-10/leetcode309-%E4%B9%B0%E5%8D%96%E8%82%A1%E7%A5%A8%E7%9A%84%E6%9C%80%E4%BD%B3%E6%97%B6%E6%9C%BA%E5%90%AB%E5%86%B7%E5%86%BB%E6%9C%9F.html</url>
    <content><![CDATA[<p><a href="https://leetcode.cn/problems/best-time-to-buy-and-sell-stock-with-cooldown/">原题链接 309. 买卖股票的最佳时机含冷冻期</a></p>
<hr>
<details>
    <summary>展开答案</summary>

<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">maxProfit</span><span class="params">(prices []<span class="type">int</span>)</span></span> (res <span class="type">int</span>) &#123;</span><br><span class="line">	max := <span class="function"><span class="keyword">func</span><span class="params">(x, y <span class="type">int</span>)</span></span> <span class="type">int</span> &#123;</span><br><span class="line">		<span class="keyword">if</span> x &gt; y &#123;</span><br><span class="line">			<span class="keyword">return</span> x</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">return</span> y</span><br><span class="line">	&#125;</span><br><span class="line">	n := <span class="built_in">len</span>(prices)</span><br><span class="line">	dp := <span class="built_in">make</span>([]<span class="type">int</span>, n)</span><br><span class="line">	ma := <span class="number">0</span></span><br><span class="line">	<span class="keyword">for</span> i := <span class="number">1</span>; i &lt; n; i++ &#123;</span><br><span class="line">		dp[i] = max(dp[i], dp[i<span class="number">-1</span>]-prices[i<span class="number">-1</span>]+prices[i])</span><br><span class="line">		dp[i] = max(dp[i], ma)</span><br><span class="line">		ma = max(ma, dp[i<span class="number">-1</span>])</span><br><span class="line">		res = max(res, dp[i])</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> res</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</details>]]></content>
      <categories>
        <category>刷题</category>
        <category>每日一题</category>
      </categories>
      <tags>
        <tag>刷题</tag>
      </tags>
  </entry>
  <entry>
    <title>leetcode188.买卖股票的最佳时机IV</title>
    <url>/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-10/leetcode188-%E4%B9%B0%E5%8D%96%E8%82%A1%E7%A5%A8%E7%9A%84%E6%9C%80%E4%BD%B3%E6%97%B6%E6%9C%BAIV.html</url>
    <content><![CDATA[<p><a href="https://leetcode.cn/problems/best-time-to-buy-and-sell-stock-iv/">原题链接 188. 买卖股票的最佳时机 IV</a></p>
<hr>
<details>
    <summary>展开答案</summary>

<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">maxProfit</span><span class="params">(k <span class="type">int</span>, prices []<span class="type">int</span>)</span></span> (res <span class="type">int</span>) &#123;</span><br><span class="line">	max := <span class="function"><span class="keyword">func</span><span class="params">(x, y <span class="type">int</span>)</span></span> <span class="type">int</span> &#123;</span><br><span class="line">		<span class="keyword">if</span> x &gt; y &#123;</span><br><span class="line">			<span class="keyword">return</span> x</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">return</span> y</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	n := <span class="built_in">len</span>(prices)</span><br><span class="line">	dp := <span class="built_in">make</span>([][]<span class="type">int</span>, n)</span><br><span class="line">	<span class="keyword">for</span> i := <span class="keyword">range</span> dp &#123;</span><br><span class="line">		dp[i] = <span class="built_in">make</span>([]<span class="type">int</span>, k+<span class="number">1</span>)</span><br><span class="line">	&#125;</span><br><span class="line">	me := <span class="built_in">make</span>([]<span class="type">int</span>, n)</span><br><span class="line">	<span class="keyword">for</span> j := <span class="number">1</span>; j &lt;= k; j++ &#123;</span><br><span class="line">		me = <span class="built_in">make</span>([]<span class="type">int</span>, n)</span><br><span class="line">		me[<span class="number">0</span>] = dp[<span class="number">0</span>][j<span class="number">-1</span>]</span><br><span class="line">		<span class="keyword">for</span> i := <span class="number">1</span>; i &lt; n; i++ &#123;</span><br><span class="line">			me[i] = max(me[i<span class="number">-1</span>], dp[i][j<span class="number">-1</span>])</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">for</span> i := <span class="number">1</span>; i &lt; n; i++ &#123;</span><br><span class="line">			<span class="comment">// dp[i][j]=max(dp[i][j],dp[i-1][j])</span></span><br><span class="line">			dp[i][j] = max(dp[i][j], dp[i<span class="number">-1</span>][j]+prices[i]-prices[i<span class="number">-1</span>])</span><br><span class="line">			dp[i][j] = max(dp[i][j], me[i<span class="number">-1</span>])</span><br><span class="line">			dp[i][j] = max(dp[i][j], dp[i<span class="number">-1</span>][j<span class="number">-1</span>]+prices[i]-prices[i<span class="number">-1</span>])</span><br><span class="line">			res = max(res, dp[i][j])</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> res</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</details>]]></content>
      <categories>
        <category>刷题</category>
        <category>每日一题</category>
      </categories>
      <tags>
        <tag>刷题</tag>
      </tags>
  </entry>
  <entry>
    <title>leetcode123.买卖股票的最佳时机III</title>
    <url>/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-10/leetcode123-%E4%B9%B0%E5%8D%96%E8%82%A1%E7%A5%A8%E7%9A%84%E6%9C%80%E4%BD%B3%E6%97%B6%E6%9C%BAIII.html</url>
    <content><![CDATA[<p><a href="https://leetcode.cn/problems/best-time-to-buy-and-sell-stock-ii/">原题链接 122. 买卖股票的最佳时机 II</a></p>
<hr>
<details>
    <summary>展开答案</summary>

<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">maxProfit</span><span class="params">(prices []<span class="type">int</span>)</span></span> (res <span class="type">int</span>) &#123;</span><br><span class="line">	prices = <span class="built_in">append</span>(prices, <span class="number">-1</span>)</span><br><span class="line">	pr := prices[<span class="number">0</span>]</span><br><span class="line">	<span class="keyword">for</span> i := <span class="number">1</span>; i &lt; <span class="built_in">len</span>(prices); i++ &#123;</span><br><span class="line">		<span class="keyword">if</span> prices[i] &lt; prices[i<span class="number">-1</span>] &#123;</span><br><span class="line">			res += prices[i<span class="number">-1</span>] - pr</span><br><span class="line">			pr = prices[i]</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> res</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</details>


]]></content>
      <categories>
        <category>刷题</category>
        <category>每日一题</category>
      </categories>
      <tags>
        <tag>刷题</tag>
      </tags>
  </entry>
  <entry>
    <title>leetcode122.买卖股票的最佳时机II</title>
    <url>/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-10/leetcode122-%E4%B9%B0%E5%8D%96%E8%82%A1%E7%A5%A8%E7%9A%84%E6%9C%80%E4%BD%B3%E6%97%B6%E6%9C%BAII.html</url>
    <content><![CDATA[<p><a href="https://leetcode.cn/problems/best-time-to-buy-and-sell-stock-iii/">原题链接 123. 买卖股票的最佳时机 III</a></p>
<hr>
<details>
    <summary>展开答案</summary>

<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">maxProfit</span><span class="params">(prices []<span class="type">int</span>)</span></span> (res <span class="type">int</span>) &#123;</span><br><span class="line">	min := <span class="function"><span class="keyword">func</span><span class="params">(x, y <span class="type">int</span>)</span></span> <span class="type">int</span> &#123;</span><br><span class="line">		<span class="keyword">if</span> x &lt; y &#123;</span><br><span class="line">			<span class="keyword">return</span> x</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">return</span> y</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	max := <span class="function"><span class="keyword">func</span><span class="params">(x, y <span class="type">int</span>)</span></span> <span class="type">int</span> &#123;</span><br><span class="line">		<span class="keyword">if</span> x &gt; y &#123;</span><br><span class="line">			<span class="keyword">return</span> x</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">return</span> y</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	n := <span class="built_in">len</span>(prices)</span><br><span class="line">	f := <span class="built_in">make</span>([]<span class="type">int</span>, n)</span><br><span class="line">	g := <span class="built_in">make</span>([]<span class="type">int</span>, n)</span><br><span class="line">	pr := prices[<span class="number">0</span>]</span><br><span class="line">	<span class="keyword">for</span> i := <span class="number">1</span>; i &lt; n; i++ &#123;</span><br><span class="line">		pr = min(pr, prices[i])</span><br><span class="line">		f[i] = max(f[i<span class="number">-1</span>], prices[i]-pr)</span><br><span class="line">	&#125;</span><br><span class="line">	pr = prices[n<span class="number">-1</span>]</span><br><span class="line">	<span class="keyword">for</span> i := n - <span class="number">2</span>; i &gt;= <span class="number">0</span>; i-- &#123;</span><br><span class="line">		pr = max(pr, prices[i])</span><br><span class="line">		g[i] = max(g[i+<span class="number">1</span>], pr-prices[i])</span><br><span class="line">		res = max(res, f[i]+g[i])</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> res</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</details>]]></content>
      <categories>
        <category>刷题</category>
        <category>每日一题</category>
      </categories>
      <tags>
        <tag>刷题</tag>
      </tags>
  </entry>
  <entry>
    <title>leetcode121.买卖股票的最佳时机</title>
    <url>/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-10/leetcode121-%E4%B9%B0%E5%8D%96%E8%82%A1%E7%A5%A8%E7%9A%84%E6%9C%80%E4%BD%B3%E6%97%B6%E6%9C%BA.html</url>
    <content><![CDATA[<p><a href="https://leetcode.cn/problems/best-time-to-buy-and-sell-stock/">原题链接 121. 买卖股票的最佳时机</a></p>
<hr>
<details>
    <summary>展开答案</summary>

<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">maxProfit</span><span class="params">(prices []<span class="type">int</span>)</span></span> (ans <span class="type">int</span>) &#123;</span><br><span class="line">	mi := prices[<span class="number">0</span>]</span><br><span class="line">	<span class="keyword">for</span> _, v := <span class="keyword">range</span> prices &#123;</span><br><span class="line">		<span class="keyword">if</span> ans &lt; v-mi &#123;</span><br><span class="line">			ans = v - mi</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span> v &lt; mi &#123;</span><br><span class="line">			mi = v</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> ans</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</details>
]]></content>
      <categories>
        <category>刷题</category>
        <category>每日一题</category>
      </categories>
      <tags>
        <tag>刷题</tag>
      </tags>
  </entry>
  <entry>
    <title>leetcode2136.全部开花的最早一天</title>
    <url>/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-10/leetcode2136-%E5%85%A8%E9%83%A8%E5%BC%80%E8%8A%B1%E7%9A%84%E6%9C%80%E6%97%A9%E4%B8%80%E5%A4%A9.html</url>
    <content><![CDATA[<p><a href="https://leetcode.cn/problems/earliest-possible-day-of-full-bloom/">原题链接 2136. 全部开花的最早一天</a></p>
<hr>
<details>
    <summary>展开答案</summary>

<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">earliestFullBloom</span><span class="params">(plantTime []<span class="type">int</span>, growTime []<span class="type">int</span>)</span></span> (res <span class="type">int</span>) &#123;</span><br><span class="line">	max := <span class="function"><span class="keyword">func</span><span class="params">(x, y <span class="type">int</span>)</span></span> <span class="type">int</span> &#123;</span><br><span class="line">		<span class="keyword">if</span> x &gt; y &#123;</span><br><span class="line">			<span class="keyword">return</span> x</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">return</span> y</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">type</span> data <span class="keyword">struct</span> &#123;</span><br><span class="line">		a, b <span class="type">int</span></span><br><span class="line">	&#125;</span><br><span class="line">	d := <span class="built_in">make</span>([]data, <span class="built_in">len</span>(plantTime))</span><br><span class="line">	<span class="keyword">for</span> i := <span class="number">0</span>; i &lt; <span class="built_in">len</span>(plantTime); i++ &#123;</span><br><span class="line">		d[i].a = plantTime[i]</span><br><span class="line">		d[i].b = growTime[i]</span><br><span class="line">	&#125;</span><br><span class="line">	sort.Slice(d, <span class="function"><span class="keyword">func</span><span class="params">(i, j <span class="type">int</span>)</span></span> <span class="type">bool</span> &#123;</span><br><span class="line">		<span class="keyword">return</span> d[i].b &gt; d[j].b</span><br><span class="line">	&#125;)</span><br><span class="line">	res = d[<span class="number">0</span>].a + d[<span class="number">0</span>].b</span><br><span class="line">	<span class="keyword">for</span> i := <span class="number">1</span>; i &lt; <span class="built_in">len</span>(d); i++ &#123;</span><br><span class="line">		d[i].a += d[i<span class="number">-1</span>].a</span><br><span class="line">		res = max(res, d[i].a+d[i].b)</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</details>]]></content>
      <categories>
        <category>刷题</category>
        <category>每日一题</category>
      </categories>
      <tags>
        <tag>刷题</tag>
      </tags>
  </entry>
  <entry>
    <title>leetcode1333.餐厅过滤器</title>
    <url>/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-10/leetcode1333-%E9%A4%90%E5%8E%85%E8%BF%87%E6%BB%A4%E5%99%A8.html</url>
    <content><![CDATA[<p><a href="https://leetcode.cn/problems/filter-restaurants-by-vegan-friendly-price-and-distance/">原题链接 1333. 餐厅过滤器</a></p>
<hr>
<details>
    <summary>展开答案</summary>

<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">filterRestaurants</span><span class="params">(restaurants [][]<span class="type">int</span>, veganFriendly <span class="type">int</span>, maxPrice <span class="type">int</span>, maxDistance <span class="type">int</span>)</span></span> (ans []<span class="type">int</span>) &#123;</span><br><span class="line">	res := <span class="built_in">make</span>([][]<span class="type">int</span>, <span class="number">0</span>)</span><br><span class="line">	<span class="keyword">for</span> _, v := <span class="keyword">range</span> restaurants &#123;</span><br><span class="line">		vf, price, distance := v[<span class="number">2</span>], v[<span class="number">3</span>], v[<span class="number">4</span>]</span><br><span class="line">		<span class="keyword">if</span> (vf == <span class="number">1</span> || veganFriendly == <span class="number">0</span>) &amp;&amp; price &lt;= maxPrice &amp;&amp; distance &lt;= maxDistance &#123;</span><br><span class="line">			res = <span class="built_in">append</span>(res, v)</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	sort.Slice(res, <span class="function"><span class="keyword">func</span><span class="params">(i, j <span class="type">int</span>)</span></span> <span class="type">bool</span> &#123;</span><br><span class="line">		<span class="keyword">if</span> res[i][<span class="number">1</span>] != res[j][<span class="number">1</span>] &#123;</span><br><span class="line">			<span class="keyword">return</span> res[i][<span class="number">1</span>] &gt; res[j][<span class="number">1</span>]</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">return</span> res[i][<span class="number">0</span>] &gt; res[j][<span class="number">0</span>]</span><br><span class="line">	&#125;)</span><br><span class="line">	<span class="keyword">for</span> _, v := <span class="keyword">range</span> res &#123;</span><br><span class="line">		ans = <span class="built_in">append</span>(ans, v[<span class="number">0</span>])</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> ans</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</details>]]></content>
      <categories>
        <category>刷题</category>
        <category>每日一题</category>
      </categories>
      <tags>
        <tag>刷题</tag>
      </tags>
  </entry>
  <entry>
    <title>leetcode605.种花问题</title>
    <url>/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-10/leetcode605-%E7%A7%8D%E8%8A%B1%E9%97%AE%E9%A2%98.html</url>
    <content><![CDATA[<p><a href="https://leetcode.cn/problems/can-place-flowers/">原题链接 605. 种花问题</a></p>
<hr>
<details>
    <summary>展开答案</summary>

<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">canPlaceFlowers</span><span class="params">(flowerbed []<span class="type">int</span>, n <span class="type">int</span>)</span></span> <span class="type">bool</span> &#123;</span><br><span class="line">	pr := <span class="number">-2</span></span><br><span class="line">	<span class="keyword">for</span> i := <span class="number">0</span>; i &lt; <span class="built_in">len</span>(flowerbed); i++ &#123;</span><br><span class="line">		<span class="keyword">if</span> flowerbed[i] == <span class="number">1</span> &#123;</span><br><span class="line">			n -= (i-pr)/<span class="number">2</span> - <span class="number">1</span></span><br><span class="line">			pr = i</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	n -= (<span class="built_in">len</span>(flowerbed)+<span class="number">1</span>-pr)/<span class="number">2</span> - <span class="number">1</span></span><br><span class="line">	<span class="keyword">return</span> n &lt;= <span class="number">0</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</details>]]></content>
      <categories>
        <category>刷题</category>
        <category>每日一题</category>
      </categories>
      <tags>
        <tag>刷题</tag>
      </tags>
  </entry>
  <entry>
    <title>leetcode2582.递枕头</title>
    <url>/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-10/leetcode2582-%E9%80%92%E6%9E%95%E5%A4%B4.html</url>
    <content><![CDATA[<p><a href="https://leetcode.cn/problems/pass-the-pillow/">原题链接 2582. 递枕头</a></p>
<hr>
<details>
    <summary>展开答案</summary>

<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">passThePillow</span><span class="params">(n <span class="type">int</span>, time <span class="type">int</span>)</span></span> <span class="type">int</span> &#123;</span><br><span class="line">	time %= (n - <span class="number">1</span>) * <span class="number">2</span></span><br><span class="line">	<span class="keyword">if</span> time &lt; n &#123;</span><br><span class="line">		<span class="keyword">return</span> time + <span class="number">1</span></span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> n*<span class="number">2</span> - time - <span class="number">1</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</details>]]></content>
      <categories>
        <category>刷题</category>
        <category>每日一题</category>
      </categories>
      <tags>
        <tag>刷题</tag>
      </tags>
  </entry>
  <entry>
    <title>leetcode146.LRU缓存</title>
    <url>/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-10/leetcode146-LRU%E7%BC%93%E5%AD%98.html</url>
    <content><![CDATA[<p><a href="https://leetcode.cn/problems/lru-cache/">原题链接 146. LRU 缓存</a></p>
<hr>
<details>
    <summary>展开答案</summary>

<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">type</span> LRUCache <span class="keyword">struct</span> &#123;</span><br><span class="line">	m    <span class="keyword">map</span>[<span class="type">int</span>]*linkNode</span><br><span class="line">	head *linkNode</span><br><span class="line">	tail *linkNode</span><br><span class="line">	<span class="built_in">cap</span>  <span class="type">int</span></span><br><span class="line">	le   <span class="type">int</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">type</span> linkNode <span class="keyword">struct</span> &#123;</span><br><span class="line">	k   <span class="type">int</span></span><br><span class="line">	v   <span class="type">int</span></span><br><span class="line">	pre *linkNode</span><br><span class="line">	nex *linkNode</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Constructor</span><span class="params">(<span class="built_in">cap</span> <span class="type">int</span>)</span></span> LRUCache &#123;</span><br><span class="line">	cache := LRUCache&#123;</span><br><span class="line">		m:    <span class="keyword">map</span>[<span class="type">int</span>]*linkNode&#123;&#125;,</span><br><span class="line">		head: &amp;linkNode&#123;&#125;,</span><br><span class="line">		tail: &amp;linkNode&#123;&#125;,</span><br><span class="line">		<span class="built_in">cap</span>:  <span class="built_in">cap</span>,</span><br><span class="line">		le:   <span class="number">0</span>,</span><br><span class="line">	&#125;</span><br><span class="line">	cache.head.nex = cache.tail</span><br><span class="line">	cache.tail.pre = cache.head</span><br><span class="line">	<span class="keyword">return</span> cache</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(cache *LRUCache)</span></span> Get(k <span class="type">int</span>) <span class="type">int</span> &#123;</span><br><span class="line">	node, e := cache.m[k]</span><br><span class="line">	<span class="keyword">if</span> !e &#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="number">-1</span></span><br><span class="line">	&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">		node.pre.nex = node.nex</span><br><span class="line">		node.nex.pre = node.pre</span><br><span class="line"></span><br><span class="line">		node.pre = cache.head</span><br><span class="line">		node.nex = cache.head.nex</span><br><span class="line">		cache.head.nex.pre = node</span><br><span class="line">		cache.head.nex = node</span><br><span class="line">		<span class="keyword">return</span> node.v</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(cache *LRUCache)</span></span> Put(k <span class="type">int</span>, v <span class="type">int</span>) &#123;</span><br><span class="line">	node, e := cache.m[k]</span><br><span class="line">	<span class="keyword">if</span> e &#123;</span><br><span class="line">		node.pre.nex = node.nex</span><br><span class="line">		node.nex.pre = node.pre</span><br><span class="line"></span><br><span class="line">		node.pre = cache.head</span><br><span class="line">		node.nex = cache.head.nex</span><br><span class="line">		cache.head.nex.pre = node</span><br><span class="line">		cache.head.nex = node</span><br><span class="line">		node.v = v</span><br><span class="line">		<span class="keyword">return</span></span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	p := &amp;linkNode&#123;</span><br><span class="line">		k:   k,</span><br><span class="line">		v:   v,</span><br><span class="line">		pre: cache.head,</span><br><span class="line">		nex: cache.head.nex,</span><br><span class="line">	&#125;</span><br><span class="line">	cache.head.nex.pre = p</span><br><span class="line">	cache.head.nex = p</span><br><span class="line"></span><br><span class="line">	cache.m[k] = p</span><br><span class="line"></span><br><span class="line">	<span class="keyword">if</span> cache.le &lt; cache.<span class="built_in">cap</span> &#123;</span><br><span class="line">		cache.le++</span><br><span class="line">	&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">		<span class="built_in">delete</span>(cache.m, cache.tail.pre.k)</span><br><span class="line">		cache.tail.pre.pre.nex = cache.tail</span><br><span class="line">		cache.tail.pre = cache.tail.pre.pre</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Your LRUCache object will be instantiated and called as such:</span></span><br><span class="line"><span class="comment"> * obj := Constructor(capacity);</span></span><br><span class="line"><span class="comment"> * param_1 := obj.Get(key);</span></span><br><span class="line"><span class="comment"> * obj.Put(key,value);</span></span><br><span class="line"><span class="comment"> */</span></span><br></pre></td></tr></table></figure>
</details>]]></content>
      <categories>
        <category>刷题</category>
        <category>每日一题</category>
      </categories>
      <tags>
        <tag>刷题</tag>
      </tags>
  </entry>
  <entry>
    <title>leetcode2591.将钱分给最多的儿童</title>
    <url>/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-10/leetcode2591-%E5%B0%86%E9%92%B1%E5%88%86%E7%BB%99%E6%9C%80%E5%A4%9A%E7%9A%84%E5%84%BF%E7%AB%A5.html</url>
    <content><![CDATA[<p><a href="https://leetcode.cn/problems/distribute-money-to-maximum-children/">原题链接 2591. 将钱分给最多的儿童</a></p>
<hr>
<details>
    <summary>展开答案</summary>

<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">distMoney</span><span class="params">(money <span class="type">int</span>, children <span class="type">int</span>)</span></span> <span class="type">int</span> &#123;</span><br><span class="line">	<span class="keyword">if</span> money &lt; children &#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="number">-1</span></span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span> i := children; i &gt;= <span class="number">0</span>; i-- &#123;</span><br><span class="line">		x := money - i*<span class="number">8</span></span><br><span class="line">		<span class="keyword">if</span> x &gt;= children-i &amp;&amp; !(children-i == <span class="number">1</span> &amp;&amp; x == <span class="number">4</span>) &amp;&amp; !(children-i == <span class="number">0</span> &amp;&amp; x != <span class="number">0</span>) &#123;</span><br><span class="line">			<span class="keyword">return</span> i</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</details>]]></content>
      <categories>
        <category>刷题</category>
        <category>每日一题</category>
      </categories>
      <tags>
        <tag>刷题</tag>
      </tags>
  </entry>
  <entry>
    <title>leetcodeLCP06.拿硬币</title>
    <url>/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-9/leetcodeLCP06-%E6%8B%BF%E7%A1%AC%E5%B8%81.html</url>
    <content><![CDATA[<p><a href="https://leetcode.cn/problems/na-ying-bi/">原题链接 LCP 06. 拿硬币</a></p>
<hr>
<details>
    <summary>展开答案</summary>

<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">minCount</span><span class="params">(coins []<span class="type">int</span>)</span></span> (ans <span class="type">int</span>) &#123;</span><br><span class="line">	<span class="keyword">for</span> _, v := <span class="keyword">range</span> coins &#123;</span><br><span class="line">		ans += (v + <span class="number">1</span>) / <span class="number">2</span></span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> ans</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</details>]]></content>
      <categories>
        <category>刷题</category>
        <category>每日一题</category>
      </categories>
      <tags>
        <tag>刷题</tag>
      </tags>
  </entry>
  <entry>
    <title>leetcodeLCR051.二叉树中的最大路径和</title>
    <url>/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-9/leetcodeLCR051-%E4%BA%8C%E5%8F%89%E6%A0%91%E4%B8%AD%E7%9A%84%E6%9C%80%E5%A4%A7%E8%B7%AF%E5%BE%84%E5%92%8C.html</url>
    <content><![CDATA[<p><a href="https://leetcode.cn/problems/jC7MId/">原题链接 LCR 051. 二叉树中的最大路径和</a></p>
<hr>
<details>
    <summary>展开答案</summary>

<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Definition for a binary tree node.</span></span><br><span class="line"><span class="comment"> * type TreeNode struct &#123;</span></span><br><span class="line"><span class="comment"> *     Val int</span></span><br><span class="line"><span class="comment"> *     Left *TreeNode</span></span><br><span class="line"><span class="comment"> *     Right *TreeNode</span></span><br><span class="line"><span class="comment"> * &#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">maxPathSum</span><span class="params">(root *TreeNode)</span></span> <span class="type">int</span> &#123;</span><br><span class="line">	max := <span class="function"><span class="keyword">func</span><span class="params">(x, y <span class="type">int</span>)</span></span> <span class="type">int</span> &#123;</span><br><span class="line">		<span class="keyword">if</span> x &gt; y &#123;</span><br><span class="line">			<span class="keyword">return</span> x</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">return</span> y</span><br><span class="line">	&#125;</span><br><span class="line">	ans := <span class="number">-0x3f3f3f3f</span></span><br><span class="line">	<span class="keyword">var</span> dfs <span class="function"><span class="keyword">func</span><span class="params">(root *TreeNode)</span></span> <span class="type">int</span></span><br><span class="line">	dfs = <span class="function"><span class="keyword">func</span><span class="params">(root *TreeNode)</span></span> <span class="type">int</span> &#123;</span><br><span class="line">		<span class="keyword">if</span> root == <span class="literal">nil</span> &#123;</span><br><span class="line">			<span class="keyword">return</span> <span class="number">0</span></span><br><span class="line">		&#125;</span><br><span class="line">		l := dfs(root.Left)</span><br><span class="line">		r := dfs(root.Right)</span><br><span class="line">		res := <span class="number">-0x3f3f3f3f</span></span><br><span class="line">		res = max(res, l+root.Val)</span><br><span class="line">		res = max(res, r+root.Val)</span><br><span class="line">		ans = max(ans, l+r+root.Val)</span><br><span class="line">		<span class="keyword">return</span> max(res, <span class="number">0</span>)</span><br><span class="line">	&#125;</span><br><span class="line">	dfs(root)</span><br><span class="line">	<span class="keyword">return</span> ans</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</details>
]]></content>
      <categories>
        <category>刷题</category>
        <category>每日一题</category>
      </categories>
      <tags>
        <tag>刷题</tag>
      </tags>
  </entry>
  <entry>
    <title>leetcode2560.打家劫舍IV</title>
    <url>/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-9/leetcode2560-%E6%89%93%E5%AE%B6%E5%8A%AB%E8%88%8DIV.html</url>
    <content><![CDATA[<p><a href="https://leetcode.cn/problems/house-robber-iv">原题链接 2560. 打家劫舍 IV</a></p>
<hr>
<details>
    <summary>展开答案</summary>

<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">minCapability</span><span class="params">(nums []<span class="type">int</span>, k <span class="type">int</span>)</span></span> <span class="type">int</span> &#123;</span><br><span class="line">	l, r := <span class="number">0</span>, <span class="number">0x3f3f3f3f</span></span><br><span class="line">	check := <span class="function"><span class="keyword">func</span><span class="params">(x <span class="type">int</span>)</span></span> <span class="type">bool</span> &#123;</span><br><span class="line">		pr := <span class="literal">false</span></span><br><span class="line">		cnt := <span class="number">0</span></span><br><span class="line">		<span class="keyword">for</span> _, v := <span class="keyword">range</span> nums &#123;</span><br><span class="line">			<span class="keyword">if</span> !pr &amp;&amp; v &lt;= x &#123;</span><br><span class="line">				pr = <span class="literal">true</span></span><br><span class="line">				cnt++</span><br><span class="line">			&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">				pr = <span class="literal">false</span></span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">return</span> cnt &gt;= k</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span> l &lt; r &#123;</span><br><span class="line">		m := (l + r) &gt;&gt; <span class="number">1</span></span><br><span class="line">		<span class="keyword">if</span> !check(m + <span class="number">1</span>) &#123;</span><br><span class="line">			l = m + <span class="number">1</span></span><br><span class="line">		&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">			r = m</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> l + <span class="number">1</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</details>
]]></content>
      <categories>
        <category>刷题</category>
        <category>每日一题</category>
      </categories>
      <tags>
        <tag>刷题</tag>
      </tags>
  </entry>
  <entry>
    <title>leetcode337.打家劫舍III</title>
    <url>/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-9/leetcode337-%E6%89%93%E5%AE%B6%E5%8A%AB%E8%88%8DIII.html</url>
    <content><![CDATA[<p><a href="https://leetcode.cn/problems/house-robber-iii/">原题链接 337. 打家劫舍 III</a></p>
<hr>
<details>
    <summary>展开答案</summary>

<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Definition for a binary tree node.</span></span><br><span class="line"><span class="comment"> * type TreeNode struct &#123;</span></span><br><span class="line"><span class="comment"> *     Val int</span></span><br><span class="line"><span class="comment"> *     Left *TreeNode</span></span><br><span class="line"><span class="comment"> *     Right *TreeNode</span></span><br><span class="line"><span class="comment"> * &#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">rob</span><span class="params">(root *TreeNode)</span></span> <span class="type">int</span> &#123;</span><br><span class="line">	max := <span class="function"><span class="keyword">func</span><span class="params">(x, y <span class="type">int</span>)</span></span> <span class="type">int</span> &#123;</span><br><span class="line">		<span class="keyword">if</span> x &gt; y &#123;</span><br><span class="line">			<span class="keyword">return</span> x</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">return</span> y</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	mp := <span class="built_in">make</span>([]<span class="keyword">map</span>[*TreeNode]<span class="type">int</span>, <span class="number">2</span>)</span><br><span class="line">	<span class="keyword">for</span> i := <span class="number">0</span>; i &lt; <span class="number">2</span>; i++ &#123;</span><br><span class="line">		mp[i] = <span class="built_in">make</span>(<span class="keyword">map</span>[*TreeNode]<span class="type">int</span>, <span class="number">0</span>)</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">var</span> dfs <span class="function"><span class="keyword">func</span><span class="params">(root *TreeNode, use <span class="type">int</span>)</span></span> <span class="type">int</span></span><br><span class="line">	dfs = <span class="function"><span class="keyword">func</span><span class="params">(root *TreeNode, use <span class="type">int</span>)</span></span> <span class="type">int</span> &#123;</span><br><span class="line">		<span class="keyword">if</span> root == <span class="literal">nil</span> &#123;</span><br><span class="line">			<span class="keyword">return</span> <span class="number">0</span></span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span> x, ok := mp[use][root]; ok &#123;</span><br><span class="line">			<span class="keyword">return</span> x</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span> use == <span class="number">1</span> &#123;</span><br><span class="line">			mp[use][root] = dfs(root.Left, <span class="number">0</span>) + dfs(root.Right, <span class="number">0</span>) + root.Val</span><br><span class="line">		&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">			mp[use][root] = max(dfs(root.Left, <span class="number">0</span>), dfs(root.Left, <span class="number">1</span>)) + max(dfs(root.Right, <span class="number">0</span>), dfs(root.Right, <span class="number">1</span>))</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">return</span> mp[use][root]</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> max(dfs(root, <span class="number">0</span>), dfs(root, <span class="number">1</span>))</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</details>]]></content>
      <categories>
        <category>刷题</category>
        <category>每日一题</category>
      </categories>
      <tags>
        <tag>刷题</tag>
      </tags>
  </entry>
  <entry>
    <title>leetcode198.打家劫舍</title>
    <url>/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-9/leetcode198-%E6%89%93%E5%AE%B6%E5%8A%AB%E8%88%8D.html</url>
    <content><![CDATA[<p><a href="https://leetcode.cn/problems/house-robber/">原题链接 198. 打家劫舍</a></p>
<hr>
<details>
    <summary>展开答案</summary>

<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">rob</span><span class="params">(nums []<span class="type">int</span>)</span></span> <span class="type">int</span> &#123;</span><br><span class="line">	max := <span class="function"><span class="keyword">func</span><span class="params">(x, y <span class="type">int</span>)</span></span> <span class="type">int</span> &#123;</span><br><span class="line">		<span class="keyword">if</span> x &gt; y &#123;</span><br><span class="line">			<span class="keyword">return</span> x</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">return</span> y</span><br><span class="line">	&#125;</span><br><span class="line">	a0, a1 := <span class="number">0</span>, <span class="number">0</span></span><br><span class="line">	<span class="keyword">for</span> _, v := <span class="keyword">range</span> nums &#123;</span><br><span class="line">		a0, a1 = max(a0, a1), a0+v</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> max(a0, a1)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</details>]]></content>
      <categories>
        <category>刷题</category>
        <category>每日一题</category>
      </categories>
      <tags>
        <tag>刷题</tag>
      </tags>
  </entry>
  <entry>
    <title>其他</title>
    <url>/%E5%85%AB%E8%82%A1/%E5%85%B6%E4%BB%96.html</url>
    <content><![CDATA[<details>
    <summary>微服务和单体服务的区别</summary>

<p>&#x2F;&#x2F;todo</p>
</details>

<hr>
<details>
    <summary>问题</summary>

<p>答案</p>
</details>

<hr>
<details>
    <summary>问题</summary>

<p>答案</p>
</details>
<span id="more"></span>

<hr>
<details>
    <summary>问题</summary>

<p>答案</p>
</details>

<hr>
<details>
    <summary>问题</summary>

<p>答案</p>
</details>

<hr>
]]></content>
      <categories>
        <category>八股</category>
        <category>其他</category>
      </categories>
      <tags>
        <tag>八股,其他</tag>
      </tags>
  </entry>
  <entry>
    <title>数据库</title>
    <url>/%E5%85%AB%E8%82%A1/%E6%95%B0%E6%8D%AE%E5%BA%93.html</url>
    <content><![CDATA[<details>
    <summary>基本sql</summary>

<p>&#x2F;&#x2F;todo</p>
</details>

<hr>
<details>
    <summary>事务，ACID</summary>

<p>一个事务是指一组数据库操作，被视为一个不可分割的工作单位。它要么全部成功执行，要么全部失败回滚。事务可以包含多个数据库操作，这些操作必须作为一个整体被执行，以确保数据的一致性和完整性。</p>
<table>
<thead>
<tr>
<th></th>
<th>定义</th>
</tr>
</thead>
<tbody><tr>
<td>原子性（atomicity）</td>
<td>原子性确保事务中的所有操作要么全部成功执行，要么全部失败回滚。如果事务中的任何操作失败，那么整个事务将被回滚到初始状态，数据库不会处于部分更新的状态。原子性确保了事务的完整性。</td>
</tr>
<tr>
<td>一致性（consistency）</td>
<td>一致性确保事务在执行前后数据库始终保持一致的状态。事务应该遵循预定义的规则和约束，以确保数据的有效性和完整性。如果事务违反了任何约束，它将被回滚，数据库不会处于不一致的状态。一致性确保了数据的正确性。</td>
</tr>
<tr>
<td>隔离性（isolation）</td>
<td>隔离性确保并发执行的事务相互隔离，使得每个事务感觉就像是在独立运行的数据库中执行一样。隔离性防止了并发事务之间的相互干扰，避免了数据不一致的情况发生。各个事务之间应该是相互独立的，不会相互影响。隔离性确保了事务的独立性和正确性。</td>
</tr>
<tr>
<td>持久性（durability）</td>
<td>持久性确保一旦事务提交，其结果将永久保存在数据库中，并且对于任何系统故障或重启都是可靠的。持久性保证了事务的结果不会因为系统故障而丢失，即使在系统崩溃后重新启动，数据也能够恢复到提交事务后的状态。持久性确保了数据的持久性。</td>
</tr>
</tbody></table>
</details>

<hr>
<details>
    <summary>隔离级别</summary>

<table>
<thead>
<tr>
<th>隔离级别</th>
<th>导致的问题</th>
<th>解决的问题</th>
</tr>
</thead>
<tbody><tr>
<td>读未提交</td>
<td>脏读（Dirty Read）：事务可以读取到其他未提交事务的未提交数据。</td>
<td>无</td>
</tr>
<tr>
<td>读已提交</td>
<td>不可重复读（Non-repeatable Read）：同一事务内两次读取同一行数据时，得到的结果可能不一致。</td>
<td>解决了脏读问题，但无法解决幻影读问题。</td>
</tr>
<tr>
<td>可重复读</td>
<td>幻影读（Phantom Read）：同一事务内多次查询时，得到的结果集可能不一致。</td>
<td>解决了脏读和不可重复读问题，但无法避免幻影读问题。</td>
</tr>
<tr>
<td>串行化</td>
<td>无</td>
<td>解决了脏读、不可重复读和幻影读问题，完全隔离了事务，但并发性能较差。</td>
</tr>
</tbody></table>
</details>
<span id="more"></span>

<hr>
<details>
    <summary>主键，外键，索引的区别</summary>

<p>&#x2F;&#x2F;todo</p>
</details>

<hr>
<details>
    <summary>联合索引的命中率</summary>

<p>&#x2F;&#x2F;todo -2</p>
</details>

<hr>
<details>
    <summary>Armstrong公理</summary>

<p>&#x2F;&#x2F;todo</p>
</details>

<hr>
<details>
    <summary>数据不一致的根本原因</summary>

<p>&#x2F;&#x2F;todo</p>
</details>

<hr>
<details>
    <summary>问题</summary>

<p>答案</p>
</details>

<hr>
<details>
    <summary>问题</summary>

<p>答案</p>
</details>

<hr>
]]></content>
      <categories>
        <category>八股</category>
        <category>数据库</category>
      </categories>
      <tags>
        <tag>八股,数据库</tag>
      </tags>
  </entry>
  <entry>
    <title>场景题</title>
    <url>/%E5%85%AB%E8%82%A1/%E5%9C%BA%E6%99%AF%E9%A2%98.html</url>
    <content><![CDATA[<details>
    <summary>求两个大文件的交集</summary>

<p>&#x2F;&#x2F;todo</p>
</details>

<hr>
<details>
    <summary>问题</summary>

<p>答案</p>
</details>

<hr>
<details>
    <summary>问题</summary>

<p>答案</p>
</details>
<span id="more"></span>

<hr>
<details>
    <summary>问题</summary>

<p>答案</p>
</details>

<hr>
]]></content>
      <categories>
        <category>八股</category>
        <category>场景题</category>
      </categories>
      <tags>
        <tag>八股,场景题</tag>
      </tags>
  </entry>
  <entry>
    <title>leetcode50.宝石补给</title>
    <url>/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-9/leetcode50-%E5%AE%9D%E7%9F%B3%E8%A1%A5%E7%BB%99.html</url>
    <content><![CDATA[<p><a href="https://leetcode.cn/problems/WHnhjV/">原题链接 50. 宝石补给</a></p>
<hr>
<details>
    <summary>展开答案</summary>

<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">giveGem</span><span class="params">(gem []<span class="type">int</span>, operations [][]<span class="type">int</span>)</span></span> <span class="type">int</span> &#123;</span><br><span class="line">	<span class="keyword">for</span> _, v := <span class="keyword">range</span> operations &#123;</span><br><span class="line">		det := gem[v[<span class="number">0</span>]] / <span class="number">2</span></span><br><span class="line">		gem[v[<span class="number">0</span>]] -= det</span><br><span class="line">		gem[v[<span class="number">1</span>]] += det</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	ma, mi := <span class="number">-1</span>, <span class="number">0x3f3f3f3f</span></span><br><span class="line">	<span class="keyword">for</span> _, v := <span class="keyword">range</span> gem &#123;</span><br><span class="line">		<span class="keyword">if</span> ma &lt; v &#123;</span><br><span class="line">			ma = v</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span> mi &gt; v &#123;</span><br><span class="line">			mi = v</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> ma - mi</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</details>]]></content>
      <categories>
        <category>刷题</category>
        <category>每日一题</category>
      </categories>
      <tags>
        <tag>刷题</tag>
      </tags>
  </entry>
  <entry>
    <title>leetcode1222.可以攻击国王的皇后</title>
    <url>/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-9/leetcode1222-%E5%8F%AF%E4%BB%A5%E6%94%BB%E5%87%BB%E5%9B%BD%E7%8E%8B%E7%9A%84%E7%9A%87%E5%90%8E.html</url>
    <content><![CDATA[<p><a href="https://leetcode.cn/problems/queens-that-can-attack-the-king">原题链接 1222. 可以攻击国王的皇后</a></p>
<hr>
<details>
    <summary>展开答案</summary>

<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">queensAttacktheKing</span><span class="params">(queens [][]<span class="type">int</span>, king []<span class="type">int</span>)</span></span> (ans [][]<span class="type">int</span>) &#123;</span><br><span class="line">	n := <span class="number">8</span></span><br><span class="line">	dx := []<span class="type">int</span>&#123;<span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">-1</span>, <span class="number">-1</span>, <span class="number">-1</span>&#125;</span><br><span class="line">	dy := []<span class="type">int</span>&#123;<span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">-1</span>, <span class="number">-1</span>, <span class="number">-1</span>, <span class="number">0</span>, <span class="number">1</span>&#125;</span><br><span class="line">	check := <span class="function"><span class="keyword">func</span><span class="params">(x, y <span class="type">int</span>)</span></span> <span class="type">bool</span> &#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="number">0</span> &lt;= x &amp;&amp; x &lt; n &amp;&amp; <span class="number">0</span> &lt;= y &amp;&amp; y &lt; n</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	qm := <span class="built_in">make</span>(<span class="keyword">map</span>[[<span class="number">2</span>]<span class="type">int</span>]<span class="type">bool</span>, <span class="built_in">len</span>(queens))</span><br><span class="line">	<span class="keyword">for</span> _, p := <span class="keyword">range</span> queens &#123;</span><br><span class="line">		x, y := p[<span class="number">0</span>], p[<span class="number">1</span>]</span><br><span class="line">		qm[[<span class="number">2</span>]<span class="type">int</span>&#123;x, y&#125;] = <span class="literal">true</span></span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">for</span> i := <span class="number">0</span>; i &lt; <span class="number">8</span>; i++ &#123;</span><br><span class="line">		x, y := king[<span class="number">0</span>], king[<span class="number">1</span>]</span><br><span class="line">		<span class="comment">// fmt.Println(x,y,dx[i],dy[i])</span></span><br><span class="line">		<span class="keyword">for</span> check(x, y) &#123;</span><br><span class="line">			<span class="comment">// fmt.Println(1,x,y)</span></span><br><span class="line">			<span class="keyword">if</span> qm[[<span class="number">2</span>]<span class="type">int</span>&#123;x, y&#125;] &#123;</span><br><span class="line">				ans = <span class="built_in">append</span>(ans, []<span class="type">int</span>&#123;x, y&#125;)</span><br><span class="line">				<span class="keyword">break</span></span><br><span class="line">			&#125;</span><br><span class="line">			x, y = x+dx[i], y+dy[i]</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> ans</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</details>]]></content>
      <categories>
        <category>刷题</category>
        <category>每日一题</category>
      </categories>
      <tags>
        <tag>刷题</tag>
      </tags>
  </entry>
  <entry>
    <title>leetcode2596.检查骑士巡视方案</title>
    <url>/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-9/leetcode2596-%E6%A3%80%E6%9F%A5%E9%AA%91%E5%A3%AB%E5%B7%A1%E8%A7%86%E6%96%B9%E6%A1%88.html</url>
    <content><![CDATA[<p><a href="https://leetcode.cn/problems/check-knight-tour-configuration/">原题链接 2596. 检查骑士巡视方案</a></p>
<hr>
<details>
    <summary>展开答案</summary>

<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">checkValidGrid</span><span class="params">(grid [][]<span class="type">int</span>)</span></span> <span class="type">bool</span> &#123;</span><br><span class="line">	<span class="keyword">type</span> node <span class="keyword">struct</span> &#123;</span><br><span class="line">		x, y <span class="type">int</span></span><br><span class="line">	&#125;</span><br><span class="line">	n := <span class="built_in">len</span>(grid)</span><br><span class="line">	mp := <span class="built_in">make</span>(<span class="keyword">map</span>[<span class="type">int</span>]node, n*n)</span><br><span class="line">	<span class="keyword">for</span> i := <span class="number">0</span>; i &lt; n; i++ &#123;</span><br><span class="line">		<span class="keyword">for</span> j := <span class="number">0</span>; j &lt; n; j++ &#123;</span><br><span class="line">			mp[grid[i][j]] = node&#123;</span><br><span class="line">				x: i,</span><br><span class="line">				y: j,</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	abs := <span class="function"><span class="keyword">func</span><span class="params">(x <span class="type">int</span>)</span></span> <span class="type">int</span> &#123;</span><br><span class="line">		<span class="keyword">if</span> x &gt; <span class="number">0</span> &#123;</span><br><span class="line">			<span class="keyword">return</span> x</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">return</span> -x</span><br><span class="line">	&#125;</span><br><span class="line">	check := <span class="function"><span class="keyword">func</span><span class="params">(a, b node)</span></span> <span class="type">bool</span> &#123;</span><br><span class="line">		<span class="keyword">if</span> abs(a.x-b.x) == <span class="number">1</span> &amp;&amp; abs(a.y-b.y) == <span class="number">2</span> &#123;</span><br><span class="line">			<span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">		&#125; <span class="keyword">else</span> <span class="keyword">if</span> abs(a.x-b.x) == <span class="number">2</span> &amp;&amp; abs(a.y-b.y) == <span class="number">1</span> &#123;</span><br><span class="line">			<span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">		&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">			<span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span> i := <span class="number">1</span>; i &lt; n*n; i++ &#123;</span><br><span class="line">		<span class="keyword">if</span> !check(mp[i], mp[i<span class="number">-1</span>]) &#123;</span><br><span class="line">			<span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> grid[<span class="number">0</span>][<span class="number">0</span>] == <span class="number">0</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</details>]]></content>
      <categories>
        <category>刷题</category>
        <category>每日一题</category>
      </categories>
      <tags>
        <tag>刷题</tag>
      </tags>
  </entry>
  <entry>
    <title>leetcode1462.课程表IV</title>
    <url>/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-9/leetcode1462-%E8%AF%BE%E7%A8%8B%E8%A1%A8IV.html</url>
    <content><![CDATA[<p><a href="https://leetcode.cn/problems/course-schedule-iv/">原题链接 1462. 课程表 IV</a></p>
<hr>
<details>
    <summary>展开答案</summary>

<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">checkIfPrerequisite</span><span class="params">(numCourses <span class="type">int</span>, prerequisites [][]<span class="type">int</span>, queries [][]<span class="type">int</span>)</span></span> (ans []<span class="type">bool</span>) &#123;</span><br><span class="line">	de := <span class="built_in">make</span>([]<span class="keyword">map</span>[<span class="type">int</span>]<span class="type">bool</span>, numCourses)</span><br><span class="line">	g := <span class="built_in">make</span>([][]<span class="type">int</span>, numCourses)</span><br><span class="line">	<span class="keyword">for</span> i := <span class="number">0</span>; i &lt; numCourses; i++ &#123;</span><br><span class="line">		g[i] = <span class="built_in">make</span>([]<span class="type">int</span>, <span class="number">0</span>)</span><br><span class="line">		de[i] = <span class="built_in">make</span>(<span class="keyword">map</span>[<span class="type">int</span>]<span class="type">bool</span>, <span class="number">0</span>)</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span> _, e := <span class="keyword">range</span> prerequisites &#123;</span><br><span class="line">		u, v := e[<span class="number">0</span>], e[<span class="number">1</span>]</span><br><span class="line">		g[v] = <span class="built_in">append</span>(g[v], u)</span><br><span class="line">	&#125;</span><br><span class="line">	vis := <span class="built_in">make</span>([]<span class="type">bool</span>, numCourses)</span><br><span class="line"></span><br><span class="line">	<span class="keyword">var</span> dfs <span class="function"><span class="keyword">func</span><span class="params">(u <span class="type">int</span>)</span></span></span><br><span class="line">	dfs = <span class="function"><span class="keyword">func</span><span class="params">(u <span class="type">int</span>)</span></span> &#123;</span><br><span class="line">		<span class="keyword">if</span> vis[u] &#123;</span><br><span class="line">			<span class="keyword">return</span></span><br><span class="line">		&#125;</span><br><span class="line">		vis[u] = <span class="literal">true</span></span><br><span class="line">		<span class="keyword">for</span> _, v := <span class="keyword">range</span> g[u] &#123;</span><br><span class="line">			dfs(v)</span><br><span class="line">			<span class="keyword">for</span> e, _ := <span class="keyword">range</span> de[v] &#123;</span><br><span class="line">				de[u][e] = <span class="literal">true</span></span><br><span class="line">			&#125;</span><br><span class="line">			de[u][v] = <span class="literal">true</span></span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span> i := <span class="number">0</span>; i &lt; numCourses; i++ &#123;</span><br><span class="line">		dfs(i)</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span> _, e := <span class="keyword">range</span> queries &#123;</span><br><span class="line">		u, v := e[<span class="number">0</span>], e[<span class="number">1</span>]</span><br><span class="line">		ans = <span class="built_in">append</span>(ans, de[v][u])</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> ans</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</details>]]></content>
      <categories>
        <category>刷题</category>
        <category>每日一题</category>
      </categories>
      <tags>
        <tag>刷题</tag>
      </tags>
  </entry>
  <entry>
    <title>leetcode210.课程表II</title>
    <url>/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-9/leetcode210-%E8%AF%BE%E7%A8%8B%E8%A1%A8II.html</url>
    <content><![CDATA[<p><a href="https://leetcode.cn/problems/course-schedule-ii">原题链接 210. 课程表 II</a></p>
<hr>
<details>
    <summary>展开答案</summary>

<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">findOrder</span><span class="params">(numCourses <span class="type">int</span>, prerequisites [][]<span class="type">int</span>)</span></span> (ans []<span class="type">int</span>) &#123;</span><br><span class="line">	g := <span class="built_in">make</span>([][]<span class="type">int</span>, numCourses)</span><br><span class="line">	in := <span class="built_in">make</span>([]<span class="type">int</span>, numCourses)</span><br><span class="line">	vis := <span class="built_in">make</span>([]<span class="type">bool</span>, numCourses)</span><br><span class="line">	<span class="keyword">for</span> i := <span class="number">0</span>; i &lt; numCourses; i++ &#123;</span><br><span class="line">		g[i] = <span class="built_in">make</span>([]<span class="type">int</span>, <span class="number">0</span>)</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span> _, e := <span class="keyword">range</span> prerequisites &#123;</span><br><span class="line">		u, v := e[<span class="number">0</span>], e[<span class="number">1</span>]</span><br><span class="line">		g[v] = <span class="built_in">append</span>(g[v], u)</span><br><span class="line">		in[u]++</span><br><span class="line">	&#125;</span><br><span class="line">	q, hh, tt := <span class="built_in">make</span>([]<span class="type">int</span>, numCourses), <span class="number">0</span>, <span class="number">0</span></span><br><span class="line">	<span class="keyword">for</span> i := <span class="number">0</span>; i &lt; numCourses; i++ &#123;</span><br><span class="line">		<span class="keyword">if</span> in[i] == <span class="number">0</span> &#123;</span><br><span class="line">			q[tt], tt = i, tt+<span class="number">1</span></span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span> hh &lt; tt &#123;</span><br><span class="line">		u := q[hh]</span><br><span class="line">		hh++</span><br><span class="line">		<span class="keyword">if</span> vis[u] &#123;</span><br><span class="line">			<span class="keyword">continue</span></span><br><span class="line">		&#125;</span><br><span class="line">		ans = <span class="built_in">append</span>(ans, u)</span><br><span class="line">		vis[u] = <span class="literal">true</span></span><br><span class="line">		<span class="keyword">for</span> _, v := <span class="keyword">range</span> g[u] &#123;</span><br><span class="line">			in[v]--</span><br><span class="line">			<span class="keyword">if</span> in[v] == <span class="number">0</span> &#123;</span><br><span class="line">				q[tt], tt = v, tt+<span class="number">1</span></span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span> <span class="built_in">len</span>(ans) != numCourses &#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> ans</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</details>]]></content>
      <categories>
        <category>刷题</category>
        <category>每日一题</category>
      </categories>
      <tags>
        <tag>刷题</tag>
      </tags>
  </entry>
  <entry>
    <title>abc319E-Bus-Stops</title>
    <url>/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-9/abc319E-Bus-Stops.html</url>
    <content><![CDATA[<p><a href="https://atcoder.jp/contests/abc319/tasks/abc319_e">原题链接 abc319 E - Bus Stops</a></p>
<hr>
<details>
    <summary>展开答案</summary>

<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int long long</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> PII pair<span class="string">&lt;int,int&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> x first</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> y second</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">2e5</span> + <span class="number">9</span>, INF = <span class="number">1e18</span> + <span class="number">7</span>;</span><br><span class="line"><span class="type">int</span> T, n, m, p[N], t[N], q, x, y;</span><br><span class="line"><span class="type">int</span> ans[<span class="number">1681</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">	cin &gt;&gt; n &gt;&gt; x &gt;&gt; y;</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt; n; i++) cin &gt;&gt; p[i] &gt;&gt; t[i];</span><br><span class="line"></span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> s = <span class="number">0</span>; s &lt; <span class="number">1681</span>; s++) &#123;</span><br><span class="line">		<span class="type">int</span> res = (s + p[<span class="number">1</span>] - <span class="number">1</span>) / p[<span class="number">1</span>] * p[<span class="number">1</span>];</span><br><span class="line">		<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">2</span>; i &lt; n; i++) &#123;</span><br><span class="line">			res += t[i - <span class="number">1</span>];</span><br><span class="line">			res = ((res + p[i] - <span class="number">1</span>) / p[i]) * p[i];</span><br><span class="line">			<span class="comment">//			if (s == 0) &#123;</span></span><br><span class="line">			<span class="comment">//				cout &lt;&lt; &quot;res &quot; &lt;&lt; res &lt;&lt; &quot;\n&quot;;</span></span><br><span class="line">			<span class="comment">//			&#125;</span></span><br><span class="line">		&#125;</span><br><span class="line">		ans[s] = res - s + t[n - <span class="number">1</span>];</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">//	for (int i = 0; i &lt; 9; i++) &#123;</span></span><br><span class="line">	<span class="comment">//		cout &lt;&lt; i &lt;&lt; &quot; &quot; &lt;&lt; ans[i] &lt;&lt; &quot;\n&quot;;</span></span><br><span class="line">	<span class="comment">//	&#125;</span></span><br><span class="line">	cin &gt;&gt; T;</span><br><span class="line">	<span class="keyword">while</span> (T--) &#123;</span><br><span class="line">		cin &gt;&gt; q;</span><br><span class="line">		<span class="type">int</span> res = ans[(x + q) % <span class="number">1680</span>];</span><br><span class="line">		res += q + x + y;</span><br><span class="line">		cout &lt;&lt; res &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">		<span class="comment">//		cout &lt;&lt; &quot;\t&quot; &lt;&lt; res &lt;&lt; &quot;\n&quot;;</span></span><br><span class="line"></span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</details>]]></content>
      <categories>
        <category>刷题</category>
        <category>每日一题</category>
      </categories>
      <tags>
        <tag>刷题</tag>
      </tags>
  </entry>
  <entry>
    <title>abc319D-Minimum-Width</title>
    <url>/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-9/abc319D-Minimum-Width.html</url>
    <content><![CDATA[<p><a href="https://atcoder.jp/contests/abc319/tasks/abc319_d">原题链接 abc319 D - Minimum Width</a></p>
<hr>
<details>
    <summary>展开答案</summary>

<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int long long</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> PII pair<span class="string">&lt;int,int&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> x first</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> y second</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">2e5</span> + <span class="number">9</span>, INF = <span class="number">1e18</span> + <span class="number">7</span>;</span><br><span class="line"><span class="type">int</span> T, n, m, a[N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">check</span><span class="params">(<span class="type">int</span> x)</span> </span>&#123;</span><br><span class="line">	<span class="comment">//	cout &lt;&lt; x &lt;&lt; &quot;\n&quot;;</span></span><br><span class="line">	<span class="type">int</span> cur = <span class="number">1</span>, le = <span class="number">0</span>;</span><br><span class="line">	<span class="type">int</span> r = m;</span><br><span class="line">	<span class="keyword">while</span> (cur &lt;= n) &#123;</span><br><span class="line">		<span class="comment">//		cout &lt;&lt; cur &lt;&lt; &quot;\n&quot;;</span></span><br><span class="line">		le = <span class="number">0</span>;</span><br><span class="line">		<span class="type">int</span> b = <span class="number">0</span>;</span><br><span class="line">		<span class="keyword">while</span> (cur &lt;= n &amp;&amp; le + a[cur] + b &lt;= x) &#123;</span><br><span class="line">			le += a[cur] + b;</span><br><span class="line">			<span class="keyword">if</span> (!b) b = <span class="number">1</span>;</span><br><span class="line">			cur++;</span><br><span class="line">		&#125;</span><br><span class="line">		r--;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> r &gt;= <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">	<span class="comment">//	cout &lt;&lt; fixed &lt;&lt; setprecision(20);</span></span><br><span class="line"></span><br><span class="line">	cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line">	<span class="type">int</span> l = <span class="number">1</span>, r = INF;</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">		cin &gt;&gt; a[i];</span><br><span class="line">		l = <span class="built_in">max</span>(l, a[i]);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">while</span> (l &lt; r) &#123;</span><br><span class="line">		<span class="type">int</span> m = (l + r) &gt;&gt; <span class="number">1</span>;</span><br><span class="line">		<span class="comment">//		cout &lt;&lt; l &lt;&lt; &quot; &quot; &lt;&lt; r &lt;&lt; &quot;\n&quot;;</span></span><br><span class="line">		<span class="keyword">if</span> (!<span class="built_in">check</span>(m)) &#123;</span><br><span class="line">			l = m + <span class="number">1</span>;</span><br><span class="line">		&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">			r = m;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	cout &lt;&lt; l;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</details>]]></content>
      <categories>
        <category>刷题</category>
        <category>每日一题</category>
      </categories>
      <tags>
        <tag>刷题</tag>
      </tags>
  </entry>
  <entry>
    <title>leetcode207.课程表</title>
    <url>/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-9/leetcode207-%E8%AF%BE%E7%A8%8B%E8%A1%A8.html</url>
    <content><![CDATA[<p><a href="https://leetcode.cn/problems/course-schedule/">原题链接 207. 课程表</a></p>
<hr>
<details>
    <summary>展开答案</summary>

<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">canFinish</span><span class="params">(numCourses <span class="type">int</span>, prerequisites [][]<span class="type">int</span>)</span></span> (ans <span class="type">bool</span>) &#123;</span><br><span class="line">	n := numCourses</span><br><span class="line">	a := <span class="built_in">make</span>([]<span class="type">bool</span>, n)</span><br><span class="line">	vis := <span class="built_in">make</span>([]<span class="type">bool</span>, n)</span><br><span class="line">	g := <span class="built_in">make</span>([][]<span class="type">int</span>, n)</span><br><span class="line">	<span class="keyword">for</span> i := <span class="number">0</span>; i &lt; n; i++ &#123;</span><br><span class="line">		g[i] = <span class="built_in">make</span>([]<span class="type">int</span>, <span class="number">0</span>)</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">for</span> _, e := <span class="keyword">range</span> prerequisites &#123;</span><br><span class="line">		u, v := e[<span class="number">0</span>], e[<span class="number">1</span>]</span><br><span class="line">		g[u] = <span class="built_in">append</span>(g[u], v)</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">var</span> dfs <span class="function"><span class="keyword">func</span><span class="params">(u <span class="type">int</span>)</span></span> <span class="type">bool</span></span><br><span class="line">	dfs = <span class="function"><span class="keyword">func</span><span class="params">(u <span class="type">int</span>)</span></span> <span class="type">bool</span> &#123;</span><br><span class="line">		<span class="keyword">if</span> vis[u] &#123;</span><br><span class="line">			<span class="keyword">return</span> a[u]</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span> <span class="built_in">len</span>(g[u]) == <span class="number">0</span> &#123;</span><br><span class="line">			<span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">		&#125;</span><br><span class="line">		vis[u] = <span class="literal">true</span></span><br><span class="line">		res := <span class="literal">true</span></span><br><span class="line">		<span class="keyword">for</span> _, v := <span class="keyword">range</span> g[u] &#123;</span><br><span class="line">			res = res &amp;&amp; dfs(v)</span><br><span class="line">		&#125;</span><br><span class="line">		a[u] = res</span><br><span class="line">		<span class="keyword">return</span> res</span><br><span class="line">	&#125;</span><br><span class="line">	ans = <span class="literal">true</span></span><br><span class="line">	<span class="keyword">for</span> i := <span class="number">0</span>; i &lt; n; i++ &#123;</span><br><span class="line">		ans = ans &amp;&amp; dfs(i)</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> ans</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</details>]]></content>
      <categories>
        <category>刷题</category>
        <category>每日一题</category>
      </categories>
      <tags>
        <tag>刷题</tag>
      </tags>
  </entry>
  <entry>
    <title>leetcode2651.计算列车到站时间</title>
    <url>/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-9/leetcode2651-%E8%AE%A1%E7%AE%97%E5%88%97%E8%BD%A6%E5%88%B0%E7%AB%99%E6%97%B6%E9%97%B4.html</url>
    <content><![CDATA[<p><a href="https://leetcode.cn/problems/calculate-delayed-arrival-time/">原题链接 2651. 计算列车到站时间</a></p>
<hr>
<details>
    <summary>展开答案</summary>

<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">findDelayedArrivalTime</span><span class="params">(arrivalTime <span class="type">int</span>, delayedTime <span class="type">int</span>)</span></span> <span class="type">int</span> &#123;</span><br><span class="line">	<span class="keyword">return</span> (arrivalTime + delayedTime) % <span class="number">24</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</details>]]></content>
      <categories>
        <category>刷题</category>
        <category>每日一题</category>
      </categories>
      <tags>
        <tag>刷题</tag>
      </tags>
  </entry>
  <entry>
    <title>leetcode2594.修车的最少时间</title>
    <url>/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-9/leetcode2594-%E4%BF%AE%E8%BD%A6%E7%9A%84%E6%9C%80%E5%B0%91%E6%97%B6%E9%97%B4.html</url>
    <content><![CDATA[<p><a href="https://leetcode.cn/problems/minimum-time-to-repair-cars">原题链接 2594. 修车的最少时间</a></p>
<hr>
<details>
    <summary>展开答案</summary>

<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">repairCars</span><span class="params">(ranks []<span class="type">int</span>, cars <span class="type">int</span>)</span></span> <span class="type">int64</span> &#123;</span><br><span class="line">	check := <span class="function"><span class="keyword">func</span><span class="params">(x <span class="type">int64</span>)</span></span> <span class="type">bool</span> &#123;</span><br><span class="line">		cnt := <span class="number">0</span></span><br><span class="line">		<span class="keyword">for</span> _, v := <span class="keyword">range</span> ranks &#123;</span><br><span class="line">			tmp := math.Sqrt(<span class="type">float64</span>(x) / <span class="type">float64</span>(v))</span><br><span class="line">			cnt += <span class="type">int</span>(math.Floor(tmp))</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">return</span> cnt &lt; cars</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">var</span> l, r <span class="type">int64</span> = <span class="number">1</span>, <span class="number">1e15</span></span><br><span class="line">	<span class="keyword">for</span> l &lt; r &#123;</span><br><span class="line">		m := (l + r) &gt;&gt; <span class="number">1</span></span><br><span class="line">		<span class="keyword">if</span> check(m) &#123;</span><br><span class="line">			l = m + <span class="number">1</span></span><br><span class="line">		&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">			r = m</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> l</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</details>]]></content>
      <categories>
        <category>刷题</category>
        <category>每日一题</category>
      </categories>
      <tags>
        <tag>刷题</tag>
      </tags>
  </entry>
  <entry>
    <title>leetcode1123.最深叶节点的最近公共祖先</title>
    <url>/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-9/leetcode1123-%E6%9C%80%E6%B7%B1%E5%8F%B6%E8%8A%82%E7%82%B9%E7%9A%84%E6%9C%80%E8%BF%91%E5%85%AC%E5%85%B1%E7%A5%96%E5%85%88.html</url>
    <content><![CDATA[<p><a href="https://leetcode.cn/problems/lowest-common-ancestor-of-deepest-leaves/">原题链接 1123.最深叶节点的最近公共祖先</a></p>
<hr>
<details>
    <summary>展开答案</summary>

<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Definition for a binary tree node.</span></span><br><span class="line"><span class="comment"> * type TreeNode struct &#123;</span></span><br><span class="line"><span class="comment"> *     Val int</span></span><br><span class="line"><span class="comment"> *     Left *TreeNode</span></span><br><span class="line"><span class="comment"> *     Right *TreeNode</span></span><br><span class="line"><span class="comment"> * &#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">lcaDeepestLeaves</span><span class="params">(root *TreeNode)</span></span> (ans *TreeNode) &#123;</span><br><span class="line">	rmadep, rcnt, rdep := <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span></span><br><span class="line">	<span class="keyword">var</span> dfs <span class="function"><span class="keyword">func</span><span class="params">(root *TreeNode, dep <span class="type">int</span>)</span></span> (madep, cnt <span class="type">int</span>)</span><br><span class="line">	dfs = <span class="function"><span class="keyword">func</span><span class="params">(root *TreeNode, dep <span class="type">int</span>)</span></span> (madep, cnt <span class="type">int</span>) &#123;</span><br><span class="line">		<span class="keyword">if</span> root == <span class="literal">nil</span> &#123;</span><br><span class="line">			<span class="keyword">return</span> dep, <span class="number">1</span></span><br><span class="line">		&#125;</span><br><span class="line">		ld, lc := dfs(root.Left, dep+<span class="number">1</span>)</span><br><span class="line">		rd, rc := dfs(root.Right, dep+<span class="number">1</span>)</span><br><span class="line">		<span class="keyword">if</span> ld &lt; rd &#123;</span><br><span class="line">			madep = rd</span><br><span class="line">			cnt = rc</span><br><span class="line">		&#125; <span class="keyword">else</span> <span class="keyword">if</span> ld &gt; rd &#123;</span><br><span class="line">			madep = ld</span><br><span class="line">			cnt = lc</span><br><span class="line">		&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">			madep = ld</span><br><span class="line">			cnt = lc + rc</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="keyword">if</span> madep &gt; rmadep &#123;</span><br><span class="line">			rmadep = madep</span><br><span class="line">			rcnt = cnt</span><br><span class="line">			rdep = dep</span><br><span class="line">			ans = root</span><br><span class="line">		&#125; <span class="keyword">else</span> <span class="keyword">if</span> madep == rmadep &#123;</span><br><span class="line">			<span class="keyword">if</span> cnt &gt; rcnt &#123;</span><br><span class="line">				rmadep = madep</span><br><span class="line">				rcnt = cnt</span><br><span class="line">				rdep = dep</span><br><span class="line">				ans = root</span><br><span class="line">			&#125; <span class="keyword">else</span> <span class="keyword">if</span> dep &gt; rdep &#123;</span><br><span class="line">				rmadep = madep</span><br><span class="line">				rcnt = cnt</span><br><span class="line">				rdep = dep</span><br><span class="line">				ans = root</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="keyword">return</span></span><br><span class="line">	&#125;</span><br><span class="line">	dfs(root, <span class="number">0</span>)</span><br><span class="line">	<span class="keyword">return</span> ans</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</details>]]></content>
      <categories>
        <category>刷题</category>
        <category>每日一题</category>
      </categories>
      <tags>
        <tag>刷题</tag>
      </tags>
  </entry>
  <entry>
    <title>leetcode2605.从两个数字数组里生成最小数字</title>
    <url>/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-9/leetcode2605-%E4%BB%8E%E4%B8%A4%E4%B8%AA%E6%95%B0%E5%AD%97%E6%95%B0%E7%BB%84%E9%87%8C%E7%94%9F%E6%88%90%E6%9C%80%E5%B0%8F%E6%95%B0%E5%AD%97.html</url>
    <content><![CDATA[<p><a href="https://leetcode.cn/problems/form-smallest-number-from-two-digit-arrays/">原题链接 2605. 从两个数字数组里生成最小数字</a></p>
<hr>
<details>
    <summary>展开答案</summary>

<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">minNumber</span><span class="params">(nums1 []<span class="type">int</span>, nums2 []<span class="type">int</span>)</span></span> <span class="type">int</span> &#123;</span><br><span class="line">	mp1 := <span class="built_in">make</span>([]<span class="type">bool</span>, <span class="number">10</span>)</span><br><span class="line">	<span class="keyword">for</span> _, v := <span class="keyword">range</span> nums1 &#123;</span><br><span class="line">		mp1[v] = <span class="literal">true</span></span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	mp2 := <span class="built_in">make</span>([]<span class="type">bool</span>, <span class="number">10</span>)</span><br><span class="line">	<span class="keyword">for</span> _, v := <span class="keyword">range</span> nums2 &#123;</span><br><span class="line">		mp2[v] = <span class="literal">true</span></span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span> i := <span class="number">0</span>; i &lt; <span class="number">10</span>; i++ &#123;</span><br><span class="line">		<span class="keyword">if</span> mp1[i] &amp;&amp; mp2[i] &#123;</span><br><span class="line">			<span class="keyword">return</span> i</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span> i := <span class="number">0</span>; i &lt; <span class="number">10</span>; i++ &#123;</span><br><span class="line">		<span class="keyword">if</span> mp1[i] &#123;</span><br><span class="line">			<span class="keyword">for</span> j := i + <span class="number">1</span>; j &lt; <span class="number">10</span>; j++ &#123;</span><br><span class="line">				<span class="keyword">if</span> mp2[j] &#123;</span><br><span class="line">					<span class="keyword">return</span> i*<span class="number">10</span> + j</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span> mp2[i] &#123;</span><br><span class="line">			<span class="keyword">for</span> j := i + <span class="number">1</span>; j &lt; <span class="number">10</span>; j++ &#123;</span><br><span class="line">				<span class="keyword">if</span> mp1[j] &#123;</span><br><span class="line">					<span class="keyword">return</span> i*<span class="number">10</span> + j</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">-1</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</details>]]></content>
      <categories>
        <category>刷题</category>
        <category>每日一题</category>
      </categories>
      <tags>
        <tag>刷题</tag>
      </tags>
  </entry>
  <entry>
    <title>leetcode449.序列化和反序列化二叉搜索树</title>
    <url>/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-9/leetcode449-%E5%BA%8F%E5%88%97%E5%8C%96%E5%92%8C%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91.html</url>
    <content><![CDATA[<p><a href="https://leetcode.cn/problems/serialize-and-deserialize-bst/description">原题链接 449. 序列化和反序列化二叉搜索树</a></p>
<hr>
<details>
    <summary>展开答案</summary>

<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Definition for a binary tree node.</span></span><br><span class="line"><span class="comment"> * type TreeNode struct &#123;</span></span><br><span class="line"><span class="comment"> *     Val int</span></span><br><span class="line"><span class="comment"> *     Left *TreeNode</span></span><br><span class="line"><span class="comment"> *     Right *TreeNode</span></span><br><span class="line"><span class="comment"> * &#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> Codec <span class="keyword">struct</span> &#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Constructor</span><span class="params">()</span></span> Codec &#123;</span><br><span class="line">	<span class="keyword">return</span> Codec&#123;&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Serializes a tree to a single string.</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(this *Codec)</span></span> serialize(root *TreeNode) <span class="type">string</span> &#123;</span><br><span class="line">	ans := <span class="built_in">make</span>([]<span class="type">string</span>, <span class="number">0</span>)</span><br><span class="line">	<span class="keyword">var</span> dfs <span class="function"><span class="keyword">func</span><span class="params">(root *TreeNode)</span></span></span><br><span class="line">	dfs = <span class="function"><span class="keyword">func</span><span class="params">(root *TreeNode)</span></span> &#123;</span><br><span class="line">		<span class="keyword">if</span> root == <span class="literal">nil</span> &#123;</span><br><span class="line">			<span class="keyword">return</span></span><br><span class="line">		&#125;</span><br><span class="line">		ans = <span class="built_in">append</span>(ans, strconv.Itoa(root.Val))</span><br><span class="line">		dfs(root.Left)</span><br><span class="line">		dfs(root.Right)</span><br><span class="line">	&#125;</span><br><span class="line">	dfs(root)</span><br><span class="line">	<span class="keyword">return</span> strings.Join(ans, <span class="string">&quot; &quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Deserializes your encoded data to tree.</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(this *Codec)</span></span> deserialize(data <span class="type">string</span>) *TreeNode &#123;</span><br><span class="line">	<span class="keyword">if</span> <span class="built_in">len</span>(data) == <span class="number">0</span> &#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">	&#125;</span><br><span class="line">	tmp := strings.Split(data, <span class="string">&quot; &quot;</span>)</span><br><span class="line">	a := <span class="built_in">make</span>([]<span class="type">int</span>, <span class="built_in">len</span>(tmp))</span><br><span class="line">	<span class="keyword">for</span> i := <span class="number">0</span>; i &lt; <span class="built_in">len</span>(tmp); i++ &#123;</span><br><span class="line">		a[i], _ = strconv.Atoi(tmp[i])</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">var</span> dfs <span class="function"><span class="keyword">func</span><span class="params">(data []<span class="type">int</span>)</span></span> *TreeNode</span><br><span class="line">	dfs = <span class="function"><span class="keyword">func</span><span class="params">(data []<span class="type">int</span>)</span></span> *TreeNode &#123;</span><br><span class="line">		<span class="keyword">if</span> <span class="built_in">len</span>(data) == <span class="number">0</span> &#123;</span><br><span class="line">			<span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">		&#125;</span><br><span class="line">		root := &amp;TreeNode&#123;Val: data[<span class="number">0</span>]&#125;</span><br><span class="line">		m := <span class="number">0</span></span><br><span class="line">		<span class="keyword">for</span> i := <span class="number">0</span>; i &lt; <span class="built_in">len</span>(data); i++ &#123;</span><br><span class="line">			<span class="keyword">if</span> data[i] &gt; data[<span class="number">0</span>] &#123;</span><br><span class="line">				m = i</span><br><span class="line">				<span class="keyword">break</span></span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span> m == <span class="number">0</span> &#123;</span><br><span class="line">			m = <span class="built_in">len</span>(data)</span><br><span class="line">		&#125;</span><br><span class="line">		root.Left = dfs(data[<span class="number">1</span>:m])</span><br><span class="line">		root.Right = dfs(data[m:])</span><br><span class="line">		<span class="keyword">return</span> root</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> dfs(a)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Your Codec object will be instantiated and called as such:</span></span><br><span class="line"><span class="comment"> * ser := Constructor()</span></span><br><span class="line"><span class="comment"> * deser := Constructor()</span></span><br><span class="line"><span class="comment"> * tree := ser.serialize(root)</span></span><br><span class="line"><span class="comment"> * ans := deser.deserialize(tree)</span></span><br><span class="line"><span class="comment"> * return ans</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>
</details>]]></content>
      <categories>
        <category>刷题</category>
        <category>每日一题</category>
      </categories>
      <tags>
        <tag>刷题</tag>
      </tags>
  </entry>
  <entry>
    <title>leetcode1921.消灭怪物的最大数量</title>
    <url>/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-9/leetcode1921-%E6%B6%88%E7%81%AD%E6%80%AA%E7%89%A9%E7%9A%84%E6%9C%80%E5%A4%A7%E6%95%B0%E9%87%8F.html</url>
    <content><![CDATA[<p><a href="https://leetcode.cn/problems/eliminate-maximum-number-of-monsters/">原题链接 1921. 消灭怪物的最大数量</a></p>
<hr>
<details>
    <summary>展开答案</summary>

<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">eliminateMaximum</span><span class="params">(dist []<span class="type">int</span>, speed []<span class="type">int</span>)</span></span> <span class="type">int</span> &#123;</span><br><span class="line">	n := <span class="built_in">len</span>(dist)</span><br><span class="line">	a := <span class="built_in">make</span>([]<span class="type">int</span>, n)</span><br><span class="line">	<span class="keyword">for</span> i := <span class="number">0</span>; i &lt; n; i++ &#123;</span><br><span class="line">		a[i] = (dist[i] + speed[i] - <span class="number">1</span>) / speed[i]</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	sort.Ints(a)</span><br><span class="line">	<span class="keyword">for</span> i := <span class="number">1</span>; i &lt;= n; i++ &#123;</span><br><span class="line">		<span class="keyword">if</span> a[i<span class="number">-1</span>] &lt; i &#123;</span><br><span class="line">			<span class="keyword">return</span> i - <span class="number">1</span></span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> n</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</details>
]]></content>
      <categories>
        <category>刷题</category>
        <category>每日一题</category>
      </categories>
      <tags>
        <tag>刷题</tag>
      </tags>
  </entry>
  <entry>
    <title>leetcode2511.最多可以摧毁的敌人城堡数目</title>
    <url>/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-9/leetcode2511-%E6%9C%80%E5%A4%9A%E5%8F%AF%E4%BB%A5%E6%91%A7%E6%AF%81%E7%9A%84%E6%95%8C%E4%BA%BA%E5%9F%8E%E5%A0%A1%E6%95%B0%E7%9B%AE.html</url>
    <content><![CDATA[<p><a href="https://leetcode.cn/problems/maximum-enemy-forts-that-can-be-captured/">原题链接 2511.最多可以摧毁的敌人城堡数目</a></p>
<hr>
<details>
    <summary>展开答案</summary>

<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">captureForts</span><span class="params">(forts []<span class="type">int</span>)</span></span> (ans <span class="type">int</span>) &#123;</span><br><span class="line">	max := <span class="function"><span class="keyword">func</span><span class="params">(x, y <span class="type">int</span>)</span></span> <span class="type">int</span> &#123;</span><br><span class="line">		<span class="keyword">if</span> x &gt; y &#123;</span><br><span class="line">			<span class="keyword">return</span> x</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">return</span> y</span><br><span class="line">	&#125;</span><br><span class="line">	pr := <span class="number">-1</span></span><br><span class="line">	<span class="keyword">for</span> i, v := <span class="keyword">range</span> forts &#123;</span><br><span class="line">		<span class="keyword">if</span> v == <span class="number">-1</span> &amp;&amp; pr &gt;= <span class="number">0</span> &#123;</span><br><span class="line">			ans = max(ans, i-pr<span class="number">-1</span>)</span><br><span class="line">			pr = <span class="number">-1</span></span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span> v == <span class="number">1</span> &#123;</span><br><span class="line">			pr = i</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	pr = <span class="number">-1</span></span><br><span class="line">	<span class="keyword">for</span> i, v := <span class="keyword">range</span> forts &#123;</span><br><span class="line">		<span class="keyword">if</span> v == <span class="number">1</span> &amp;&amp; pr &gt;= <span class="number">0</span> &#123;</span><br><span class="line">			ans = max(ans, i-pr<span class="number">-1</span>)</span><br><span class="line">			pr = <span class="number">-1</span></span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span> v == <span class="number">-1</span> &#123;</span><br><span class="line">			pr = i</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> ans</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</details>]]></content>
      <categories>
        <category>刷题</category>
        <category>每日一题</category>
      </categories>
      <tags>
        <tag>刷题</tag>
      </tags>
  </entry>
  <entry>
    <title>leetcode2240.买钢笔和铅笔的方案数</title>
    <url>/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-9/leetcode2240-%E4%B9%B0%E9%92%A2%E7%AC%94%E5%92%8C%E9%93%85%E7%AC%94%E7%9A%84%E6%96%B9%E6%A1%88%E6%95%B0.html</url>
    <content><![CDATA[<p><a href="https://leetcode.cn/problems/number-of-ways-to-buy-pens-and-pencils/">原题链接 2240.买钢笔和铅笔的方案数</a></p>
<hr>
<details>
    <summary>展开答案</summary>

<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">waysToBuyPensPencils</span><span class="params">(total <span class="type">int</span>, cost1 <span class="type">int</span>, cost2 <span class="type">int</span>)</span></span> (res <span class="type">int64</span>) &#123;</span><br><span class="line">	<span class="keyword">for</span> i := <span class="number">0</span>; i*cost1 &lt;= total; i++ &#123;</span><br><span class="line">		<span class="keyword">var</span> tmp <span class="type">int64</span> = <span class="type">int64</span>(total-i*cost1) / <span class="type">int64</span>(cost2)</span><br><span class="line">		res += tmp + <span class="number">1</span></span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> res</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</details>]]></content>
      <categories>
        <category>刷题</category>
        <category>每日一题</category>
      </categories>
      <tags>
        <tag>刷题</tag>
      </tags>
  </entry>
  <entry>
    <title>python</title>
    <url>/%E8%AF%AD%E8%A8%80/python.html</url>
    <content><![CDATA[]]></content>
      <categories>
        <category>语言</category>
        <category>python</category>
        <category>目录</category>
      </categories>
      <tags>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title>cpp</title>
    <url>/%E8%AF%AD%E8%A8%80/cpp.html</url>
    <content><![CDATA[]]></content>
      <categories>
        <category>语言</category>
        <category>cpp</category>
        <category>目录</category>
      </categories>
      <tags>
        <tag>cpp</tag>
      </tags>
  </entry>
  <entry>
    <title>java</title>
    <url>/%E8%AF%AD%E8%A8%80/java.html</url>
    <content><![CDATA[]]></content>
      <categories>
        <category>语言</category>
        <category>java</category>
        <category>目录</category>
      </categories>
      <tags>
        <tag>java</tag>
      </tags>
  </entry>
  <entry>
    <title>数据结构</title>
    <url>/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84.html</url>
    <content><![CDATA[]]></content>
      <categories>
        <category>计算机基础</category>
        <category>数据结构</category>
        <category>目录</category>
      </categories>
      <tags>
        <tag>数据结构</tag>
      </tags>
  </entry>
  <entry>
    <title>数据库</title>
    <url>/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E6%95%B0%E6%8D%AE%E5%BA%93.html</url>
    <content><![CDATA[]]></content>
      <categories>
        <category>计算机基础</category>
        <category>数据库</category>
        <category>目录</category>
      </categories>
      <tags>
        <tag>数据库</tag>
      </tags>
  </entry>
  <entry>
    <title>操作系统</title>
    <url>/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F.html</url>
    <content><![CDATA[]]></content>
      <categories>
        <category>计算机基础</category>
        <category>操作系统</category>
        <category>目录</category>
      </categories>
      <tags>
        <tag>操作系统</tag>
      </tags>
  </entry>
  <entry>
    <title>数据结构</title>
    <url>/%E5%85%AB%E8%82%A1/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84.html</url>
    <content><![CDATA[<details>
    <summary>希尔排序</summary>

<p>&#x2F;&#x2F;todo</p>
</details>

<hr>
<details>
    <summary>插入法生成二叉排序树的过程</summary>

<p>&#x2F;&#x2F;todo -2</p>
</details>

<hr>
<details>
    <summary>线性探测hash的查找次数</summary>

<p>&#x2F;&#x2F;todo</p>
</details>
<span id="more"></span>

<hr>
<details>
    <summary>红黑树，hashmap是怎样的</summary>

<p>&#x2F;&#x2F;todo</p>
</details>

<hr>
<details>
    <summary>hash扩容方式</summary>

<p>&#x2F;&#x2F;todo</p>
</details>

<hr>
<details>
    <summary>二叉排序树的平均查找长度</summary>

<p>&#x2F;&#x2F;todo</p>
</details>

<hr>
<details>
    <summary>排序算法</summary>

<p>&#x2F;&#x2F;todo</p>
</details>

<hr>
<details>
    <summary>最小生成树算法</summary>

<p>&#x2F;&#x2F;todo</p>
</details>

<hr>
<details>
    <summary>问题</summary>

<p>答案</p>
</details>

<hr>
]]></content>
      <categories>
        <category>八股</category>
        <category>数据结构</category>
      </categories>
      <tags>
        <tag>八股,数据结构</tag>
      </tags>
  </entry>
  <entry>
    <title>操作系统</title>
    <url>/%E5%85%AB%E8%82%A1/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F.html</url>
    <content><![CDATA[<details>
    <summary>进程间的通信方式有哪些</summary>

<ol>
<li>管道(Pipe):管道是一种半双工的通信方式，由一个进程创建，并且只能由相关进程之间使用。它可以是匿名管道或有名管道。</li>
<li>信号(Signal):信号是一种异步通信机制，用于在进程之间发送小块信息。当某个事件发生时，操作系统向接收进程发送一个信号，接收进程可以捕获该信号并执行相应的处理。</li>
<li>消息队列(Message Queue):消息队列是一种通过内核提供的数据结构，在进程之间传递消息的方法。发送进程将消息放入队列中，而接收进程从队列中读取消息。</li>
<li>共享内存(Shared Memory):共享内存是一种高效的进程间通信方式。多个进程可以访问同一块物理内存区域，从而避免了数据的复制和内核态切换开销。但需要进行同步和互斥操作以保证数据的正确性。</li>
<li>信号量(Semaphore):信号量是一种计数器，用于控制多个进程对共享资源的访问。进程可以通过对信号量进行P(wait)和V(signal)操作来获取和释放资源。</li>
<li>套接字(Socket):套接字是一种网络编程中常用的进程间通信方式。它允许不同主机上的进程通过网络进行通信。</li>
</ol>
</details>

<hr>
<details>
    <summary>线程同步的方式</summary>

<p>线程同步指的是线程之间“协同”，即线程之间按照规定的先后次序运行。<br>线程同步是一种控制多个线程之间访问共享资源的方式，以避免竞争条件和数据不一致的问题。下面是几种常见的线程同步的方式：</p>
<ol>
<li>互斥锁（Mutex）：使用互斥锁可以确保在任意时刻只有一个线程可以进入被保护的临界区，其他线程必须等待锁被释放后才能继续执行。</li>
<li>读写锁（Read-Write Lock）：读写锁允许多个线程同时读取共享资源，但只允许一个线程进行写操作。这样可以提高读取性能，同时保证写操作的安全性。</li>
<li>条件变量（Condition）：条件变量用于线程之间的通信和同步，它可以暂停一个或多个线程的执行，直到满足特定的条件。</li>
<li>信号量（Semaphore）：信号量是一种计数器，用于控制同时访问某个资源的线程数量。它可以用来限制同时执行某段代码的线程数量。</li>
</ol>
<p><a href="https://zhuanlan.zhihu.com/p/461063930">线程同步的几种方式</a></p>
</details>

<hr>
<details>
    <summary>中断</summary>

<p>操作系统中的中断是指在程序执行过程中，由<strong>硬件</strong>或<strong>软件</strong>发出的一种信号，用于请求操作系统停止当前正在执行的任务，并转而处理某个特定的事件或条件。中断可以分为硬件中断和软件中断两种类型。</p>
<p>硬件中断是由计算机硬件发出的信号，用于向操作系统报告某个设备的状态变化或请求操作系统的服务。例如，当输入设备接收到用户的键盘输入时，会触发一个硬件中断，通知操作系统有新的输入数据需要处理。另外，硬件故障、定时器溢出等情况也可能引发硬件中断。</p>
<p>软件中断是由程序中的指令或软件发出的信号，用于请求操作系统提供某种功能或服务。常见的软件中断包括系统调用和异常。系统调用是用户程序通过特定的指令向操作系统请求执行某些特权操作，如文件读写、网络通信等。异常是指程序执行过程中遇到的错误或异常情况，例如除以零、访问非法内存等，这时操作系统会捕获异常并进行相应处理。</p>
<p>中断的处理方式与具体的操作系统设计相关，但一般情况下，当中断发生时，操作系统会暂停当前正在执行的任务，保存其状态，并根据中断类型执行相应的中断处理程序。处理完中断后，操作系统会恢复被中断的任务，并继续执行。通过合理地使用中断机制，操作系统可以提高系统的响应速度和资源利用率。</p>
</details>
<span id="more"></span>

<hr>
<details>
    <summary>堆和栈</summary>

<p>在操作系统中，堆和栈是两个常用的数据结构，用于管理程序运行时的内存。</p>
<p>堆（Heap）是动态分配的内存区域，用于存储程序运行时动态创建的对象和数据结构。堆的大小可以根据需要进行动态调整，通过使用堆分配函数（如malloc或new）来获取内存空间。堆上的内存由程序员手动分配和释放，因此需要注意避免内存泄漏和悬挂指针等问题。</p>
<p>栈（Stack）是一种后进先出（LIFO）的内存区域，用于存储程序执行过程中的局部变量、函数调用信息和临时数据。栈的大小通常是固定的，由编译器在程序编译时确定。每当函数被调用时，栈会分配一块内存空间用于存储函数的参数、返回地址和局部变量，当函数执行完毕时，栈会自动释放这些内存空间。</p>
<p>增长方向不同：</p>
<blockquote>
<p>堆：生长方向是向上的，也就是向着内存地址增加的方向。</p>
<p>栈：由高地址向低地址方向增长的。</p>
</blockquote>
<p>堆和栈在内存分配方式、大小和生命周期等方面有所不同。堆适用于动态分配的对象，需要手动管理内存；而栈适用于临时数据和函数调用信息，有自动管理的机制。正确使用和管理堆和栈是编程中的重要考虑因素，可以确保程序的正常运行和资源的有效利用。</p>
</details>

<hr>
<details>
    <summary>为什么需要锁</summary>

<p>操作系统中需要锁是为了解决并发访问共享资源时可能出现的竞态条件（Race Condition）和数据不一致性的问题。</p>
<p>当多个线程或进程同时访问共享资源时，如果没有适当的同步机制，就会导致数据竞争和不确定的结果。例如，在多线程环境下，两个线程同时读取和修改一个共享变量，由于执行顺序不确定，可能会导致数据错误或不一致的情况。</p>
<p>锁提供了一种互斥访问共享资源的机制，确保在任意时刻只有一个线程或进程可以对共享资源进行操作。通过加锁和释放锁的操作，可以保证对共享资源的独占访问，避免了竞态条件和数据不一致性的问题。</p>
<p>在操作系统中，常见的锁机制包括互斥锁（Mutex）、信号量（Semaphore）、读写锁（Read-Write Lock）等。这些锁机制可以根据具体的应用场景来选择和使用，以实现对共享资源的安全访问。</p>
<p>总之，操作系统中的锁是为了提供并发控制和资源管理的手段，以确保共享资源的正确和一致的访问，从而保证程序的正确性和可靠性。</p>
</details>

<hr>
<details>
    <summary>linux中断，如何管理内存，用户态和内核态</summary>

<p>当中断发生时，操作系统负责管理内存、保存和恢复任务的上下文信息，并为中断处理程序分配合适的内存空间。用户态下的应用程序无法直接管理内存，而是由操作系统代表进行内存管理。</p>
</details>

<hr>
<details>
    <summary>进程的三态模型与五态模型</summary>

<img data-src="/%E5%85%AB%E8%82%A1/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/2023-09-12-21-21-57.png" class="" title="三态模型">
<img data-src="/%E5%85%AB%E8%82%A1/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/2023-09-12-21-22-14.png" class="" title="五态模型">
</details>

<hr>
<details>
    <summary>覆盖与交换技术</summary>

<p>覆盖和交换技术都是用于解决内存资源限制的问题。覆盖技术适用于大型程序的分段加载，而交换技术则用于在内存不足时将进程从内存交换到磁盘上，以便为其他进程腾出空间。</p>
</details>

<hr>
<details>
    <summary>进程调度算法</summary>

<p>衡量指标：</p>
<ol>
<li>周转时间（Turnaround Time）：表示一个进程从提交到完成的总时间，包括等待时间和执行时间。较小的周转时间表示进程得到快速响应和高效执行。</li>
<li>平均周转时间（Average Turnaround Time）：是所有进程的周转时间的平均值。通过计算所有进程的周转时间总和除以进程数量得到。较小的平均周转时间表示整个系统对进程的调度效果良好。</li>
<li>响应时间（Response Time）：表示从提交一个请求到第一次获得响应所经过的时间。对于交互式系统，快速的响应时间是至关重要的，因为它直接影响用户体验。</li>
<li>等待时间（Waiting Time）：表示进程在就绪队列中等待执行的时间。较小的等待时间表示进程能够更快地获得CPU资源。</li>
<li>带权周转时间（Weighted Turnaround Time）：是周转时间与进程优先级（或权重）的乘积。适用于考虑进程优先级的调度算法。</li>
<li>上下文切换开销（Context Switching Overhead）：表示由于进程切换而引起的开销，包括保存和恢复寄存器、更新页表等操作。较小的上下文切换开销可以提高系统的运行效率。</li>
<li>吞吐量（Throughput）：表示单位时间内完成的进程数量。较大的吞吐量表示系统能够更多地处理并发任务。</li>
</ol>
<p>一、先来先服务：</p>
<p>算法：把处理机分配给最先进入就绪队列的进程。</p>
<p>优点：易于实现。</p>
<p>缺点：表面上公平，服务质量不佳 、对短进程不利；所以该算法很少作为进程调度主算法，常常作为一种辅助调度算法。</p>
<p>二、短作业优先：</p>
<p>算法：从就绪队列中选出“下一个CPU执行期”最短的进程，为之分配处理机使之执行。</p>
<p>优点：可获得较好的调度性能。</p>
<p>缺点：进程的CPU执行期难以准确得到、对长进程不利。</p>
<p>三、最高响应比优先：</p>
<p>算法：响应比&#x3D;（等待时间+要求的服务时间）&#x2F;要求的服务时间，每次选取响应比最高的进程调度。</p>
<p>优点：对短进程有利，并且考虑了等待时间。</p>
<p>缺点：计算响应比有一定的系统开销。</p>
<p>四、时间片轮转法：</p>
<p>算法：通常用在分时系统，它轮流地调度系统中所有就绪进程，使就绪进程依次获得一个时间片的运行时间。系统为就绪队列中的每一个进程分配一个时间片，在使用完一个时间片后即使进程还没有运行完毕，也要强迫其释放处理机，让给另一个进程使用。它自己则返回到就绪队列末尾，排队等待下一次调度的到来。时间片的大小不仅影响CPU的利用率，也影响平均周转时间。</p>
<p>时间片长短确定遵循原则——既要保证系统各个用户进程及时地得到响应，又不要由于时间片太 短而增加调度的开销，降低系统的效率。</p>
<p>太大：无异于先来先服务。</p>
<p>太小：调度程序频率上升，系统耗费在调度上的时间增加，真正运行用户程序的时间减少。</p>
<p>进程执行时可能发生的三种情况：</p>
<p>进程未用完一个时间片便结束，这时系统应提前进行调度。<br>进程在执行过程中提出I&#x2F;O请求而阻塞，系统应将它放入相应的阻塞队列并重新调度。<br>进程用完一个时间片后尚未完成。系统应将它重新放到就绪队列的末尾，等待下次执行。</p>
<p>五、优先级调度算法：</p>
<p>算法：将CPU分配给就绪队列中优先级最高的进程</p>
<p>静态优先级：在进程创建时确立，确定后运行期间保持不变。</p>
<p>确立依据：进程的类型、进程对资源的需求、用户申请的优先级</p>
<p>优点：简单。</p>
<p>缺点：不能动态反映进程特点，系统调度性能差。</p>
<p>动态优先级：进程在开始创建时，根据某种原则确定一个优先级后，随着进程执行时间的变化，其优先级不断地进行动态调整。</p>
<p>确定依据：根据进程占有的CPU时间的长短来决定，占有时间越长优先级越低；根据进程等待CPU的时间来决定，时间越长优先级越高。</p>
<p>该算法也有两种处理优先级高的方法，非抢占式和抢占式：</p>
<p>非抢占式：当就绪队列中出现优先级高的进程，运行完当前进程，再选择优先级高的进程。</p>
<p>抢占式：当就绪队列中出现优先级高的进程，当前进程挂起，调度优先级高的进程运行。</p>
<p>优点：克服了静态优先级的缺点。</p>
<p>缺点：需付出一定系统开销。</p>
<p>六、多级反馈队列调度算法： </p>
<p>有多个队列，每个队列优先级从高到低，同时优先级越高时间片越短，如果有新的进程加入优先级高的队列时，立刻停止当前正在运行的进程，转而去运行优先级高的队列；</p>
<p>工作原理：</p>
<p>设置了多个队列，赋予每个队列不同的优先级，每个队列优先级从高到低，同时优先级越高时间片越短；<br>新的进程会被放入到第一级队列的末尾，按先来先服务的原则排队等待被调度，如果在第一级队列规定的时间片没运行完成，则将其转入到第二级队列的末尾，以此类推，直至完成；<br>当较高优先级的队列为空，才调度较低优先级的队列中的进程运行。如果进程运行时，有新进程进入较高优先级的队列，则停止当前运行的进程并将其移入到原队列末尾，接着让较高优先级的进程运行；</p>
<p>优点：能较好地满足各类作业的用户要求，既能使分时用户作业得到满意的响应，又能使批处理用户的作业获得较合理的周转时间。</p>
<p><a href="https://xiaolincoding.com/os/5_schedule/schedule.html#%E8%BF%9B%E7%A8%8B%E8%B0%83%E5%BA%A6%E7%AE%97%E6%B3%95">进程调度算法</a></p>
</details>

<hr>
<details>
    <summary>用户态和内核态的区别</summary>

<ol>
<li>权限级别：用户态是程序所拥有的最低权限级别，而内核态是操作系统内核运行的最高权限级别。</li>
<li>资源访问：用户态下的程序只能访问受限资源和执行受限操作，需要通过系统调用接口向操作系统请求特权操作。而内核态下的操作系统具有完全的资源访问权限，可以直接访问所有资源和执行所有操作。</li>
<li>系统可见性：用户态下的程序对操作系统的内部数据结构和状态信息是不可见的，而内核态下的程序可以修改操作系统的内部数据结构和状态信息。</details></li>
</ol>
<hr>
<details>
    <summary>段页表</summary>

<p>&#x2F;&#x2F;todo</p>
</details>

<hr>
<details>
    <summary>常见的缓存策略，优缺点</summary>

<p>&#x2F;&#x2F;todo</p>
</details>

<hr>
<details>
    <summary>一个进程最多可以创建的线程数量由什么决定</summary>

<p>&#x2F;&#x2F;todo</p>
</details>

<hr>
<details>
    <summary>内存泄漏</summary>

<p>&#x2F;&#x2F;todo</p>
</details>

<hr>
<details>
    <summary>逻辑地址重定位到内存地址的时机</summary>

<p>&#x2F;&#x2F;todo</p>
</details>

<hr>
<details>
    <summary>FIFO 内存缺页次数计算</summary>

<p>&#x2F;&#x2F;todo</p>
</details>

<hr>
<details>
    <summary>死锁是什么，如何避免与解决</summary>

<p>死锁是指在并发系统中，两个或多个进程因为争夺资源而陷入无限等待的状态，导致系统无法继续执行下去。这种情况下，每个进程都在等待其他进程释放它所需要的资源，但同时又不释放自己占有的资源，从而形成了循环依赖，无法解开。</p>
<p>避免与解决：&#x2F;&#x2F;todo -2<br>&#x2F;&#x2F;todo</p>
</details>

<hr>
<details>
    <summary>原码、反码、补码</summary>

<p>&#x2F;&#x2F;todo</p>
</details>

<hr>
<hr>
<details>
    <summary>问题</summary>

<p>答案</p>
</details>

<hr>
<details>
    <summary>问题</summary>

<p>答案</p>
</details>

<hr>
]]></content>
      <categories>
        <category>八股</category>
        <category>操作系统</category>
      </categories>
      <tags>
        <tag>八股,操作系统</tag>
      </tags>
  </entry>
  <entry>
    <title>计算机网络</title>
    <url>/%E5%85%AB%E8%82%A1/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C.html</url>
    <content><![CDATA[<details>
    <summary>OSI七层模型和TCP/IP五层模型</summary>

<table>
<thead>
<tr>
<th align="center">层级</th>
<th align="center">名称</th>
<th align="center">常用协议</th>
<th align="center">介绍</th>
</tr>
</thead>
<tbody><tr>
<td align="center">1</td>
<td align="center">物理层</td>
<td align="center">Ethernet, USB, HDMI, Wi-Fi, Bluetooth 等</td>
<td align="center">负责传输比特流，处理物理介质相关的连接和信号传输</td>
</tr>
<tr>
<td align="center">2</td>
<td align="center">数据链路层</td>
<td align="center">Ethernet, PPP, HDLC, Wi-Fi, MAC 协议等</td>
<td align="center">提供可靠的点对点数据传输，处理帧、错误检测和纠正等</td>
</tr>
<tr>
<td align="center">3</td>
<td align="center">网络层</td>
<td align="center">IP, ICMP, ARP, OSPF, BGP 等</td>
<td align="center">处理逻辑地址选址、路由选择和网络间数据包交换规则</td>
</tr>
<tr>
<td align="center">4</td>
<td align="center">传输层</td>
<td align="center">TCP, UDP, SCTP, SPX 等</td>
<td align="center">提供端到端的可靠数据传输，处理分段、流量控制和错误恢复</td>
</tr>
<tr>
<td align="center">5</td>
<td align="center">会话层</td>
<td align="center">SSH, TLS, NetBIOS, RPC 等</td>
<td align="center">建立、管理和终止会话连接，控制数据传输的顺序和同步</td>
</tr>
<tr>
<td align="center">6</td>
<td align="center">表示层</td>
<td align="center">SSL, JPEG, MPEG, ASCII, XML 等</td>
<td align="center">处理数据的表示和转换，负责数据的压缩、加密和格式转换</td>
</tr>
<tr>
<td align="center">7</td>
<td align="center">应用层</td>
<td align="center">HTTP, FTP, DNS, SMTP, SSH, Telnet, DHCP 等</td>
<td align="center">提供各种网络应用协议，为用户提供应用服务</td>
</tr>
</tbody></table>
<table>
<thead>
<tr>
<th align="center">层级</th>
<th align="center">名称</th>
<th align="center">常用协议</th>
<th align="center">介绍</th>
</tr>
</thead>
<tbody><tr>
<td align="center">1</td>
<td align="center">网络接口层（物理层、链路层）</td>
<td align="center">Ethernet, Wi-Fi, Bluetooth, PPP 等</td>
<td align="center">将数据链路层的数据传输到物理介质上，处理硬件设备的通信</td>
</tr>
<tr>
<td align="center">2</td>
<td align="center">网际层（网络层）</td>
<td align="center">IP, ICMP, ARP 等</td>
<td align="center">处理 IP 协议，包括地址分配、路由选择和数据包传输</td>
</tr>
<tr>
<td align="center">3</td>
<td align="center">传输层</td>
<td align="center">TCP, UDP, SCTP 等</td>
<td align="center">提供端到端的可靠数据传输，处理分段、流量控制和错误恢复</td>
</tr>
<tr>
<td align="center">4</td>
<td align="center">应用层（主机-网络层）</td>
<td align="center">HTTP, FTP, DNS, SMTP, Telnet, DHCP 等</td>
<td align="center">提供各种网络应用协议，与 OSI 模型的应用层相对应</td>
</tr>
</tbody></table>
</details>

<hr>
<details>
    <summary>TCP建立和断开连接过程</summary>

<p><strong>TCP建立连接过程（三次握手）：</strong></p>
<ol>
<li>客户端发送SYN（同步）报文：客户端向服务器发出一个带有SYN标志的TCP报文段，表示请求建立连接。这个报文段包含一个随机生成的初始序列号（ISN）。</li>
<li>服务器发送SYN-ACK报文：服务器收到客户端的SYN报文后，会向客户端回复一个带有SYN和ACK（确认）标志的TCP报文段，表示接受连接请求，并告知自己的初始序列号。此时，服务器也会生成一个随机的初始序列号。</li>
<li>客户端发送ACK报文：客户端收到服务器发来的SYN-ACK报文后，会向服务器发送一个带有ACK标志的TCP报文段，确认连接已经建立。同时，客户端还会将服务器传来的初始序列号加一作为下一次数据传输的初始序列号。</li>
</ol>
<p><strong>TCP断开连接过程（四次挥手）：</strong></p>
<ol>
<li>主动关闭方发送FIN报文：当客户端或服务器的其中一方决定关闭连接时，它会发送一个带有FIN（结束）标志的TCP报文段，表示没有更多的数据要发送了。</li>
<li>被动关闭方发送ACK报文：收到FIN报文的一方会发送一个带有ACK标志的TCP报文段，确认收到对方的关闭请求。此时，被动关闭方进入半关闭状态，可以继续发送数据给对方。</li>
<li>被动关闭方发送FIN报文：当被动关闭方也准备好关闭连接时，它会发送一个带有FIN标志的TCP报文段，表示自己不再发送数据。</li>
<li>主动关闭方发送ACK报文：收到FIN报文的一方会发送一个带有ACK标志的TCP报文段，确认收到对方的关闭请求。此时连接关闭，双方完成断开连接过程。</details></li>
</ol>
<hr>
<details>
    <summary>路由器，交换机区别</summary>

<table>
<thead>
<tr>
<th>特性</th>
<th>路由器</th>
<th>交换机</th>
</tr>
</thead>
<tbody><tr>
<td>功能</td>
<td>连接多个网络</td>
<td>连接多个设备</td>
</tr>
<tr>
<td>工作层级</td>
<td>网络层（第三层）</td>
<td>数据链路层（第二层）</td>
</tr>
<tr>
<td>数据转发方式</td>
<td>IP地址</td>
<td>MAC地址</td>
</tr>
<tr>
<td>范围</td>
<td>广域网和局域网</td>
<td>局域网</td>
</tr>
<tr>
<td>设备之间通信</td>
<td>跨网络</td>
<td>同一局域网内</td>
</tr>
<tr>
<td>控制和管理</td>
<td>NAT、防火墙等</td>
<td>无</td>
</tr>
<tr>
<td>处理能力</td>
<td>高</td>
<td>中等</td>
</tr>
<tr>
<td>带宽和延迟</td>
<td>较低</td>
<td>较高</td>
</tr>
</tbody></table>
</details>
<span id="more"></span>

<hr>
<details>
    <summary>dns过程</summary>

<ol>
<li>用户输入一个域名（如<a href="http://www.example.com)到浏览器的地址栏./">www.example.com）到浏览器的地址栏。</a></li>
<li>浏览器首先会检查本地 DNS 缓存中是否有该域名对应的 IP 地址。如果有，则返回缓存中的 IP 地址，不需要进行后续的 DNS 查询。</li>
<li>如果本地缓存中没有找到对应的 IP 地址，浏览器将向本地 DNS 服务器发送 DNS 查询请求。</li>
<li>本地 DNS 服务器通常由用户的网络供应商提供，它会先检查自己的缓存。如果找到了域名对应的 IP 地址，则返回给浏览器。</li>
<li>如果本地 DNS 服务器的缓存中没有找到对应的 IP 地址，它将按照以下步骤依次查询：<ul>
<li>根域名服务器：本地 DNS 服务器首先会查询根域名服务器，获取顶级域名（如.com、.org）的权威域名服务器的地址。</li>
<li>顶级域名服务器：本地 DNS 服务器接下来会查询顶级域名服务器，获取二级域名（如example.com）的权威域名服务器的地址。</li>
<li>权威域名服务器：本地 DNS 服务器最后会查询权威域名服务器，获取该域名对应的 IP 地址。</li>
</ul>
</li>
<li>权威域名服务器返回域名对应的 IP 地址给本地 DNS 服务器。</li>
<li>本地 DNS 服务器将收到的 IP 地址缓存起来，并将结果返回给用户的浏览器。</li>
<li>浏览器接收到 IP 地址后，将发起与该 IP 地址对应的服务器建立连接的请求。</li>
<li>最后，浏览器通过 IP 地址与服务器建立连接，并开始发送和接收数据。</details></li>
</ol>
<hr>
<details>
    <summary>tcp/udp</summary>

<p>&#x2F;&#x2F;todo</p>
</details>

<hr>
<details>
    <summary>session,token,cookie</summary>

<table>
<thead>
<tr>
<th>特性</th>
<th>Session</th>
<th>Token</th>
<th>Cookie</th>
</tr>
</thead>
<tbody><tr>
<td>存储位置</td>
<td>服务器</td>
<td>客户端</td>
<td>客户端</td>
</tr>
<tr>
<td>数据存储</td>
<td>服务器上</td>
<td>客户端上</td>
<td>客户端上</td>
</tr>
<tr>
<td>身份验证</td>
<td>是</td>
<td>是</td>
<td>否</td>
</tr>
<tr>
<td>敏感信息</td>
<td>可以存储</td>
<td>不应存储</td>
<td>不应存储</td>
</tr>
<tr>
<td>传输方式</td>
<td>不需要在请求中传输</td>
<td>需要在请求中传输</td>
<td>需要在请求中传输</td>
</tr>
<tr>
<td>安全性</td>
<td>相对较高</td>
<td>取决于实现方式</td>
<td>相对较低</td>
</tr>
<tr>
<td>用户透明度</td>
<td>用户无需处理</td>
<td>用户无需处理</td>
<td>用户无需处理</td>
</tr>
</tbody></table>
</details>

<hr>
<details>
    <summary>arp传包</summary>

<p>ARP（Address Resolution Protocol）是一种用于解析目标IP地址对应的MAC地址的协议。在以太网中，数据包传输需要知道目标设备的MAC地址才能成功交付。</p>
<ol>
<li>设备A想要发送数据包到设备B，但不知道设备B的MAC地址。</li>
<li>设备A首先检查自己的ARP缓存表中是否有设备B的IP地址对应的MAC地址。如果存在，设备A直接使用该MAC地址发送数据包。</li>
<li>如果设备A的ARP缓存表中没有设备B的MAC地址，设备A将创建一个ARP请求数据包，并将其发送到本地网络的广播地址。</li>
<li>ARP请求数据包包含了设备A的MAC地址、设备A的IP地址和设备B的IP地址。</li>
<li>所有在同一网络上的设备都能收到这个ARP请求数据包。当设备B收到ARP请求后，它会检查自己的IP地址是否与请求中的目标IP地址匹配。</li>
<li>如果设备B的IP地址与ARP请求中的目标IP地址匹配，设备B将创建一个ARP响应数据包，并将其发送给设备A。</li>
<li>ARP响应数据包中包含了设备B的MAC地址和设备B的IP地址。</li>
<li>设备A接收到ARP响应后，将更新自己的ARP缓存表，将设备B的IP地址与MAC地址进行关联。</li>
<li>设备A现在知道设备B的MAC地址，可以使用该地址发送数据包到设备B。</li>
<li>数据包经过以太网传输，到达设备B，并成功交付。</details></li>
</ol>
<hr>
<details>
    <summary>HTTP状态码</summary>

<table>
<thead>
<tr>
<th>状态码</th>
<th>含义</th>
<th>解释</th>
</tr>
</thead>
<tbody><tr>
<td>200</td>
<td>OK</td>
<td>请求成功。服务器成功处理了请求并返回所需的信息。</td>
</tr>
<tr>
<td>201</td>
<td>Created</td>
<td>请求已经被成功处理，并创建了新的资源。</td>
</tr>
<tr>
<td>204</td>
<td>No Content</td>
<td>请求成功处理，但没有返回任何内容。</td>
</tr>
<tr>
<td>301</td>
<td>Moved Permanently</td>
<td>请求的资源已永久移动到新位置。</td>
</tr>
<tr>
<td>302</td>
<td>Found</td>
<td>请求的资源暂时移动到其他位置。</td>
</tr>
<tr>
<td>304</td>
<td>Not Modified</td>
<td>客户端缓存的资源是最新的，不需要再次传输。</td>
</tr>
<tr>
<td>400</td>
<td>Bad Request</td>
<td>客户端发送的请求有语法错误或无法理解。</td>
</tr>
<tr>
<td>401</td>
<td>Unauthorized</td>
<td>请求要求身份验证，未提供有效的身份验证凭证。</td>
</tr>
<tr>
<td>403</td>
<td>Forbidden</td>
<td>服务器拒绝执行请求，权限不足。</td>
</tr>
<tr>
<td>404</td>
<td>Not Found</td>
<td>请求的资源在服务器上不存在。</td>
</tr>
<tr>
<td>405</td>
<td>Method Not Allowed</td>
<td>请求中的方法被禁止使用。</td>
</tr>
<tr>
<td>408</td>
<td>Request Timeout</td>
<td>服务器等待请求超时。</td>
</tr>
<tr>
<td>429</td>
<td>Too Many Requests</td>
<td>客户端在给定的时间内发送了太多请求。</td>
</tr>
<tr>
<td>500</td>
<td>Internal Server Error</td>
<td>服务器遇到了意外错误，无法完成请求。</td>
</tr>
<tr>
<td>502</td>
<td>Bad Gateway</td>
<td>作为代理或网关的服务器从上游服务器接收到无效的响应。</td>
</tr>
<tr>
<td>503</td>
<td>Service Unavailable</td>
<td>服务器暂时无法处理请求，通常由于过载或维护。</td>
</tr>
<tr>
<td>504</td>
<td>Gateway Timeout</td>
<td>作为代理或网关的服务器在等待上游服务器响应时超时。</td>
</tr>
</tbody></table>
</details>

<hr>
<details>
    <summary>浏览器输入网址后发生什么</summary>

<p>&#x2F;&#x2F;todo</p>
</details>

<hr>
<details>
    <summary>GET和POST的区别</summary>

<p><strong>GET请求：</strong></p>
<ul>
<li>GET请求用于从服务器获取资源，通常用于获取数据。</li>
<li>GET请求将参数以查询字符串的形式附加在URL的末尾，通过URL传递参数。</li>
<li>GET请求的数据会暴露在URL中，因此不适合传输敏感信息。</li>
<li>GET请求是幂等的，即多次发送相同的GET请求，对服务器产生的影响是相同的。</li>
</ul>
<p><strong>POST请求：</strong></p>
<ul>
<li>POST请求用于向服务器提交数据，通常用于发送数据给服务器进行处理。</li>
<li>POST请求将参数包含在请求体中，而不是暴露在URL中。</li>
<li>POST请求可以传输大量的数据，并且支持传输各种类型的数据（例如表单数据、JSON数据等）。</li>
<li>POST请求不会在浏览器历史记录中留下记录，并且对用户输入的数据进行编码，更适合传输敏感信息。</li>
<li>POST请求不是幂等的，即多次发送相同的POST请求，可能会对服务器产生不同的影响。</details></li>
</ul>
<hr>
<details>
    <summary>ping IP 用到的网络协议</summary>

<p>&#x2F;&#x2F;todo</p>
</details>

<hr>
<details>
    <summary>HTTPS TLS过程</summary>

<ol>
<li>客户端发起连接请求：客户端通过向服务器发送一个连接请求开始整个过程。这个请求是一个HTTPS请求，因此客户端会与服务器建立一个安全的通信通道。</li>
<li>服务器证书验证：服务器收到客户端的连接请求后，会将其公开的数字证书发送给客户端。该证书包含了服务器的公钥以及其他相关信息。客户端会对服务器证书进行验证，确保其有效性和合法性。</li>
<li>客户端生成并发送随机数：在验证服务器证书后，客户端会生成一个随机数，并使用服务器的公钥对该随机数进行加密。然后将加密后的随机数发送给服务器。</li>
<li>服务器解密随机数：服务器使用自己的私钥对接收到的加密随机数进行解密，获取到客户端生成的随机数。</li>
<li>协商加密算法和密钥：服务器和客户端使用已经收集到的信息来协商选择一种加密算法和密钥。这个过程称为握手阶段的密钥交换。</li>
<li>数据加密和传输：在握手阶段结束后，服务器和客户端都拥有了相同的密钥。现在，客户端和服务器之间的通信将使用这个密钥进行加密和解密。</li>
<li>HTTPS数据传输：一旦加密通道建立起来，客户端可以发送HTTP请求，而服务器则可以发送加密后的响应。所有通过该连接传输的数据都会被加密，从而提供了保密性和完整性。</details></li>
</ol>
<hr>
<details>
    <summary>HTTP报文内容</summary>

<p><strong>请求报文：</strong></p>
<ol>
<li>请求行（Request Line）：包含请求方法、请求目标（URL或URI）和HTTP协议版本。</li>
<li>请求头部（Request Headers）：包含与请求相关的各种元数据信息，例如Host（请求的目标主机）、User-Agent（发送请求的用户代理）、Accept（客户端能够接受的媒体类型）等。</li>
<li>空行：一个空行用于分隔请求头部和请求体。</li>
<li>请求体（Request Body）：可选的，包含发送给服务器的数据，通常在POST请求中使用。</li>
</ol>
<p><strong>响应报文：</strong></p>
<ol>
<li>状态行（Status Line）：包含HTTP协议版本、状态码和对应的状态消息。</li>
<li>响应头部（Response Headers）：包含与响应相关的各种元数据信息，例如Server（响应的服务器软件名称）、Content-Type（响应的媒体类型）等。</li>
<li>空行：一个空行用于分隔响应头部和响应体。</li>
<li>响应体（Response Body）：可选的，包含从服务器返回的实际数据，例如HTML页面、JSON数据等。</details></li>
</ol>
<hr>
<details>
    <summary>TCP的机制</summary>

<p>&#x2F;&#x2F;todo</p>
</details>

<hr>
<details>
    <summary>TCP拥塞控制</summary>

<p>&#x2F;&#x2F;todo</p>
</details>

<hr>
<details>
    <summary>HTTP版本区别与对比</summary>

<p>&#x2F;&#x2F;todo -2</p>
</details>

<hr>
<details>
    <summary>IP数据包分片与重组</summary>

<p>&#x2F;&#x2F;todo</p>
</details>

<hr>
<details>
    <summary>TCP报文的格式,大小</summary>

<p>&#x2F;&#x2F;todo</p>
</details>

<hr>
<details>
    <summary>pop3连接smtp用到的协议</summary>

<p>&#x2F;&#x2F;todo</p>
</details>

<hr>
<details>
    <summary>问题</summary>

<p>答案</p>
</details>

<hr>
]]></content>
      <categories>
        <category>八股</category>
        <category>计算机网络</category>
      </categories>
      <tags>
        <tag>八股,计算机网络</tag>
      </tags>
  </entry>
  <entry>
    <title>cpp</title>
    <url>/%E5%85%AB%E8%82%A1/cpp.html</url>
    <content><![CDATA[<details>
    <summary>问题</summary>

<p>答案</p>
</details>

<hr>
<details>
    <summary>问题</summary>

<p>答案</p>
</details>

<hr>
<details>
    <summary>问题</summary>

<p>答案</p>
</details>
<span id="more"></span>

<hr>
<details>
    <summary>问题</summary>

<p>答案</p>
</details>

<hr>
]]></content>
      <categories>
        <category>八股</category>
        <category>cpp</category>
      </categories>
      <tags>
        <tag>八股,cpp</tag>
      </tags>
  </entry>
  <entry>
    <title>java</title>
    <url>/%E5%85%AB%E8%82%A1/java.html</url>
    <content><![CDATA[<details>
    <summary>问题</summary>

<p>答案</p>
</details>

<hr>
<details>
    <summary>问题</summary>

<p>答案</p>
</details>

<hr>
<details>
    <summary>问题</summary>

<p>答案</p>
</details>
<span id="more"></span>

<hr>
<details>
    <summary>问题</summary>

<p>答案</p>
</details>

<hr>
<details>
    <summary>问题</summary>

<p>答案</p>
</details>

<hr>
]]></content>
      <categories>
        <category>八股</category>
        <category>java</category>
      </categories>
      <tags>
        <tag>八股,java</tag>
      </tags>
  </entry>
  <entry>
    <title>docker</title>
    <url>/%E5%85%AB%E8%82%A1/docker.html</url>
    <content><![CDATA[<details>
    <summary>问题</summary>

<p>答案</p>
</details>

<hr>
<details>
    <summary>问题</summary>

<p>答案</p>
</details>

<hr>
<details>
    <summary>问题</summary>

<p>答案</p>
</details>
<span id="more"></span>

<hr>
<details>
    <summary>问题</summary>

<p>答案</p>
</details>

<hr>
]]></content>
      <categories>
        <category>八股</category>
        <category>docker</category>
      </categories>
      <tags>
        <tag>八股,docker</tag>
      </tags>
  </entry>
  <entry>
    <title>linux</title>
    <url>/%E5%85%AB%E8%82%A1/linux.html</url>
    <content><![CDATA[<details>
    <summary>linux查看文件并支持实时更新的命令</summary>

<p>在Linux中，可以使用<code>tail</code>命令来查看文件的内容，并支持实时更新。</p>
<p>以下是使用<code>tail</code>命令的基本语法：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">tail [选项] 文件名</span><br></pre></td></tr></table></figure>

<p>其中，常用的选项包括：</p>
<ul>
<li><code>-f</code>：实时跟踪文件的更新。</li>
<li><code>-n &lt;行数&gt;</code>：显示最后指定行数的内容，默认为10行。</li>
</ul>
<p>要实时查看一个文件的内容，可以使用以下命令：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">tail -f 文件名</span><br></pre></td></tr></table></figure>
</details>

<hr>
<details>
    <summary>tar 压缩解压</summary>

<p>&#x2F;&#x2F;todo</p>
</details>

<hr>
<details>
    <summary>清空root密码</summary>

<p>&#x2F;&#x2F;todo</p>
</details>
<span id="more"></span>

<hr>
<details>
    <summary>设置程序优先级</summary>

<p>&#x2F;&#x2F;todo</p>
</details>

<hr>
<details>
    <summary>问题</summary>

<p>答案</p>
</details>

<hr>
<details>
    <summary>问题</summary>

<p>答案</p>
</details>

<hr>
<details>
    <summary>问题</summary>

<p>答案</p>
</details>

<hr>
]]></content>
      <categories>
        <category>八股</category>
        <category>linux</category>
      </categories>
      <tags>
        <tag>八股,linux</tag>
      </tags>
  </entry>
  <entry>
    <title>redis</title>
    <url>/%E5%85%AB%E8%82%A1/redis.html</url>
    <content><![CDATA[<details>
    <summary>redis中常用的数据类型以及使用场景</summary>

<table>
<thead>
<tr>
<th>数据类型</th>
<th>使用场景</th>
</tr>
</thead>
<tbody><tr>
<td>字符串(string)</td>
<td>缓存、计数器、配置项</td>
</tr>
<tr>
<td>列表(list)</td>
<td>消息队列、任务队列、最新动态</td>
</tr>
<tr>
<td>哈希(hash)</td>
<td>存储对象，如用户信息、商品信息</td>
</tr>
<tr>
<td>集合(set)</td>
<td>标签集合、好友关系集合</td>
</tr>
<tr>
<td>有序集合(zset)</td>
<td>排行榜、热门文章列表</td>
</tr>
</tbody></table>
</details>

<hr>
<details>
    <summary>redis中的跳表介绍</summary>
    
<p>Redis 中的有序集合（Sorted Set）就是使用跳表来实现的。</p>
<p>跳表（Skip List）的设计灵感来自于平衡树，但相比平衡树的复杂性，跳表具有更简单的实现和维护方式。跳表通过在原始链表的基础上增加多级索引来提高查找效率。每个节点都可能具有不同层级的指针，使得跳表可以在不需要遍历所有节点的情况下快速定位目标节点。</p>
<p>在 Redis 中，有序集合的底层数据结构是一个双向链表，每个节点包含一个分值(score)和一个成员（member）。而为了使得有序集合能够快速进行区间查询、按照分值排序等操作，Redis 使用了跳表作为有序集合的索引。</p>
<p>跳表在 Redis 中的使用主要体现在以下几个方面：</p>
<ol>
<li>跳表作为有序集合的索引结构，可以实现快速的插入、删除、查找操作，时间复杂度为 O(logN)。</li>
<li>跳表通过增加多级索引，可以在不需要遍历所有节点的情况下快速定位目标节点，从而提高了有序集合的查询效率。</li>
<li>跳表的高度可以通过随机函数进行调整，从而在保持性能的同时节省了内存空间。</details></li>
</ol>
<hr>
<details>
    <summary>问题</summary>

<p>答案</p>
</details>
<span id="more"></span>

<hr>
<details>
    <summary>问题</summary>

<p>答案</p>
</details>

<hr>
<details>
    <summary>问题</summary>

<p>答案</p>
</details>

<hr>
<details>
    <summary>问题</summary>

<p>答案</p>
</details>

<hr>
]]></content>
      <categories>
        <category>八股</category>
        <category>redis</category>
      </categories>
      <tags>
        <tag>八股,redis</tag>
      </tags>
  </entry>
  <entry>
    <title>mysql</title>
    <url>/%E5%85%AB%E8%82%A1/mysql.html</url>
    <content><![CDATA[<details>
    <summary>为什么使用B+树</summary>

<p>&#x2F;&#x2F;todo -2</p>
</details>

<hr>
<details>
    <summary>InnDB B+树的好处</summary>

<p>&#x2F;&#x2F;todo</p>
</details>

<hr>
<details>
    <summary>mysql的锁</summary>

<p>&#x2F;&#x2F;todo -2</p>
</details>
<span id="more"></span>

<hr>
<details>
    <summary>mysql如何保证高可用</summary>

<p>&#x2F;&#x2F;todo</p>
</details>

<hr>
<details>
    <summary>mysql二进制日志</summary>

<p>&#x2F;&#x2F;todo</p>
</details>

<hr>
<details>
    <summary>mysql 保留两位小数</summary>

<p>&#x2F;&#x2F;todo</p>
</details>

<hr>
<details>
    <summary>mysql 常用数据类型</summary>

<p>&#x2F;todo</p>
</details>

<hr>
<details>
    <summary>问题</summary>

<p>答案</p>
</details>

<hr>
]]></content>
      <categories>
        <category>八股</category>
        <category>mysql</category>
      </categories>
      <tags>
        <tag>八股,mysql</tag>
      </tags>
  </entry>
  <entry>
    <title>go</title>
    <url>/%E5%85%AB%E8%82%A1/go.html</url>
    <content><![CDATA[<details>
    <summary>a := []int{1, 2, 3}和a := [...]int{1, 2, 3}的区别</summary>
    
<ul>
<li><p><code>a := []int&#123;1, 2, 3&#125;</code>：是<strong>切片(slice)<strong>的声明方式。切片是由数组构建而成的</strong>动态长度</strong>序列。使用切片可以方便地进行<strong>添加、删除和修改</strong>元素等操作。在声明时，切片并未指定具体的长度，而是根据初始化的元素个数动态确定长度。</p>
</li>
<li><p><code>a := [...]int&#123;1, 2, 3&#125;</code>：是<strong>数组(array)<strong>的声明方式。数组是由</strong>固定长度</strong>的连续内存空间构成的序列。数组长度在声明时就被确定，之后<strong>无法再改变</strong>。使用数组可以在需要固定长度且占用连续内存的场景中很有用。</p>
</details></li>
</ul>
<hr>
<details>
    <summary>什么是协程（Goroutine）</summary>

<p>Goroutine 是与其他函数或方法同时运行的函数或方法。Goroutine 可以被认为是轻量级的线程。与线程相比，创建 Goroutine 的开销很小。Go应用程序同时运行数千个Goroutine 是非常常见的做法。</p>
</details>

<hr>
<details>
    <summary>如何高效地拼接字符串</summary>

<p>Go 语言中，字符串是只读的，也就意味着每次修改操作都会创建一个新的字符串。如果需要拼接多次，应使用 strings.Builder，最小化内存拷贝次数。</p>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> str strings.Builder</span><br><span class="line"><span class="keyword">for</span> i := <span class="number">0</span>; i &lt; <span class="number">1000</span>; i++ &#123;</span><br><span class="line">    str.WriteString(<span class="string">&quot;a&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line">fmt.Println(str.String())</span><br></pre></td></tr></table></figure>
</details>
<span id="more"></span>

<hr>
<details>
    <summary>defer panic return 顺序</summary>

<p>&#x2F;&#x2F;todo</p>
</details>

<hr>
<details>
    <summary>tag的用处</summary>

<p>Go 语言中的 tag 是结构体字段标签，用于在运行时为结构体的字段添加元数据。它以反引号 &#96;&#96; 包围，并附加在结构体字段的类型后面。Tag 的主要用途如下：</p>
<ol>
<li>序列化与反序列化：Tag 可以指定结构体字段在进行序列化和反序列化时的名称、格式和选项。常见的应用场景是使用 JSON 或 XML 进行数据的编码和解码。</li>
<li>数据验证：通过为字段添加验证规则的 Tag，可以实现对结构体字段的输入数据进行验证，例如检查输入是否为空、长度是否符合要求等。</li>
<li>ORM 映射：当使用 ORM（对象关系映射）框架时，Tag 可以用来定义数据库表与结构体字段之间的映射关系，包括表名、字段名、索引等信息。</li>
<li>文档生成：Tag 可以作为注释的一部分，用于生成文档或自动化工具的识别。通过给结构体字段添加相关的描述性 Tag，可以生成更丰富的文档。</li>
</ol>
<p>需要注意的是，Go 语言的编译器并不会直接使用 Tag，而是提供了反射机制来让程序在运行时读取和处理 Tag。因此，在使用 Tag 时，需要使用反射库来获取和解析标签的值。</p>
</details>

<hr>
<details>
    <summary>打印时, %v 和 %+v 的区别</summary>

<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">type</span> Stu <span class="keyword">struct</span> &#123;</span><br><span class="line">    Name <span class="type">string</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    fmt.Printf(<span class="string">&quot;%v\n&quot;</span>, Stu&#123;<span class="string">&quot;Tom&quot;</span>&#125;) <span class="comment">// &#123;Tom&#125;</span></span><br><span class="line">    fmt.Printf(<span class="string">&quot;%+v\n&quot;</span>, Stu&#123;<span class="string">&quot;Tom&quot;</span>&#125;) <span class="comment">// &#123;Name:Tom&#125;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>但如果结构体定义了 String() 方法， %v 和 %+v 都会调用 String() 覆盖默认值</p>
</details>

<hr>
<details>
    <summary>空 struct{} 的用途</summary>

<p>使用空结构体 struct{} 可以节省内存，一般作为占位符使用，也可以用于信道(channel)控制并发的信号，或者声明只包含方法的结构体。</p>
</details>

<hr>
<details>
    <summary>iota</summary>

<p>&#x2F;&#x2F;todo</p>
</details>

<hr>
<details>
    <summary>slice扩容(1.18版本前)</summary>

<img data-src="/%E5%85%AB%E8%82%A1/go/2023-09-12-14-28-45.png" class="" title="step1">
<img data-src="/%E5%85%AB%E8%82%A1/go/2023-09-12-14-30-48.png" class="" title="step2">
<img data-src="/%E5%85%AB%E8%82%A1/go/2023-09-12-14-31-55.png" class="" title="step3">
</details>

<hr>
<details>
    <summary>进程，线程，协程</summary>

<ul>
<li>进程是操作系统分配资源和调度的单位，包含一个或多个线程。</li>
<li>线程是操作系统调度的基本执行单位，可以利用多核处理器的并行能力。</li>
<li>协程是Go语言提供的轻量级并发机制，由Go运行时调度，在单个线程上并发执行函数或方法。协程的切换代价较低，且可以方便地进行扩展和通信。</details></li>
</ul>
<hr>
<details>
    <summary>为什么需要协程，直接用线程不行吗？</summary>

<p><strong>1. 轻量级：</strong> 协程比线程更轻量级，创建和切换的成本较低。一个程序可以同时运行成百上千个协程，而线程的数量受限于操作系统的限制。</p>
<p><strong>2. 更高的并发性：</strong> 由于协程可以在单个线程上并发执行，所以可以充分利用多核处理器的能力，实现更大规模的并发性。</p>
<p><strong>3. 更少的内存消耗：</strong> 协程的栈空间可以根据需要动态增长和收缩，相比之下，线程需要预分配固定大小的堆栈空间。这意味着在同样的内存限制下，可以创建更多的协程。</p>
<p><strong>4. 简化的并发编程：</strong> 使用协程和通道（Channel）进行数据共享和通信，可以避免显式的锁机制和共享内存带来的复杂性和潜在的错误。</p>
<p><strong>5. 高效的阻塞操作管理：</strong> 协程在阻塞的时候可以主动释放线程，而线程则会一直占用，浪费系统资源。通过使用协程，可以更高效地管理多个阻塞操作，提高程序的响应性和资源利用率。</p>
</details>

<hr>
<details>
    <summary>gmp模型</summary>

<p>&#x2F;&#x2F;todo</p>
<p><a href="https://zhuanlan.zhihu.com/p/617420622">Go｜Golang 调度器设计思想、GMP 协程调度模型详解</a></p>
</details>

<hr>
<details>
    <summary>内存逃逸</summary>

<p>&#x2F;&#x2F;todo</p>
</details>

<hr>
<details>
    <summary>map扩容机制</summary>

<p>&#x2F;&#x2F;todo</p>
<p><a href="https://zhuanlan.zhihu.com/p/616979764">Go｜map底层实现、扩容规则、特性</a></p>
</details>

<hr>
<details>
    <summary>闭包</summary>

<p>&#x2F;&#x2F;todo</p>
</details>

<hr>
<details>
    <summary>map并发安全吗，并发写会报什么错，能否用recover捕获</summary>

<p><code>go map</code> 在并发访问时不是安全的。如果多个 goroutine 同时读写同一个 map，可能会导致数据竞争和不确定的行为。</p>
<p>当多个 goroutine 并发地写入 map 时，可能会引发错误：<code>fatal error: concurrent map writes</code></p>
<p>使用 <code>recover</code> 函数无法捕获并解决这些错误。<code>recover</code> 只能用于捕获由 <code>panic</code> 引发的运行时异常，并在延迟函数中进行处理。但是，对于并发访问 map 导致的数据竞争，<code>recover</code> 是无法解决的。</p>
</details>

<hr>
<details>
    <summary>GC</summary>

<p>&#x2F;&#x2F;todo</p>
</details>

<hr>
<details>
    <summary>sync.Once</summary>

<p>&#x2F;&#x2F;todo</p>
</details>

<hr>
<details>
    <summary>go语言中的context</summary>

<p>&#x2F;&#x2F;todo -2</p>
</details>

<hr>
<details>
    <summary>go map相对于其他语言map的特殊点</summary>

<p>&#x2F;&#x2F;todo</p>
</details>

<hr>
<details>
    <summary>java和go的区别</summary>

<p>&#x2F;&#x2F;todo</p>
</details>

<hr>
<details>
    <summary>问题</summary>

<p>答案</p>
</details>

<hr>
<details>
    <summary>问题</summary>

<p>答案</p>
</details>

<hr>
<details>
    <summary>问题</summary>

<p>答案</p>
</details>

<hr>
<details>
    <summary>问题</summary>

<p>答案</p>
</details>

<hr>
]]></content>
      <categories>
        <category>八股</category>
        <category>go</category>
      </categories>
      <tags>
        <tag>八股,go</tag>
      </tags>
  </entry>
  <entry>
    <title>八股</title>
    <url>/%E5%85%AB%E8%82%A1.html</url>
    <content><![CDATA[<h2 id="1-go"><a href="#1-go" class="headerlink" title="1. go"></a>1. <strong><a href="/%E5%85%AB%E8%82%A1/go.html">go</a></strong></h2><h2 id="2-mysql"><a href="#2-mysql" class="headerlink" title="2. mysql"></a>2. <strong><a href="/%E5%85%AB%E8%82%A1/mysql.html">mysql</a></strong></h2><h2 id="3-redis"><a href="#3-redis" class="headerlink" title="3. redis"></a>3. <strong><a href="/%E5%85%AB%E8%82%A1/redis.html">redis</a></strong></h2><span id="more"></span>
<h2 id="4-linux"><a href="#4-linux" class="headerlink" title="4. linux"></a>4. <strong><a href="/%E5%85%AB%E8%82%A1/linux.html">linux</a></strong></h2><h2 id="5-docker"><a href="#5-docker" class="headerlink" title="5. docker"></a>5. <strong><a href="/%E5%85%AB%E8%82%A1/docker.html">docker</a></strong></h2><h2 id="6-计算机网络"><a href="#6-计算机网络" class="headerlink" title="6. 计算机网络"></a>6. <strong><a href="/%E5%85%AB%E8%82%A1/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C.html">计算机网络</a></strong></h2><h2 id="7-操作系统"><a href="#7-操作系统" class="headerlink" title="7. 操作系统"></a>7. <strong><a href="/%E5%85%AB%E8%82%A1/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F.html">操作系统</a></strong></h2><h2 id="8-数据结构"><a href="#8-数据结构" class="headerlink" title="8. 数据结构"></a>8. <strong><a href="/%E5%85%AB%E8%82%A1/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84.html">数据结构</a></strong></h2><h2 id="9-数据库"><a href="#9-数据库" class="headerlink" title="9. 数据库"></a>9. <strong><a href="/%E5%85%AB%E8%82%A1/%E6%95%B0%E6%8D%AE%E5%BA%93.html">数据库</a></strong></h2><h2 id="10-cpp"><a href="#10-cpp" class="headerlink" title="10. cpp"></a>10. <strong><a href="/%E5%85%AB%E8%82%A1/cpp.html">cpp</a></strong></h2><h2 id="11-java"><a href="#11-java" class="headerlink" title="11. java"></a>11. <strong><a href="/%E5%85%AB%E8%82%A1/java.html">java</a></strong></h2><h2 id="12-场景题"><a href="#12-场景题" class="headerlink" title="12. 场景题"></a>12. <strong><a href="/%E5%85%AB%E8%82%A1/%E5%9C%BA%E6%99%AF%E9%A2%98.html">场景题</a></strong></h2><h2 id="13-其他"><a href="#13-其他" class="headerlink" title="13. 其他"></a>13. <strong><a href="/%E5%85%AB%E8%82%A1/%E5%85%B6%E4%BB%96.html">其他</a></strong></h2>]]></content>
      <categories>
        <category>八股</category>
      </categories>
      <tags>
        <tag>八股</tag>
      </tags>
  </entry>
  <entry>
    <title>leetcode1761.一个图中连通三元组的最小度数</title>
    <url>/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-8/leetcode1761-%E4%B8%80%E4%B8%AA%E5%9B%BE%E4%B8%AD%E8%BF%9E%E9%80%9A%E4%B8%89%E5%85%83%E7%BB%84%E7%9A%84%E6%9C%80%E5%B0%8F%E5%BA%A6%E6%95%B0.html</url>
    <content><![CDATA[<p><a href="https://leetcode.cn/problems/minimum-degree-of-a-connected-trio-in-a-graph/">原题链接 1761. 一个图中连通三元组的最小度数</a></p>
<hr>
<details>
    <summary>展开答案</summary>

<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">minTrioDegree</span><span class="params">(n <span class="type">int</span>, edges [][]<span class="type">int</span>)</span></span> <span class="type">int</span> &#123;</span><br><span class="line">	mp := <span class="built_in">make</span>(<span class="keyword">map</span>[[<span class="number">2</span>]<span class="type">int</span>]<span class="type">int</span>, <span class="number">0</span>)</span><br><span class="line">	de := <span class="built_in">make</span>([]<span class="type">int</span>, n+<span class="number">1</span>)</span><br><span class="line">	<span class="keyword">for</span> _, v := <span class="keyword">range</span> edges &#123;</span><br><span class="line">		a, b := v[<span class="number">0</span>], v[<span class="number">1</span>]</span><br><span class="line">		mp[[<span class="number">2</span>]<span class="type">int</span>&#123;a, b&#125;]++</span><br><span class="line">		mp[[<span class="number">2</span>]<span class="type">int</span>&#123;b, a&#125;]++</span><br><span class="line">		de[a]++</span><br><span class="line">		de[b]++</span><br><span class="line">	&#125;</span><br><span class="line">	min := <span class="function"><span class="keyword">func</span><span class="params">(x, y <span class="type">int</span>)</span></span> <span class="type">int</span> &#123;</span><br><span class="line">		<span class="keyword">if</span> x &lt; y &#123;</span><br><span class="line">			<span class="keyword">return</span> x</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">return</span> y</span><br><span class="line">	&#125;</span><br><span class="line">	ans := <span class="number">0x3f3f3f3f</span></span><br><span class="line">	<span class="keyword">for</span> i := <span class="number">1</span>; i &lt;= n; i++ &#123;</span><br><span class="line">		<span class="keyword">for</span> j := i + <span class="number">1</span>; j &lt;= n; j++ &#123;</span><br><span class="line">			<span class="keyword">if</span> mp[[<span class="number">2</span>]<span class="type">int</span>&#123;i, j&#125;] == <span class="number">0</span> &#123;</span><br><span class="line">				<span class="keyword">continue</span></span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">for</span> k := j + <span class="number">1</span>; k &lt;= n; k++ &#123;</span><br><span class="line">				<span class="keyword">if</span> mp[[<span class="number">2</span>]<span class="type">int</span>&#123;i, k&#125;] &gt;= <span class="number">1</span> &amp;&amp; mp[[<span class="number">2</span>]<span class="type">int</span>&#123;k, j&#125;] &gt;= <span class="number">1</span> &#123;</span><br><span class="line">					res := de[i] + de[j] + de[k] - <span class="number">6</span></span><br><span class="line">					ans = min(ans, res)</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span> ans == <span class="number">0x3f3f3f3f</span> &#123;</span><br><span class="line">		ans = <span class="number">-1</span></span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> ans</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
</details>]]></content>
      <categories>
        <category>刷题</category>
        <category>每日一题</category>
      </categories>
      <tags>
        <tag>刷题</tag>
      </tags>
  </entry>
  <entry>
    <title>leetcode1654.到家的最少跳跃次数</title>
    <url>/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-8/leetcode1654-%E5%88%B0%E5%AE%B6%E7%9A%84%E6%9C%80%E5%B0%91%E8%B7%B3%E8%B7%83%E6%AC%A1%E6%95%B0.html</url>
    <content><![CDATA[<p><a href="https://leetcode.cn/problems/minimum-jumps-to-reach-home/">原题链接 1654. 到家的最少跳跃次数</a></p>
<hr>
<details>
    <summary>展开答案</summary>

<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">minimumJumps</span><span class="params">(forbidden []<span class="type">int</span>, a <span class="type">int</span>, b <span class="type">int</span>, x <span class="type">int</span>)</span></span> (ans <span class="type">int</span>) &#123;</span><br><span class="line">	min := <span class="function"><span class="keyword">func</span><span class="params">(x, y <span class="type">int</span>)</span></span> <span class="type">int</span> &#123;</span><br><span class="line">		<span class="keyword">if</span> x &gt; y &#123;</span><br><span class="line">			<span class="keyword">return</span> y</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">return</span> x</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	ban := <span class="built_in">make</span>(<span class="keyword">map</span>[<span class="type">int</span>]<span class="keyword">struct</span>&#123;&#125;, <span class="number">0</span>)</span><br><span class="line">	<span class="keyword">for</span> _, v := <span class="keyword">range</span> forbidden &#123;</span><br><span class="line">		ban[v] = <span class="keyword">struct</span>&#123;&#125;&#123;&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">const</span> INF, N <span class="type">int</span> = <span class="number">0x3f3f3f3f</span>, <span class="number">2e3</span> + <span class="number">9</span></span><br><span class="line">	f := <span class="built_in">make</span>([][<span class="number">2</span>]<span class="type">int</span>, <span class="number">3</span>*N)</span><br><span class="line">	<span class="keyword">for</span> i := <span class="number">0</span>; i &lt; <span class="built_in">len</span>(f); i++ &#123;</span><br><span class="line">		f[i][<span class="number">0</span>], f[i][<span class="number">1</span>] = INF, INF</span><br><span class="line">	&#125;</span><br><span class="line">	q, hh, tt := <span class="built_in">make</span>([][<span class="number">3</span>]<span class="type">int</span>, <span class="number">12</span>*N), <span class="number">0</span>, <span class="number">0</span></span><br><span class="line">	q[tt], tt = [<span class="number">3</span>]<span class="type">int</span>&#123;<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>&#125;, tt+<span class="number">1</span></span><br><span class="line">	q[tt], tt = [<span class="number">3</span>]<span class="type">int</span>&#123;<span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>&#125;, tt+<span class="number">1</span></span><br><span class="line">	<span class="keyword">for</span> hh &lt; tt &#123;</span><br><span class="line">		cur, op, v := q[hh][<span class="number">0</span>], q[hh][<span class="number">1</span>], q[hh][<span class="number">2</span>]</span><br><span class="line">		hh++</span><br><span class="line">		<span class="keyword">if</span> _, e := ban[cur]; e &#123;</span><br><span class="line">			<span class="keyword">continue</span></span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span> cur &lt; <span class="number">0</span> || cur &gt;= <span class="number">3</span>*N &#123;</span><br><span class="line">			<span class="keyword">continue</span></span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span> f[cur][op] != INF &#123;</span><br><span class="line">			<span class="keyword">continue</span></span><br><span class="line">		&#125;</span><br><span class="line">		f[cur][op] = v</span><br><span class="line">		q[tt], tt = [<span class="number">3</span>]<span class="type">int</span>&#123;cur + a, <span class="number">0</span>, v + <span class="number">1</span>&#125;, tt+<span class="number">1</span></span><br><span class="line">		<span class="keyword">if</span> op != <span class="number">1</span> &#123;</span><br><span class="line">			q[tt], tt = [<span class="number">3</span>]<span class="type">int</span>&#123;cur - b, <span class="number">1</span>, v + <span class="number">1</span>&#125;, tt+<span class="number">1</span></span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	ans = min(f[x][<span class="number">0</span>], f[x][<span class="number">1</span>])</span><br><span class="line">	<span class="keyword">if</span> ans &gt;= INF &#123;</span><br><span class="line">		ans = <span class="number">-1</span></span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> ans</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
</details>
]]></content>
      <categories>
        <category>刷题</category>
        <category>每日一题</category>
      </categories>
      <tags>
        <tag>刷题</tag>
      </tags>
  </entry>
  <entry>
    <title>leetcode57.插入区间</title>
    <url>/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-8/leetcode57-%E6%8F%92%E5%85%A5%E5%8C%BA%E9%97%B4.html</url>
    <content><![CDATA[<p><a href="https://leetcode.cn/problems/insert-interval/">原题链接 57. 插入区间</a></p>
<hr>
<details>
    <summary>展开答案</summary>

<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">insert</span><span class="params">(intervals [][]<span class="type">int</span>, newInterval []<span class="type">int</span>)</span></span> (ans [][]<span class="type">int</span>) &#123;</span><br><span class="line">	flag := <span class="literal">false</span></span><br><span class="line">	<span class="keyword">for</span> i, v := <span class="keyword">range</span> intervals &#123;</span><br><span class="line">		<span class="keyword">if</span> newInterval[<span class="number">0</span>] &lt; v[<span class="number">0</span>] &#123;</span><br><span class="line">			intervals = <span class="built_in">append</span>(intervals[:i], <span class="built_in">append</span>([][]<span class="type">int</span>&#123;newInterval&#125;, intervals[i:]...)...)</span><br><span class="line">			flag = <span class="literal">true</span></span><br><span class="line">			<span class="keyword">break</span></span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span> !flag &#123;</span><br><span class="line">		intervals = <span class="built_in">append</span>(intervals, newInterval)</span><br><span class="line">	&#125;</span><br><span class="line">	l, r := intervals[<span class="number">0</span>][<span class="number">0</span>], intervals[<span class="number">0</span>][<span class="number">1</span>]</span><br><span class="line">	<span class="keyword">for</span> _, v := <span class="keyword">range</span> intervals &#123;</span><br><span class="line">		<span class="keyword">if</span> r &lt; v[<span class="number">0</span>] &#123;</span><br><span class="line">			ans = <span class="built_in">append</span>(ans, []<span class="type">int</span>&#123;l, r&#125;)</span><br><span class="line">			l, r = v[<span class="number">0</span>], v[<span class="number">1</span>]</span><br><span class="line">		&#125; <span class="keyword">else</span> <span class="keyword">if</span> r &lt; v[<span class="number">1</span>] &#123;</span><br><span class="line">			r = v[<span class="number">1</span>]</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	ans = <span class="built_in">append</span>(ans, []<span class="type">int</span>&#123;l, r&#125;)</span><br><span class="line">	<span class="keyword">return</span> ans</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</details>]]></content>
      <categories>
        <category>刷题</category>
        <category>每日一题</category>
      </categories>
      <tags>
        <tag>刷题</tag>
      </tags>
  </entry>
  <entry>
    <title>leetcode823.带因子的二叉树</title>
    <url>/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-8/leetcode823-%E5%B8%A6%E5%9B%A0%E5%AD%90%E7%9A%84%E4%BA%8C%E5%8F%89%E6%A0%91.html</url>
    <content><![CDATA[<p><a href="https://leetcode.cn/problems/binary-trees-with-factors/">原题链接 823. 带因子的二叉树</a></p>
<hr>
<details>
    <summary>展开答案</summary>

<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">numFactoredBinaryTrees</span><span class="params">(arr []<span class="type">int</span>)</span></span> (ans <span class="type">int</span>) &#123;</span><br><span class="line">	sort.Ints(arr)</span><br><span class="line">	<span class="keyword">var</span> P <span class="type">int</span> = <span class="number">1e9</span> + <span class="number">7</span></span><br><span class="line">	n := <span class="built_in">len</span>(arr)</span><br><span class="line"></span><br><span class="line">	inv := <span class="built_in">make</span>(<span class="keyword">map</span>[<span class="type">int</span>]<span class="type">int</span>, n)</span><br><span class="line">	<span class="keyword">for</span> i, v := <span class="keyword">range</span> arr &#123;</span><br><span class="line">		inv[v] = i</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	f := <span class="built_in">make</span>([]<span class="type">int</span>, n)</span><br><span class="line">	<span class="keyword">for</span> i := <span class="number">0</span>; i &lt; n; i++ &#123;</span><br><span class="line">		res := <span class="number">0</span></span><br><span class="line">		cur := arr[i]</span><br><span class="line">		<span class="keyword">for</span> j := <span class="number">0</span>; arr[j]*arr[j] &lt;= cur; j++ &#123;</span><br><span class="line">			<span class="keyword">if</span> _, e := inv[cur/arr[j]]; cur%arr[j] == <span class="number">0</span> &amp;&amp; e &#123;</span><br><span class="line">				res += f[inv[cur/arr[j]]] * f[j]</span><br><span class="line">				<span class="keyword">if</span> cur != arr[j]*arr[j] &#123;</span><br><span class="line">					res += f[inv[cur/arr[j]]] * f[j]</span><br><span class="line">				&#125;</span><br><span class="line">				res %= P</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		f[i] = (res + <span class="number">1</span>) % P</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span> _, v := <span class="keyword">range</span> f &#123;</span><br><span class="line">		ans += v</span><br><span class="line">		ans %= P</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> ans</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</details>]]></content>
      <categories>
        <category>刷题</category>
        <category>每日一题</category>
      </categories>
      <tags>
        <tag>刷题</tag>
      </tags>
  </entry>
  <entry>
    <title>leetcode2836.在传球游戏中最大化函数值</title>
    <url>/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-8/leetcode2836-%E5%9C%A8%E4%BC%A0%E7%90%83%E6%B8%B8%E6%88%8F%E4%B8%AD%E6%9C%80%E5%A4%A7%E5%8C%96%E5%87%BD%E6%95%B0%E5%80%BC.html</url>
    <content><![CDATA[<p><a href="https://leetcode.cn/problems/maximize-value-of-function-in-a-ball-passing-game/">原题链接 2836. 在传球游戏中最大化函数值</a></p>
<hr>
<details>
    <summary>展开答案</summary>

<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">getMaxFunctionValue</span><span class="params">(receiver []<span class="type">int</span>, k <span class="type">int64</span>)</span></span> (ans <span class="type">int64</span>) &#123;</span><br><span class="line">	max := <span class="function"><span class="keyword">func</span><span class="params">(x, y <span class="type">int64</span>)</span></span> <span class="type">int64</span> &#123;</span><br><span class="line">		<span class="keyword">if</span> x &gt; y &#123;</span><br><span class="line">			<span class="keyword">return</span> x</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">return</span> y</span><br><span class="line">	&#125;</span><br><span class="line">	n := <span class="built_in">len</span>(receiver)</span><br><span class="line">	a, v := <span class="built_in">make</span>([][<span class="number">40</span>]<span class="type">int</span>, n), <span class="built_in">make</span>([][<span class="number">40</span>]<span class="type">int64</span>, n)</span><br><span class="line">	<span class="keyword">for</span> i := <span class="number">0</span>; i &lt; n; i++ &#123;</span><br><span class="line">		a[i][<span class="number">0</span>] = receiver[i]</span><br><span class="line">		v[i][<span class="number">0</span>] = <span class="type">int64</span>(receiver[i])</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span> j := <span class="number">1</span>; j &lt; <span class="number">40</span>; j++ &#123;</span><br><span class="line">		<span class="keyword">for</span> i := <span class="number">0</span>; i &lt; n; i++ &#123;</span><br><span class="line">			a[i][j] = a[a[i][j<span class="number">-1</span>]][j<span class="number">-1</span>]</span><br><span class="line">			v[i][j] = v[i][j<span class="number">-1</span>] + v[a[i][j<span class="number">-1</span>]][j<span class="number">-1</span>]</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span> i := <span class="number">0</span>; i &lt; n; i++ &#123;</span><br><span class="line">		<span class="keyword">var</span> res <span class="type">int64</span> = <span class="number">0</span></span><br><span class="line">		u := i</span><br><span class="line">		<span class="keyword">for</span> j := <span class="number">0</span>; j &lt; <span class="number">40</span>; j++ &#123;</span><br><span class="line">			<span class="keyword">if</span> (k&gt;&gt;j)&amp;<span class="number">1</span> == <span class="number">1</span> &#123;</span><br><span class="line">				res += v[u][j]</span><br><span class="line">				u = a[u][j]</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		ans = max(ans, res+<span class="type">int64</span>(i))</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> ans</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</details>]]></content>
      <categories>
        <category>刷题</category>
        <category>每日一题</category>
      </categories>
      <tags>
        <tag>刷题</tag>
      </tags>
  </entry>
  <entry>
    <title>leetcode56.合并区间</title>
    <url>/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-8/leetcode56-%E5%90%88%E5%B9%B6%E5%8C%BA%E9%97%B4.html</url>
    <content><![CDATA[<p><a href="https://leetcode.cn/problems/merge-intervals/">原题链接 56. 合并区间</a></p>
<hr>
<details>
    <summary>展开答案</summary>

<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">merge</span><span class="params">(intervals [][]<span class="type">int</span>)</span></span> (ans [][]<span class="type">int</span>) &#123;</span><br><span class="line">	sort.Slice(intervals, <span class="function"><span class="keyword">func</span><span class="params">(i, j <span class="type">int</span>)</span></span> <span class="type">bool</span> &#123;</span><br><span class="line">		<span class="keyword">return</span> intervals[i][<span class="number">0</span>] &lt; intervals[j][<span class="number">0</span>]</span><br><span class="line">	&#125;)</span><br><span class="line">	l, r := intervals[<span class="number">0</span>][<span class="number">0</span>], intervals[<span class="number">0</span>][<span class="number">1</span>]</span><br><span class="line">	<span class="keyword">for</span> _, v := <span class="keyword">range</span> intervals &#123;</span><br><span class="line">		<span class="keyword">if</span> r &lt; v[<span class="number">0</span>] &#123;</span><br><span class="line">			ans = <span class="built_in">append</span>(ans, []<span class="type">int</span>&#123;l, r&#125;)</span><br><span class="line">			l, r = v[<span class="number">0</span>], v[<span class="number">1</span>]</span><br><span class="line">		&#125; <span class="keyword">else</span> <span class="keyword">if</span> r &lt; v[<span class="number">1</span>] &#123;</span><br><span class="line">			r = v[<span class="number">1</span>]</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	ans = <span class="built_in">append</span>(ans, []<span class="type">int</span>&#123;l, r&#125;)</span><br><span class="line">	<span class="keyword">return</span> ans</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</details>]]></content>
      <categories>
        <category>刷题</category>
        <category>每日一题</category>
      </categories>
      <tags>
        <tag>刷题</tag>
      </tags>
  </entry>
  <entry>
    <title>leetcode8022.找出美丽数组的最小和</title>
    <url>/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-8/leetcode8022-%E6%89%BE%E5%87%BA%E7%BE%8E%E4%B8%BD%E6%95%B0%E7%BB%84%E7%9A%84%E6%9C%80%E5%B0%8F%E5%92%8C.html</url>
    <content><![CDATA[<p><a href="https://leetcode.cn/problems/find-the-minimum-possible-sum-of-a-beautiful-array/">原题链接 8022. 找出美丽数组的最小和</a></p>
<hr>
<details>
    <summary>展开答案</summary>

<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">minimumPossibleSum</span><span class="params">(n <span class="type">int</span>, target <span class="type">int</span>)</span></span> (ans <span class="type">int64</span>) &#123;</span><br><span class="line">	used := <span class="built_in">make</span>(<span class="keyword">map</span>[<span class="type">int</span>]<span class="type">int</span>, <span class="number">0</span>)</span><br><span class="line">	cur := <span class="number">1</span></span><br><span class="line">	a := <span class="built_in">make</span>([]<span class="type">int</span>, n)</span><br><span class="line">	<span class="keyword">for</span> i := <span class="number">0</span>; i &lt; n; i++ &#123;</span><br><span class="line">		<span class="keyword">for</span> used[target-cur] != <span class="number">0</span> || used[cur] != <span class="number">0</span> &#123;</span><br><span class="line">			cur++</span><br><span class="line">		&#125;</span><br><span class="line">		used[cur] = <span class="number">1</span></span><br><span class="line">		a[i] = cur</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span> i := <span class="number">0</span>; i &lt; n; i++ &#123;</span><br><span class="line">		ans += <span class="type">int64</span>(a[i])</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> ans</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</details>]]></content>
      <categories>
        <category>刷题</category>
        <category>每日一题</category>
      </categories>
      <tags>
        <tag>刷题</tag>
      </tags>
  </entry>
  <entry>
    <title>leetcode8015.距离原点最远的点</title>
    <url>/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-8/leetcode8015-%E8%B7%9D%E7%A6%BB%E5%8E%9F%E7%82%B9%E6%9C%80%E8%BF%9C%E7%9A%84%E7%82%B9.html</url>
    <content><![CDATA[<p><a href="https://leetcode.cn/problems/furthest-point-from-origin/">原题链接 8015. 距离原点最远的点</a></p>
<hr>
<details>
    <summary>展开答案</summary>

<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">furthestDistanceFromOrigin</span><span class="params">(moves <span class="type">string</span>)</span></span> <span class="type">int</span> &#123;</span><br><span class="line">	x, y := <span class="number">0</span>, <span class="number">0</span></span><br><span class="line">	<span class="keyword">for</span> _, v := <span class="keyword">range</span> moves &#123;</span><br><span class="line">		<span class="keyword">if</span> v == <span class="string">&#x27;L&#x27;</span> &#123;</span><br><span class="line">			x++</span><br><span class="line">		&#125; <span class="keyword">else</span> <span class="keyword">if</span> v == <span class="string">&#x27;R&#x27;</span> &#123;</span><br><span class="line">			x--</span><br><span class="line">		&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">			y++</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span> x &lt; <span class="number">0</span> &#123;</span><br><span class="line">		x = -x</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> x + y</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</details>]]></content>
      <categories>
        <category>刷题</category>
        <category>每日一题</category>
      </categories>
      <tags>
        <tag>刷题</tag>
      </tags>
  </entry>
  <entry>
    <title>leetcode228.汇总区间</title>
    <url>/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-8/leetcode228-%E6%B1%87%E6%80%BB%E5%8C%BA%E9%97%B4.html</url>
    <content><![CDATA[<p><a href="https://leetcode.cn/problems/summary-ranges/">原题链接 228. 汇总区间</a></p>
<hr>
<details>
    <summary>展开答案</summary>

<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">summaryRanges</span><span class="params">(nums []<span class="type">int</span>)</span></span> (ans []<span class="type">string</span>) &#123;</span><br><span class="line">	<span class="keyword">var</span> to_string <span class="function"><span class="keyword">func</span><span class="params">(x <span class="type">int</span>)</span></span> (res <span class="type">string</span>)</span><br><span class="line">	to_string = <span class="function"><span class="keyword">func</span><span class="params">(x <span class="type">int</span>)</span></span> (res <span class="type">string</span>) &#123;</span><br><span class="line">		<span class="keyword">if</span> x &lt; <span class="number">0</span> &#123;</span><br><span class="line">			<span class="keyword">return</span> <span class="string">&quot;-&quot;</span> + to_string(-x)</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span> x &lt; <span class="number">10</span> &#123;</span><br><span class="line">			<span class="keyword">return</span> <span class="type">string</span>(<span class="type">byte</span>(x%<span class="number">10</span>) + <span class="string">&#x27;0&#x27;</span>)</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">return</span> to_string(x/<span class="number">10</span>) + <span class="type">string</span>(<span class="type">byte</span>(x%<span class="number">10</span>)+<span class="string">&#x27;0&#x27;</span>)</span><br><span class="line">	&#125;</span><br><span class="line">	get := <span class="function"><span class="keyword">func</span><span class="params">(l, r <span class="type">int</span>)</span></span> <span class="type">string</span> &#123;</span><br><span class="line">		<span class="keyword">if</span> l == r &#123;</span><br><span class="line">			<span class="keyword">return</span> to_string(l)</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">return</span> to_string(l) + <span class="string">&quot;-&gt;&quot;</span> + to_string(r)</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">if</span> <span class="built_in">len</span>(nums) == <span class="number">0</span> &#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">	&#125;</span><br><span class="line">	pr := nums[<span class="number">0</span>]</span><br><span class="line">	<span class="keyword">for</span> i := <span class="number">1</span>; i &lt; <span class="built_in">len</span>(nums); i++ &#123;</span><br><span class="line">		<span class="keyword">if</span> nums[i] != nums[i<span class="number">-1</span>]+<span class="number">1</span> &#123;</span><br><span class="line">			ans = <span class="built_in">append</span>(ans, get(pr, nums[i<span class="number">-1</span>]))</span><br><span class="line">			pr = nums[i]</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	ans = <span class="built_in">append</span>(ans, get(pr, nums[<span class="built_in">len</span>(nums)<span class="number">-1</span>]))</span><br><span class="line">	<span class="keyword">return</span> ans</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</details>
]]></content>
      <categories>
        <category>刷题</category>
        <category>每日一题</category>
      </categories>
      <tags>
        <tag>刷题</tag>
      </tags>
  </entry>
  <entry>
    <title>leetcode1448.统计二叉树中好节点的数目</title>
    <url>/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-8/leetcode1448-%E7%BB%9F%E8%AE%A1%E4%BA%8C%E5%8F%89%E6%A0%91%E4%B8%AD%E5%A5%BD%E8%8A%82%E7%82%B9%E7%9A%84%E6%95%B0%E7%9B%AE.html</url>
    <content><![CDATA[<p><a href="https://leetcode.cn/problems/count-good-nodes-in-binary-tree/">原题链接 1448. 统计二叉树中好节点的数目</a></p>
<hr>
<details>
    <summary>展开答案</summary>

<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Definition for a binary tree node.</span></span><br><span class="line"><span class="comment"> * type TreeNode struct &#123;</span></span><br><span class="line"><span class="comment"> *     Val int</span></span><br><span class="line"><span class="comment"> *     Left *TreeNode</span></span><br><span class="line"><span class="comment"> *     Right *TreeNode</span></span><br><span class="line"><span class="comment"> * &#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">goodNodes</span><span class="params">(root *TreeNode)</span></span> (ans <span class="type">int</span>) &#123;</span><br><span class="line">	<span class="keyword">var</span> dfs <span class="function"><span class="keyword">func</span><span class="params">(root *TreeNode, ma <span class="type">int</span>)</span></span></span><br><span class="line">	dfs = <span class="function"><span class="keyword">func</span><span class="params">(root *TreeNode, ma <span class="type">int</span>)</span></span> &#123;</span><br><span class="line">		<span class="keyword">if</span> root == <span class="literal">nil</span> &#123;</span><br><span class="line">			<span class="keyword">return</span></span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span> root.Val &gt;= ma &#123;</span><br><span class="line">			ans++</span><br><span class="line">			ma = root.Val</span><br><span class="line">		&#125;</span><br><span class="line">		dfs(root.Left, ma)</span><br><span class="line">		dfs(root.Right, ma)</span><br><span class="line">	&#125;</span><br><span class="line">	dfs(root, <span class="number">-0x3f3f3f3f</span>)</span><br><span class="line">	<span class="keyword">return</span> ans</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</details>
]]></content>
      <categories>
        <category>刷题</category>
        <category>每日一题</category>
      </categories>
      <tags>
        <tag>刷题</tag>
      </tags>
  </entry>
  <entry>
    <title>leetcode1267.统计参与通信的服务器</title>
    <url>/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-8/leetcode1267-%E7%BB%9F%E8%AE%A1%E5%8F%82%E4%B8%8E%E9%80%9A%E4%BF%A1%E7%9A%84%E6%9C%8D%E5%8A%A1%E5%99%A8.html</url>
    <content><![CDATA[<p><a href="https://leetcode.cn/problems/count-servers-that-communicate/">原题链接 1267. 统计参与通信的服务器</a></p>
<hr>
<details>
    <summary>展开答案</summary>

<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">countServers</span><span class="params">(grid [][]<span class="type">int</span>)</span></span> (ans <span class="type">int</span>) &#123;</span><br><span class="line">	n, m := <span class="built_in">len</span>(grid), <span class="built_in">len</span>(grid[<span class="number">0</span>])</span><br><span class="line">	cntr, cntc := <span class="built_in">make</span>([]<span class="type">int</span>, n), <span class="built_in">make</span>([]<span class="type">int</span>, m)</span><br><span class="line"></span><br><span class="line">	<span class="keyword">for</span> i, r := <span class="keyword">range</span> grid &#123;</span><br><span class="line">		<span class="keyword">for</span> j, v := <span class="keyword">range</span> r &#123;</span><br><span class="line">			<span class="keyword">if</span> v == <span class="number">1</span> &#123;</span><br><span class="line">				cntr[i]++</span><br><span class="line">				cntc[j]++</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">for</span> i, r := <span class="keyword">range</span> grid &#123;</span><br><span class="line">		<span class="keyword">for</span> j, v := <span class="keyword">range</span> r &#123;</span><br><span class="line">			<span class="keyword">if</span> v == <span class="number">1</span> &amp;&amp; (cntr[i] &gt;= <span class="number">2</span> || cntc[j] &gt;= <span class="number">2</span>) &#123;</span><br><span class="line">				ans++</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> ans</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</details>
]]></content>
      <categories>
        <category>刷题</category>
        <category>每日一题</category>
      </categories>
      <tags>
        <tag>刷题</tag>
      </tags>
  </entry>
  <entry>
    <title>leetcode1782.统计点对的数目</title>
    <url>/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-8/leetcode1782-%E7%BB%9F%E8%AE%A1%E7%82%B9%E5%AF%B9%E7%9A%84%E6%95%B0%E7%9B%AE.html</url>
    <content><![CDATA[<p><a href="https://leetcode.cn/problems/count-pairs-of-nodes/">原题链接 1782. 统计点对的数目</a></p>
<hr>
<details>
    <summary>展开答案</summary>

<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">countPairs</span><span class="params">(n <span class="type">int</span>, edges [][]<span class="type">int</span>, queries []<span class="type">int</span>)</span></span> (ans []<span class="type">int</span>) &#123;</span><br><span class="line">	siz := <span class="built_in">make</span>([]<span class="type">int</span>, n+<span class="number">1</span>)</span><br><span class="line">	cnt := <span class="built_in">make</span>(<span class="keyword">map</span>[[<span class="number">2</span>]<span class="type">int</span>]<span class="type">int</span>, <span class="built_in">len</span>(edges))</span><br><span class="line">	<span class="keyword">for</span> _, v := <span class="keyword">range</span> edges &#123;</span><br><span class="line">		x, y := v[<span class="number">0</span>], v[<span class="number">1</span>]</span><br><span class="line">		<span class="keyword">if</span> x &gt; y &#123;</span><br><span class="line">			x, y = y, x</span><br><span class="line">		&#125;</span><br><span class="line">		siz[x]++</span><br><span class="line">		siz[y]++</span><br><span class="line">		cnt[[<span class="number">2</span>]<span class="type">int</span>&#123;x, y&#125;]++</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	sizc := <span class="built_in">make</span>([]<span class="type">int</span>, n+<span class="number">1</span>)</span><br><span class="line">	<span class="built_in">copy</span>(sizc, siz)</span><br><span class="line">	sort.Ints(sizc)</span><br><span class="line">	sizc = <span class="built_in">append</span>(sizc, <span class="number">0x3f3f3f3f</span>)</span><br><span class="line">	<span class="comment">// fmt.Println(siz)</span></span><br><span class="line">	<span class="keyword">for</span> _, q := <span class="keyword">range</span> queries &#123;</span><br><span class="line">		tmp := <span class="number">0</span></span><br><span class="line">		<span class="keyword">for</span> i, j := <span class="number">1</span>, n+<span class="number">1</span>; i &lt;= n; i++ &#123;</span><br><span class="line">			<span class="keyword">for</span> j &gt;= <span class="number">1</span> &amp;&amp; sizc[i]+sizc[j] &gt; q &#123;</span><br><span class="line">				j--</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">if</span> j+<span class="number">1</span> &gt; i &#123;</span><br><span class="line">				tmp += n - j</span><br><span class="line">			&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">				tmp += n - i</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">for</span> k, v := <span class="keyword">range</span> cnt &#123;</span><br><span class="line">			x, y := k[<span class="number">0</span>], k[<span class="number">1</span>]</span><br><span class="line">			<span class="keyword">if</span> siz[x]+siz[y] &gt; q &amp;&amp; siz[x]+siz[y]-v &lt;= q &#123;</span><br><span class="line">				tmp--</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		ans = <span class="built_in">append</span>(ans, tmp)</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> ans</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</details>
]]></content>
      <categories>
        <category>刷题</category>
        <category>每日一题</category>
      </categories>
      <tags>
        <tag>刷题</tag>
      </tags>
  </entry>
  <entry>
    <title>leetcode849.到最近的人的最大距离</title>
    <url>/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-8/leetcode849-%E5%88%B0%E6%9C%80%E8%BF%91%E7%9A%84%E4%BA%BA%E7%9A%84%E6%9C%80%E5%A4%A7%E8%B7%9D%E7%A6%BB.html</url>
    <content><![CDATA[<p><a href="https://leetcode.cn/problems/maximize-distance-to-closest-person/">原题链接 849. 到最近的人的最大距离</a></p>
<hr>
<details>
    <summary>展开答案</summary>

<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">maxDistToClosest</span><span class="params">(seats []<span class="type">int</span>)</span></span> (ans <span class="type">int</span>) &#123;</span><br><span class="line">	max := <span class="function"><span class="keyword">func</span><span class="params">(x, y <span class="type">int</span>)</span></span> <span class="type">int</span> &#123;</span><br><span class="line">		<span class="keyword">if</span> x &lt; y &#123;</span><br><span class="line">			<span class="keyword">return</span> y</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">return</span> x</span><br><span class="line">	&#125;</span><br><span class="line">	n := <span class="built_in">len</span>(seats)</span><br><span class="line">	a := <span class="built_in">make</span>([]<span class="type">int</span>, <span class="number">1</span>)</span><br><span class="line">	a[<span class="number">0</span>] = <span class="number">-1</span></span><br><span class="line">	<span class="keyword">for</span> i, v := <span class="keyword">range</span> seats &#123;</span><br><span class="line">		<span class="keyword">if</span> v == <span class="number">1</span> &#123;</span><br><span class="line">			a = <span class="built_in">append</span>(a, i)</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	ans = max(a[<span class="number">1</span>], n<span class="number">-1</span>-a[<span class="built_in">len</span>(a)<span class="number">-1</span>])</span><br><span class="line">	a = <span class="built_in">append</span>(a, n+<span class="number">1</span>)</span><br><span class="line">	<span class="keyword">for</span> i := <span class="number">1</span>; i &lt; <span class="built_in">len</span>(a); i++ &#123;</span><br><span class="line">		res := (a[i] - a[i<span class="number">-1</span>]) / <span class="number">2</span></span><br><span class="line">		ans = max(ans, res)</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> ans</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</details>
]]></content>
      <categories>
        <category>刷题</category>
        <category>每日一题</category>
      </categories>
      <tags>
        <tag>刷题</tag>
      </tags>
  </entry>
  <entry>
    <title>leetcode2337.移动片段得到字符串</title>
    <url>/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-8/leetcode2337-%E7%A7%BB%E5%8A%A8%E7%89%87%E6%AE%B5%E5%BE%97%E5%88%B0%E5%AD%97%E7%AC%A6%E4%B8%B2.html</url>
    <content><![CDATA[<p><a href="https://leetcode.cn/problems/move-pieces-to-obtain-a-string/">原题链接 2337. 移动片段得到字符串</a></p>
<hr>
<details>
    <summary>展开答案</summary>

<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">canChange</span><span class="params">(start <span class="type">string</span>, target <span class="type">string</span>)</span></span> <span class="type">bool</span> &#123;</span><br><span class="line">	cntl, cntr := <span class="number">0</span>, <span class="number">0</span></span><br><span class="line">	<span class="keyword">for</span> _, v := <span class="keyword">range</span> start &#123;</span><br><span class="line">		<span class="keyword">if</span> v == <span class="string">&#x27;L&#x27;</span> &#123;</span><br><span class="line">			cntl++</span><br><span class="line">		&#125; <span class="keyword">else</span> <span class="keyword">if</span> v == <span class="string">&#x27;R&#x27;</span> &#123;</span><br><span class="line">			cntr++</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span> _, v := <span class="keyword">range</span> target &#123;</span><br><span class="line">		<span class="keyword">if</span> v == <span class="string">&#x27;L&#x27;</span> &#123;</span><br><span class="line">			cntl--</span><br><span class="line">		&#125; <span class="keyword">else</span> <span class="keyword">if</span> v == <span class="string">&#x27;R&#x27;</span> &#123;</span><br><span class="line">			cntr--</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span> cntl != <span class="number">0</span> || cntr != <span class="number">0</span> &#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	n := <span class="built_in">len</span>(start)</span><br><span class="line">	i, j := <span class="number">0</span>, <span class="number">0</span></span><br><span class="line">	<span class="keyword">for</span> i &lt; n &#123;</span><br><span class="line">		<span class="keyword">if</span> start[i] == <span class="string">&#x27;_&#x27;</span> &#123;</span><br><span class="line">			i++</span><br><span class="line">			<span class="keyword">continue</span></span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">for</span> j &lt; n &amp;&amp; target[j] != start[i] &#123;</span><br><span class="line">			j++</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span> j == n || (target[j] == <span class="string">&#x27;R&#x27;</span> &amp;&amp; j &lt; i) || (target[j] == <span class="string">&#x27;L&#x27;</span> &amp;&amp; j &gt; i) &#123;</span><br><span class="line">			<span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">		&#125;</span><br><span class="line">		i++</span><br><span class="line">		j++</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</details>
]]></content>
      <categories>
        <category>刷题</category>
        <category>每日一题</category>
      </categories>
      <tags>
        <tag>刷题</tag>
      </tags>
  </entry>
  <entry>
    <title>leetcode6467.找出最长等值子数组</title>
    <url>/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-8/leetcode6467-%E6%89%BE%E5%87%BA%E6%9C%80%E9%95%BF%E7%AD%89%E5%80%BC%E5%AD%90%E6%95%B0%E7%BB%84.html</url>
    <content><![CDATA[<p><a href="https://leetcode.cn/problems/find-the-longest-equal-subarray/">原题链接 6467. 找出最长等值子数组</a></p>
<hr>
<details>
    <summary>展开答案</summary>

<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">longestEqualSubarray</span><span class="params">(nums []<span class="type">int</span>, k <span class="type">int</span>)</span></span> (ans <span class="type">int</span>) &#123;</span><br><span class="line">	max := <span class="function"><span class="keyword">func</span><span class="params">(x, y <span class="type">int</span>)</span></span> <span class="type">int</span> &#123;</span><br><span class="line">		<span class="keyword">if</span> x &gt; y &#123;</span><br><span class="line">			<span class="keyword">return</span> x</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">return</span> y</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	n := <span class="built_in">len</span>(nums)</span><br><span class="line">	pos := <span class="built_in">make</span>([][]<span class="type">int</span>, n+<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">	<span class="keyword">for</span> i, v := <span class="keyword">range</span> nums &#123;</span><br><span class="line">		pos[v] = <span class="built_in">append</span>(pos[v], i)</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span> i := <span class="number">1</span>; i &lt;= n; i++ &#123;</span><br><span class="line">		q := <span class="built_in">make</span>([]<span class="type">int</span>, <span class="built_in">len</span>(pos[i])+<span class="number">10</span>)</span><br><span class="line">		hh, tt := <span class="number">0</span>, <span class="number">0</span></span><br><span class="line">		<span class="keyword">for</span> _, v := <span class="keyword">range</span> pos[i] &#123;</span><br><span class="line">			q[tt], tt = v, tt+<span class="number">1</span></span><br><span class="line">			le := tt - hh</span><br><span class="line">			<span class="keyword">if</span> v-q[hh]+<span class="number">1</span> &gt; le+k &#123;</span><br><span class="line">				hh++</span><br><span class="line">				le = tt - hh</span><br><span class="line">			&#125;</span><br><span class="line">			ans = max(ans, le)</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> ans</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</details>]]></content>
      <categories>
        <category>刷题</category>
        <category>每日一题</category>
      </categories>
      <tags>
        <tag>刷题</tag>
      </tags>
  </entry>
  <entry>
    <title>leetcode7006.销售利润最大化</title>
    <url>/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-8/leetcode7006-%E9%94%80%E5%94%AE%E5%88%A9%E6%B6%A6%E6%9C%80%E5%A4%A7%E5%8C%96.html</url>
    <content><![CDATA[<p><a href="https://leetcode.cn/problems/maximize-the-profit-as-the-salesman/">原题链接 7006. 销售利润最大化</a></p>
<hr>
<details>
    <summary>展开答案</summary>

<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">maximizeTheProfit</span><span class="params">(n <span class="type">int</span>, offers [][]<span class="type">int</span>)</span></span> <span class="type">int</span> &#123;</span><br><span class="line">	max := <span class="function"><span class="keyword">func</span><span class="params">(a, b <span class="type">int</span>)</span></span> <span class="type">int</span> &#123;</span><br><span class="line">		<span class="keyword">if</span> a &gt; b &#123;</span><br><span class="line">			<span class="keyword">return</span> a</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">return</span> b</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	pr := <span class="built_in">make</span>([][][<span class="number">2</span>]<span class="type">int</span>, n+<span class="number">1</span>)</span><br><span class="line">	<span class="keyword">for</span> i := <span class="number">0</span>; i &lt;= n; i++ &#123;</span><br><span class="line">		pr[i] = <span class="built_in">make</span>([][<span class="number">2</span>]<span class="type">int</span>, <span class="number">0</span>)</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span> _, v := <span class="keyword">range</span> offers &#123;</span><br><span class="line">		s, e, w := v[<span class="number">0</span>]+<span class="number">1</span>, v[<span class="number">1</span>]+<span class="number">1</span>, v[<span class="number">2</span>]</span><br><span class="line">		pr[e] = <span class="built_in">append</span>(pr[e], [<span class="number">2</span>]<span class="type">int</span>&#123;s, w&#125;)</span><br><span class="line">	&#125;</span><br><span class="line">	f := <span class="built_in">make</span>([]<span class="type">int</span>, n+<span class="number">1</span>)</span><br><span class="line">	f[<span class="number">0</span>] = <span class="number">0</span></span><br><span class="line">	<span class="keyword">for</span> i := <span class="number">1</span>; i &lt;= n; i++ &#123;</span><br><span class="line">		f[i] = max(f[i], f[i<span class="number">-1</span>])</span><br><span class="line">		<span class="keyword">for</span> j := <span class="number">0</span>; j &lt; <span class="built_in">len</span>(pr[i]); j++ &#123;</span><br><span class="line">			<span class="keyword">for</span> k := <span class="number">0</span>; k &lt; <span class="built_in">len</span>(pr[i][j]); k++ &#123;</span><br><span class="line">				s, w := pr[i][j][<span class="number">0</span>], pr[i][j][<span class="number">1</span>]</span><br><span class="line">				f[i] = max(f[i], f[s<span class="number">-1</span>]+w)</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> f[n]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</details>]]></content>
      <categories>
        <category>刷题</category>
        <category>每日一题</category>
      </categories>
      <tags>
        <tag>刷题</tag>
      </tags>
  </entry>
  <entry>
    <title>leetcode6450.k-avoiding数组的最小总和</title>
    <url>/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-8/leetcode6450-k-avoiding%E6%95%B0%E7%BB%84%E7%9A%84%E6%9C%80%E5%B0%8F%E6%80%BB%E5%92%8C.html</url>
    <content><![CDATA[<p><a href="https://leetcode.cn/problems/determine-the-minimum-sum-of-a-k-avoiding-array/">原题链接 6450. k-avoiding 数组的最小总和</a></p>
<hr>
<details>
    <summary>展开答案</summary>

<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">minimumSum</span><span class="params">(n <span class="type">int</span>, k <span class="type">int</span>)</span></span> (sum <span class="type">int</span>) &#123;</span><br><span class="line">	a := <span class="built_in">make</span>([]<span class="type">int</span>, <span class="number">0</span>)</span><br><span class="line">	cur := <span class="number">1</span></span><br><span class="line"></span><br><span class="line">	check := <span class="function"><span class="keyword">func</span><span class="params">(cur <span class="type">int</span>)</span></span> <span class="type">bool</span> &#123;</span><br><span class="line">		<span class="keyword">for</span> i := <span class="number">0</span>; i &lt; <span class="built_in">len</span>(a); i++ &#123;</span><br><span class="line">			<span class="keyword">if</span> a[i]+cur == k &#123;</span><br><span class="line">				<span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span> n != <span class="number">0</span> &#123;</span><br><span class="line">		<span class="keyword">for</span> check(cur) == <span class="literal">false</span> &#123;</span><br><span class="line">			cur++</span><br><span class="line">		&#125;</span><br><span class="line">		a = <span class="built_in">append</span>(a, cur)</span><br><span class="line">		cur++</span><br><span class="line">		n--</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">// fmt.Println(a)</span></span><br><span class="line">	sum = <span class="number">0</span></span><br><span class="line">	<span class="keyword">for</span> _, v := <span class="keyword">range</span> a &#123;</span><br><span class="line">		sum += v</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> sum</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</details>]]></content>
      <categories>
        <category>刷题</category>
        <category>每日一题</category>
      </categories>
      <tags>
        <tag>刷题</tag>
      </tags>
  </entry>
  <entry>
    <title>leetcode7004.判别首字母缩略词</title>
    <url>/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-8/leetcode7004-%E5%88%A4%E5%88%AB%E9%A6%96%E5%AD%97%E6%AF%8D%E7%BC%A9%E7%95%A5%E8%AF%8D.html</url>
    <content><![CDATA[<p><a href="https://leetcode.cn/problems/check-if-a-string-is-an-acronym-of-words/">原题链接 7004. 判别首字母缩略词</a></p>
<hr>
<details>
    <summary>展开答案</summary>

<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">isAcronym</span><span class="params">(words []<span class="type">string</span>, s <span class="type">string</span>)</span></span> <span class="type">bool</span> &#123;</span><br><span class="line">	n := <span class="built_in">len</span>(words)</span><br><span class="line">	<span class="keyword">if</span> n != <span class="built_in">len</span>(s) &#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span> i := <span class="number">0</span>; i &lt; n; i++ &#123;</span><br><span class="line">		<span class="keyword">if</span> s[i] != words[i][<span class="number">0</span>] &#123;</span><br><span class="line">			<span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</details>]]></content>
      <categories>
        <category>刷题</category>
        <category>每日一题</category>
      </categories>
      <tags>
        <tag>刷题</tag>
      </tags>
  </entry>
  <entry>
    <title>leetcode2236.判断根结点是否等于子结点之和</title>
    <url>/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-8/leetcode2236-%E5%88%A4%E6%96%AD%E6%A0%B9%E7%BB%93%E7%82%B9%E6%98%AF%E5%90%A6%E7%AD%89%E4%BA%8E%E5%AD%90%E7%BB%93%E7%82%B9%E4%B9%8B%E5%92%8C.html</url>
    <content><![CDATA[<p><a href="https://leetcode.cn/problems/root-equals-sum-of-children/">原题链接 2236. 判断根结点是否等于子结点之和</a></p>
<hr>
<details>
    <summary>展开答案</summary>

<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Definition for a binary tree node.</span></span><br><span class="line"><span class="comment"> * type TreeNode struct &#123;</span></span><br><span class="line"><span class="comment"> *     Val int</span></span><br><span class="line"><span class="comment"> *     Left *TreeNode</span></span><br><span class="line"><span class="comment"> *     Right *TreeNode</span></span><br><span class="line"><span class="comment"> * &#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">checkTree</span><span class="params">(root *TreeNode)</span></span> <span class="type">bool</span> &#123;</span><br><span class="line">	<span class="keyword">return</span> root.Val == root.Left.Val+root.Right.Val</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</details>]]></content>
      <categories>
        <category>刷题</category>
        <category>每日一题</category>
      </categories>
      <tags>
        <tag>刷题</tag>
      </tags>
  </entry>
  <entry>
    <title>leetcode6941.将三个组排序</title>
    <url>/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-8/leetcode6941-%E5%B0%86%E4%B8%89%E4%B8%AA%E7%BB%84%E6%8E%92%E5%BA%8F.html</url>
    <content><![CDATA[<p><a href="https://leetcode.cn/problems/sorting-three-groups/">原题链接 6941. 将三个组排序</a></p>
<hr>
<details>
    <summary>展开答案</summary>

<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">minimumOperations</span><span class="params">(nums []<span class="type">int</span>)</span></span> (ans <span class="type">int</span>) &#123;</span><br><span class="line">	min := <span class="function"><span class="keyword">func</span><span class="params">(x, y <span class="type">int</span>)</span></span> <span class="type">int</span> &#123;</span><br><span class="line">		<span class="keyword">if</span> x &gt; y &#123;</span><br><span class="line">			<span class="keyword">return</span> y</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">return</span> x</span><br><span class="line">	&#125;</span><br><span class="line">	n := <span class="built_in">len</span>(nums)</span><br><span class="line">	a := <span class="built_in">make</span>([][]<span class="type">int</span>, <span class="number">3</span>)</span><br><span class="line">	<span class="keyword">for</span> i, v := <span class="keyword">range</span> nums &#123;</span><br><span class="line">		a[v<span class="number">-1</span>] = <span class="built_in">append</span>(a[v<span class="number">-1</span>], i)</span><br><span class="line">	&#125;</span><br><span class="line">	ans = <span class="number">0x3f3f3f3f</span></span><br><span class="line">	<span class="comment">// fmt.Println(a[0])</span></span><br><span class="line">	<span class="keyword">for</span> i := <span class="number">0</span>; i &lt;= n; i++ &#123;</span><br><span class="line">		<span class="keyword">for</span> j := i; j &lt;= n; j++ &#123;</span><br><span class="line">			res := <span class="number">0</span></span><br><span class="line">			<span class="keyword">for</span> _, v := <span class="keyword">range</span> a[<span class="number">0</span>] &#123;</span><br><span class="line">				<span class="keyword">if</span> v &gt;= i &#123;</span><br><span class="line">					res++</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">for</span> _, v := <span class="keyword">range</span> a[<span class="number">1</span>] &#123;</span><br><span class="line">				<span class="keyword">if</span> v &lt; i || v &gt;= j &#123;</span><br><span class="line">					res++</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">for</span> _, v := <span class="keyword">range</span> a[<span class="number">2</span>] &#123;</span><br><span class="line">				<span class="keyword">if</span> v &lt; j &#123;</span><br><span class="line">					res++</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">			ans = min(ans, res)</span><br><span class="line">			<span class="comment">// fmt.Println(res,i,j)</span></span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> ans</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</details>]]></content>
      <categories>
        <category>刷题</category>
        <category>每日一题</category>
      </categories>
      <tags>
        <tag>刷题</tag>
      </tags>
  </entry>
  <entry>
    <title>leetcode8014.循环增长使字符串子序列等于另一个字符串</title>
    <url>/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-8/leetcode8014-%E5%BE%AA%E7%8E%AF%E5%A2%9E%E9%95%BF%E4%BD%BF%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%AD%90%E5%BA%8F%E5%88%97%E7%AD%89%E4%BA%8E%E5%8F%A6%E4%B8%80%E4%B8%AA%E5%AD%97%E7%AC%A6%E4%B8%B2.html</url>
    <content><![CDATA[<p><a href="https://leetcode.cn/problems/make-string-a-subsequence-using-cyclic-increments/">原题链接 8014. 循环增长使字符串子序列等于另一个字符串</a></p>
<hr>
<details>
    <summary>展开答案</summary>

<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">canMakeSubsequence</span><span class="params">(str1 <span class="type">string</span>, str2 <span class="type">string</span>)</span></span> <span class="type">bool</span> &#123;</span><br><span class="line">	n, m := <span class="built_in">len</span>(str1), <span class="built_in">len</span>(str2)</span><br><span class="line">	a, b := <span class="built_in">make</span>([]<span class="type">int</span>, n), <span class="built_in">make</span>([]<span class="type">int</span>, m)</span><br><span class="line">	<span class="keyword">for</span> i := <span class="number">0</span>; i &lt; n; i++ &#123;</span><br><span class="line">		a[i] = <span class="type">int</span>(str1[i] - <span class="string">&#x27;a&#x27;</span>)</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span> i := <span class="number">0</span>; i &lt; m; i++ &#123;</span><br><span class="line">		b[i] = <span class="type">int</span>(str2[i] - <span class="string">&#x27;a&#x27;</span>)</span><br><span class="line">	&#125;</span><br><span class="line">	i, j := <span class="number">0</span>, <span class="number">0</span></span><br><span class="line">	<span class="keyword">for</span> i &lt; n &amp;&amp; j &lt; m &#123;</span><br><span class="line">		<span class="keyword">if</span> a[i] == b[j] || ((a[i]+<span class="number">1</span>)%<span class="number">26</span>) == b[j] &#123;</span><br><span class="line">			j++</span><br><span class="line">			i++</span><br><span class="line">		&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">			i++</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="comment">// fmt.Println(i,j)</span></span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> j == m</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</details>
]]></content>
      <categories>
        <category>刷题</category>
        <category>每日一题</category>
      </categories>
      <tags>
        <tag>刷题</tag>
      </tags>
  </entry>
  <entry>
    <title>leetcode6954.统计和小于目标的下标对数目</title>
    <url>/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-8/leetcode6954-%E7%BB%9F%E8%AE%A1%E5%92%8C%E5%B0%8F%E4%BA%8E%E7%9B%AE%E6%A0%87%E7%9A%84%E4%B8%8B%E6%A0%87%E5%AF%B9%E6%95%B0%E7%9B%AE.html</url>
    <content><![CDATA[<p><a href="https://leetcode.cn/problems/count-pairs-whose-sum-is-less-than-target/">原题链接 6954. 统计和小于目标的下标对数目</a></p>
<hr>
<details>
    <summary>展开答案</summary>

<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">countPairs</span><span class="params">(nums []<span class="type">int</span>, target <span class="type">int</span>)</span></span> (ans <span class="type">int</span>) &#123;</span><br><span class="line">	n := <span class="built_in">len</span>(nums)</span><br><span class="line">	<span class="keyword">for</span> i := <span class="number">0</span>; i &lt; n; i++ &#123;</span><br><span class="line">		<span class="keyword">for</span> j := i + <span class="number">1</span>; j &lt; n; j++ &#123;</span><br><span class="line">			<span class="keyword">if</span> nums[j]+nums[i] &lt; target &#123;</span><br><span class="line">				ans++</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> ans</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</details>]]></content>
      <categories>
        <category>刷题</category>
        <category>每日一题</category>
      </categories>
      <tags>
        <tag>刷题</tag>
      </tags>
  </entry>
  <entry>
    <title>leetcode2235.两整数相加</title>
    <url>/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-8/leetcode2235-%E4%B8%A4%E6%95%B4%E6%95%B0%E7%9B%B8%E5%8A%A0.html</url>
    <content><![CDATA[<p><a href="https://leetcode.cn/problems/add-two-integers/">原题链接 2235. 两整数相加</a></p>
<hr>
<details>
    <summary>展开答案</summary>

<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">sum</span><span class="params">(num1 <span class="type">int</span>, num2 <span class="type">int</span>)</span></span> <span class="type">int</span> &#123;</span><br><span class="line">	<span class="keyword">return</span> num1 + num2</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</details>]]></content>
      <categories>
        <category>刷题</category>
        <category>每日一题</category>
      </categories>
      <tags>
        <tag>刷题</tag>
      </tags>
  </entry>
  <entry>
    <title>abc315G-Ai+Bj+Ck=X-1&lt;=i-j-k&lt;=N</title>
    <url>/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-8/abc315G-Ai-Bj-Ck-X-1-i-j-k-N.html</url>
    <content><![CDATA[<p><a href="https://atcoder.jp/contests/abc315/tasks/abc315_g">原题链接 abc315 G - Ai + Bj + Ck &#x3D; X (1 &lt;&#x3D; i, j, k &lt;&#x3D; N)</a></p>
<hr>
<details>
    <summary>展开答案</summary>

<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">	<span class="string">&quot;bufio&quot;</span></span><br><span class="line">	<span class="string">&quot;fmt&quot;</span></span><br><span class="line">	<span class="string">&quot;os&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> in = bufio.NewReader(os.Stdin)</span><br><span class="line"><span class="keyword">var</span> n, a, b, c, x <span class="type">int</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">	max := <span class="function"><span class="keyword">func</span><span class="params">(a, b <span class="type">int</span>)</span></span> <span class="type">int</span> &#123;</span><br><span class="line">		<span class="keyword">if</span> a &gt; b &#123;</span><br><span class="line">			<span class="keyword">return</span> a</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">return</span> b</span><br><span class="line">	&#125;</span><br><span class="line">	min := <span class="function"><span class="keyword">func</span><span class="params">(a, b <span class="type">int</span>)</span></span> <span class="type">int</span> &#123;</span><br><span class="line">		<span class="keyword">if</span> a &lt; b &#123;</span><br><span class="line">			<span class="keyword">return</span> a</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">return</span> b</span><br><span class="line">	&#125;</span><br><span class="line">	ceil := <span class="function"><span class="keyword">func</span><span class="params">(a, b <span class="type">int</span>)</span></span> <span class="type">int</span> &#123;</span><br><span class="line">		<span class="keyword">if</span> a &lt; <span class="number">0</span> &#123;</span><br><span class="line">			<span class="keyword">return</span> a / b</span><br><span class="line">		&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">			<span class="keyword">return</span> (a + b - <span class="number">1</span>) / b</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	floor := <span class="function"><span class="keyword">func</span><span class="params">(a, b <span class="type">int</span>)</span></span> <span class="type">int</span> &#123;</span><br><span class="line">		<span class="keyword">if</span> a &lt; <span class="number">0</span> &#123;</span><br><span class="line">			<span class="keyword">return</span> (a - b + <span class="number">1</span>) / b</span><br><span class="line">		&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">			<span class="keyword">return</span> a / b</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">var</span> exgcd <span class="function"><span class="keyword">func</span><span class="params">(a, b <span class="type">int</span>)</span></span> (d, x, y <span class="type">int</span>)</span><br><span class="line">	exgcd = <span class="function"><span class="keyword">func</span><span class="params">(a, b <span class="type">int</span>)</span></span> (d, x, y <span class="type">int</span>) &#123;</span><br><span class="line">		<span class="keyword">if</span> b == <span class="number">0</span> &#123;</span><br><span class="line">			<span class="keyword">return</span> a, <span class="number">1</span>, <span class="number">0</span></span><br><span class="line">		&#125;</span><br><span class="line">		d, y, x = exgcd(b, a%b)</span><br><span class="line">		<span class="keyword">return</span> d, x, y - a/b*x</span><br><span class="line">	&#125;</span><br><span class="line">	cnt := <span class="function"><span class="keyword">func</span><span class="params">(a, b, c <span class="type">int</span>)</span></span> <span class="type">int</span> &#123;</span><br><span class="line">		d, x, y := exgcd(a, b)</span><br><span class="line">		<span class="keyword">if</span> c%d != <span class="number">0</span> &#123;</span><br><span class="line">			<span class="keyword">return</span> <span class="number">0</span></span><br><span class="line">		&#125;</span><br><span class="line">		x = (c / d) % (b / d) * x % (b / d)</span><br><span class="line">		y = (c - a*x) / b</span><br><span class="line">		l := max(ceil(<span class="number">1</span>-x, b/d), ceil(y-n, a/d))</span><br><span class="line">		r := min(floor(n-x, b/d), floor(y<span class="number">-1</span>, a/d))</span><br><span class="line">		<span class="keyword">return</span> max(<span class="number">0</span>, r-l+<span class="number">1</span>)</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	fmt.Fscan(in, &amp;n, &amp;a, &amp;b, &amp;c, &amp;x)</span><br><span class="line">	ans := <span class="number">0</span></span><br><span class="line">	<span class="keyword">for</span> i := <span class="number">1</span>; i &lt;= n &amp;&amp; x-i*c &gt; <span class="number">0</span>; i++ &#123;</span><br><span class="line">		ans += cnt(a, b, x-i*c)</span><br><span class="line">	&#125;</span><br><span class="line">	fmt.Println(ans)</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
</details>
]]></content>
      <categories>
        <category>刷题</category>
        <category>每日一题</category>
      </categories>
      <tags>
        <tag>刷题</tag>
      </tags>
  </entry>
  <entry>
    <title>abc315F-Shortcuts</title>
    <url>/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-8/abc315F-Shortcuts.html</url>
    <content><![CDATA[<p><a href="https://atcoder.jp/contests/abc315/tasks/abc315_f">原题链接 abc315 F - Shortcuts</a></p>
<hr>
<details>
    <summary>展开答案</summary>

<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int long long</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> PII pair<span class="string">&lt;int,int&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> x first</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> y second</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">2e6</span> + <span class="number">9</span>, P = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"><span class="type">int</span> T, n;</span><br><span class="line"><span class="type">double</span> f[N][<span class="number">33</span>];</span><br><span class="line">PII a[N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">double</span> <span class="title">dis</span><span class="params">(<span class="type">int</span> x, <span class="type">int</span> y)</span> </span>&#123;</span><br><span class="line">	<span class="keyword">return</span> <span class="built_in">sqrt</span>((a[x].x - a[y].x) * (a[x].x - a[y].x) + (a[x].y - a[y].y) * (a[x].y - a[y].y));</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">double</span> <span class="title">C</span><span class="params">(<span class="type">int</span> x)</span> </span>&#123;</span><br><span class="line">	<span class="keyword">if</span> (x == <span class="number">0</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">else</span> <span class="built_in">return</span> (<span class="number">1</span> &lt;&lt; (x - <span class="number">1</span>));</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">	cout &lt;&lt; fixed &lt;&lt; <span class="built_in">setprecision</span>(<span class="number">10</span>);</span><br><span class="line">	cin &gt;&gt; n;</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">		cin &gt;&gt; a[i].x &gt;&gt; a[i].y;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">		<span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt;= <span class="number">30</span>; j++) f[i][j] = <span class="number">1e18</span>;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	f[<span class="number">1</span>][<span class="number">0</span>] = <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">		<span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt;= <span class="number">30</span>; j++) &#123;</span><br><span class="line">			<span class="keyword">for</span> (<span class="type">int</span> x = <span class="number">1</span>; x &lt;= <span class="number">30</span>; x++) &#123;</span><br><span class="line">				<span class="keyword">if</span> (i - x &gt;= <span class="number">1</span> &amp;&amp; j - x + <span class="number">1</span> &gt;= <span class="number">0</span>)</span><br><span class="line">					f[i][j] = <span class="built_in">min</span>(f[i][j], f[i - x][j - x + <span class="number">1</span>] + <span class="built_in">dis</span>(i, i - x) + <span class="built_in">C</span>(j) - <span class="built_in">C</span>(j - x + <span class="number">1</span>));</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="type">double</span> ans = f[n][<span class="number">0</span>];</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt;= <span class="number">30</span>; i++) &#123;</span><br><span class="line"><span class="comment">//		cout &lt;&lt; i &lt;&lt; &quot; &quot; &lt;&lt; f[n][i] &lt;&lt; &quot;\n&quot;;</span></span><br><span class="line">		ans = <span class="built_in">min</span>(ans, f[n][i]);</span><br><span class="line">	&#125;</span><br><span class="line">	cout &lt;&lt; ans;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</details>]]></content>
      <categories>
        <category>刷题</category>
        <category>每日一题</category>
      </categories>
      <tags>
        <tag>刷题</tag>
      </tags>
  </entry>
  <entry>
    <title>abc315E-Prerequisites</title>
    <url>/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-8/abc315E-Prerequisites.html</url>
    <content><![CDATA[<p><a href="https://atcoder.jp/contests/abc315/tasks/abc315_e">原题链接 abc315 E - Prerequisites</a></p>
<hr>
<details>
    <summary>展开答案</summary>

<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int long long</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> PII pair<span class="string">&lt;int,int&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> x first</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> y second</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">2e5</span> + <span class="number">9</span>, P = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"><span class="type">int</span> T, n;</span><br><span class="line">vector&lt;<span class="type">int</span>&gt; g[N];</span><br><span class="line"><span class="type">int</span> vis[N];</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">p</span><span class="params">(<span class="type">int</span> u)</span> </span>&#123;</span><br><span class="line">	<span class="keyword">if</span> (vis[u]) <span class="keyword">return</span>;</span><br><span class="line">	vis[u] = <span class="number">1</span>;</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> v : g[u]) &#123;</span><br><span class="line">		<span class="built_in">p</span>(v);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span> (u != <span class="number">1</span>)cout &lt;&lt; u &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">	cin &gt;&gt; n;</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">		<span class="type">int</span> k, u;</span><br><span class="line">		cin &gt;&gt; k;</span><br><span class="line">		<span class="keyword">while</span> (k--) &#123;</span><br><span class="line">			cin &gt;&gt; u;</span><br><span class="line">			g[i].<span class="built_in">push_back</span>(u);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">p</span>(<span class="number">1</span>);</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</details>]]></content>
      <categories>
        <category>刷题</category>
        <category>每日一题</category>
      </categories>
      <tags>
        <tag>刷题</tag>
      </tags>
  </entry>
  <entry>
    <title>abc315C-Flavors</title>
    <url>/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-8/abc315C-Flavors.html</url>
    <content><![CDATA[<p><a href="https://atcoder.jp/contests/abc315/tasks/abc315_c">原题链接 abc315 C - Flavors</a></p>
<hr>
<details>
    <summary>展开答案</summary>

<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int long long</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> PII pair<span class="string">&lt;int,int&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> x first</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> y second</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">2e6</span> + <span class="number">9</span>, P = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"><span class="type">int</span> T, n;</span><br><span class="line">vector&lt;<span class="type">int</span>&gt;a[N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">	cin &gt;&gt; n;</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">		<span class="type">int</span> f, s;</span><br><span class="line">		cin &gt;&gt; f &gt;&gt; s;</span><br><span class="line">		a[f].<span class="built_in">push_back</span>(s);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="type">int</span> ans = <span class="number">0</span>;</span><br><span class="line">	vector&lt;<span class="type">int</span>&gt;<span class="built_in">v</span>(<span class="number">0</span>);</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">		<span class="built_in">sort</span>(a[i].<span class="built_in">begin</span>(), a[i].<span class="built_in">end</span>(), <span class="built_in">greater</span>&lt;<span class="type">int</span>&gt;());</span><br><span class="line">		<span class="keyword">if</span> (a[i].<span class="built_in">size</span>() &gt;= <span class="number">2</span>) &#123;</span><br><span class="line">			ans = <span class="built_in">max</span>(ans, a[i][<span class="number">0</span>] + a[i][<span class="number">1</span>] / <span class="number">2</span>);</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span> (a[i].<span class="built_in">size</span>() != <span class="number">0</span>) v.<span class="built_in">push_back</span>(a[i][<span class="number">0</span>]);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">sort</span>(v.<span class="built_in">begin</span>(), v.<span class="built_in">end</span>(), <span class="built_in">greater</span>&lt;<span class="type">int</span>&gt;());</span><br><span class="line">	ans = <span class="built_in">max</span>(ans, v[<span class="number">0</span>] + v[<span class="number">1</span>]);</span><br><span class="line">	cout &lt;&lt; ans;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</details>
]]></content>
      <categories>
        <category>刷题</category>
        <category>每日一题</category>
      </categories>
      <tags>
        <tag>刷题</tag>
      </tags>
  </entry>
  <entry>
    <title>leetcode1388.3n块披萨</title>
    <url>/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-8/leetcode1388-3n%E5%9D%97%E6%8A%AB%E8%90%A8.html</url>
    <content><![CDATA[<p><a href="https://leetcode.cn/problems/pizza-with-3n-slices/">原题链接 1388. 3n 块披萨</a></p>
<hr>
<details>
    <summary>展开答案</summary>

<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">maxSizeSlices</span><span class="params">(slices []<span class="type">int</span>)</span></span> <span class="type">int</span> &#123;</span><br><span class="line">	max := <span class="function"><span class="keyword">func</span><span class="params">(x, y <span class="type">int</span>)</span></span> <span class="type">int</span> &#123;</span><br><span class="line">		<span class="keyword">if</span> x &gt; y &#123;</span><br><span class="line">			<span class="keyword">return</span> x</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">return</span> y</span><br><span class="line">	&#125;</span><br><span class="line">	n := <span class="built_in">len</span>(slices)</span><br><span class="line">	ans := <span class="number">0</span></span><br><span class="line">	f := <span class="built_in">make</span>([][]<span class="type">int</span>, n<span class="number">-1</span>)</span><br><span class="line">	<span class="keyword">for</span> i := <span class="number">0</span>; i &lt; n<span class="number">-1</span>; i++ &#123;</span><br><span class="line">		f[i] = <span class="built_in">make</span>([]<span class="type">int</span>, n/<span class="number">3</span>+<span class="number">1</span>)</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	f[<span class="number">0</span>][<span class="number">1</span>] = slices[<span class="number">0</span>]</span><br><span class="line">	f[<span class="number">1</span>][<span class="number">1</span>] = max(slices[<span class="number">0</span>], slices[<span class="number">1</span>])</span><br><span class="line">	<span class="keyword">for</span> j := <span class="number">1</span>; j &lt;= n/<span class="number">3</span>; j++ &#123;</span><br><span class="line">		<span class="keyword">for</span> i := <span class="number">0</span>; i &lt; n<span class="number">-1</span>; i++ &#123;</span><br><span class="line">			<span class="keyword">if</span> i &gt;= <span class="number">1</span> &#123;</span><br><span class="line">				f[i][j] = max(f[i][j], f[i<span class="number">-1</span>][j])</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">if</span> i &gt;= <span class="number">2</span> &#123;</span><br><span class="line">				f[i][j] = max(f[i][j], f[i<span class="number">-2</span>][j<span class="number">-1</span>]+slices[i])</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span> i := <span class="number">0</span>; i &lt; n<span class="number">-1</span>; i++ &#123;</span><br><span class="line">		ans = max(ans, f[i][n/<span class="number">3</span>])</span><br><span class="line">		f[i] = <span class="built_in">make</span>([]<span class="type">int</span>, n/<span class="number">3</span>+<span class="number">1</span>)</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	f[<span class="number">0</span>][<span class="number">1</span>] = slices[<span class="number">1</span>]</span><br><span class="line">	f[<span class="number">1</span>][<span class="number">1</span>] = max(slices[<span class="number">1</span>], slices[<span class="number">2</span>])</span><br><span class="line">	<span class="keyword">for</span> j := <span class="number">1</span>; j &lt;= n/<span class="number">3</span>; j++ &#123;</span><br><span class="line">		<span class="keyword">for</span> i := <span class="number">0</span>; i &lt; n<span class="number">-1</span>; i++ &#123;</span><br><span class="line">			<span class="keyword">if</span> i &gt;= <span class="number">1</span> &#123;</span><br><span class="line">				f[i][j] = max(f[i][j], f[i<span class="number">-1</span>][j])</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">if</span> i &gt;= <span class="number">2</span> &#123;</span><br><span class="line">				f[i][j] = max(f[i][j], f[i<span class="number">-2</span>][j<span class="number">-1</span>]+slices[i+<span class="number">1</span>])</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span> i := <span class="number">0</span>; i &lt; n<span class="number">-1</span>; i++ &#123;</span><br><span class="line">		ans = max(ans, f[i][n/<span class="number">3</span>])</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> ans</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</details>]]></content>
      <categories>
        <category>刷题</category>
        <category>每日一题</category>
      </categories>
      <tags>
        <tag>刷题</tag>
      </tags>
  </entry>
  <entry>
    <title>2023CCPC华为云挑战赛-1004塔</title>
    <url>/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-8/2023CCPC%E5%8D%8E%E4%B8%BA%E4%BA%91%E6%8C%91%E6%88%98%E8%B5%9B-1004%E5%A1%94.html</url>
    <content><![CDATA[<img data-src="/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-8/2023CCPC%E5%8D%8E%E4%B8%BA%E4%BA%91%E6%8C%91%E6%88%98%E8%B5%9B-1004%E5%A1%94/2023-08-19-19-52-58.png" class="" title="描述">

<img data-src="/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-8/2023CCPC%E5%8D%8E%E4%B8%BA%E4%BA%91%E6%8C%91%E6%88%98%E8%B5%9B-1004%E5%A1%94/2023-08-19-19-55-09.png" class="" title="样例">

<hr>
<details>
    <summary>展开答案</summary>

<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int long long</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> PII pair<span class="string">&lt;int,int&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> x first</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> y second</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">2e5</span> + <span class="number">9</span>, P = <span class="number">998244353</span>;</span><br><span class="line"><span class="type">int</span> T, n, m, k;</span><br><span class="line"><span class="type">int</span> fact[N], fact_inv[N];</span><br><span class="line"></span><br><span class="line"><span class="function">ll <span class="title">fpow</span><span class="params">(ll a, ll b)</span> </span>&#123;</span><br><span class="line">	<span class="keyword">if</span> (!b)<span class="keyword">return</span> <span class="number">1</span> % P;</span><br><span class="line">	<span class="keyword">else</span> <span class="keyword">if</span> (b &amp; <span class="number">1</span>) <span class="keyword">return</span> a * <span class="built_in">fpow</span>(a * a % P, b &gt;&gt; <span class="number">1</span>) % P;</span><br><span class="line">	<span class="keyword">else</span> <span class="keyword">return</span> <span class="built_in">fpow</span>(a * a % P, b &gt;&gt; <span class="number">1</span>) % P;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">ll <span class="title">C</span><span class="params">(<span class="type">int</span> n, <span class="type">int</span> m)</span> </span>&#123;</span><br><span class="line">	<span class="keyword">if</span> (m &gt; n)<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">return</span> fact[n] * fact_inv[m] % P * fact_inv[n - m] % P;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">	ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">	fact[<span class="number">0</span>] = <span class="number">1</span>, fact_inv[<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">	<span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt; N; i++) &#123;</span><br><span class="line">		fact[i] = fact[i - <span class="number">1</span>] * i % P;</span><br><span class="line">		fact_inv[i] = <span class="built_in">fpow</span>(fact[i], P - <span class="number">2</span>);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	cin &gt;&gt; T;</span><br><span class="line">	<span class="keyword">while</span> (T--) &#123;</span><br><span class="line">		cin &gt;&gt; n &gt;&gt; m &gt;&gt; k;</span><br><span class="line">		<span class="type">int</span> inv = <span class="built_in">fpow</span>(<span class="built_in">C</span>(n, k), P - <span class="number">2</span>);</span><br><span class="line">		<span class="type">int</span> res = <span class="number">0</span>;</span><br><span class="line">		<span class="keyword">for</span> (<span class="type">int</span> i = n; i &lt;= n + k; i++) &#123;</span><br><span class="line">			<span class="type">int</span> p = <span class="built_in">C</span>(n - k - <span class="number">1</span> + (i - n), (i - n)) * inv % P;</span><br><span class="line">			res += (i - n) * p;</span><br><span class="line">			res %= P;</span><br><span class="line">		&#125;</span><br><span class="line">		cout &lt;&lt; (n + res * m % P) % P ;</span><br><span class="line">		<span class="keyword">if</span> (T) cout &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</details>]]></content>
      <categories>
        <category>刷题</category>
        <category>每日一题</category>
      </categories>
      <tags>
        <tag>刷题</tag>
      </tags>
  </entry>
  <entry>
    <title>leetcode1444.切披萨的方案数</title>
    <url>/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-8/leetcode1444-%E5%88%87%E6%8A%AB%E8%90%A8%E7%9A%84%E6%96%B9%E6%A1%88%E6%95%B0.html</url>
    <content><![CDATA[<p><a href="https://leetcode.cn/problems/number-of-ways-of-cutting-a-pizza/">原题链接 1444. 切披萨的方案数</a></p>
<hr>
<details>
    <summary>展开答案</summary>

<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">ways</span><span class="params">(pizza []<span class="type">string</span>, k <span class="type">int</span>)</span></span> <span class="type">int</span> &#123;</span><br><span class="line">	n, m := <span class="built_in">len</span>(pizza), <span class="built_in">len</span>(pizza[<span class="number">0</span>])</span><br><span class="line"></span><br><span class="line">	a := <span class="built_in">make</span>([][]<span class="type">int</span>, n+<span class="number">1</span>)</span><br><span class="line">	sum := <span class="built_in">make</span>([][]<span class="type">int</span>, n+<span class="number">1</span>)</span><br><span class="line">	sum[<span class="number">0</span>] = <span class="built_in">make</span>([]<span class="type">int</span>, m+<span class="number">1</span>)</span><br><span class="line">	<span class="keyword">for</span> i := <span class="number">1</span>; i &lt;= n; i++ &#123;</span><br><span class="line">		a[i] = <span class="built_in">make</span>([]<span class="type">int</span>, m+<span class="number">1</span>)</span><br><span class="line">		<span class="keyword">for</span> j := <span class="number">1</span>; j &lt;= m; j++ &#123;</span><br><span class="line">			<span class="keyword">if</span> pizza[i<span class="number">-1</span>][j<span class="number">-1</span>] == <span class="string">&#x27;A&#x27;</span> &#123;</span><br><span class="line">				a[i][j] = <span class="number">1</span></span><br><span class="line">			&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">				a[i][j] = <span class="number">0</span></span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span> i := <span class="number">1</span>; i &lt;= n; i++ &#123;</span><br><span class="line">		sum[i] = <span class="built_in">make</span>([]<span class="type">int</span>, m+<span class="number">1</span>)</span><br><span class="line">		<span class="keyword">for</span> j := <span class="number">1</span>; j &lt;= m; j++ &#123;</span><br><span class="line">			sum[i][j] = sum[i<span class="number">-1</span>][j] + sum[i][j<span class="number">-1</span>] - sum[i<span class="number">-1</span>][j<span class="number">-1</span>] + a[i][j]</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">// fmt.Println(a,sum)</span></span><br><span class="line">	check := <span class="function"><span class="keyword">func</span><span class="params">(x1, y1, x2, y2 <span class="type">int</span>)</span></span> <span class="type">int</span> &#123;</span><br><span class="line">		res := sum[x2][y2] - sum[x2][y1<span class="number">-1</span>] - sum[x1<span class="number">-1</span>][y2] + sum[x1<span class="number">-1</span>][y1<span class="number">-1</span>]</span><br><span class="line">		<span class="keyword">if</span> res != <span class="number">0</span> &#123;</span><br><span class="line">			<span class="keyword">return</span> <span class="number">1</span></span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">return</span> <span class="number">0</span></span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">var</span> P <span class="type">int</span> = <span class="number">1e9</span> + <span class="number">7</span></span><br><span class="line">	f := <span class="built_in">make</span>([][][]<span class="type">int</span>, n+<span class="number">1</span>)</span><br><span class="line">	<span class="keyword">for</span> i := <span class="number">0</span>; i &lt;= n; i++ &#123;</span><br><span class="line">		f[i] = <span class="built_in">make</span>([][]<span class="type">int</span>, m+<span class="number">1</span>)</span><br><span class="line">		<span class="keyword">for</span> j := <span class="number">0</span>; j &lt;= m; j++ &#123;</span><br><span class="line">			f[i][j] = <span class="built_in">make</span>([]<span class="type">int</span>, k+<span class="number">1</span>)</span><br><span class="line">			<span class="keyword">for</span> ii := <span class="number">0</span>; ii &lt;= k; ii++ &#123;</span><br><span class="line">				f[i][j][ii] = P</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">var</span> dp <span class="function"><span class="keyword">func</span><span class="params">(i, j, k <span class="type">int</span>)</span></span> <span class="type">int</span></span><br><span class="line">	dp = <span class="function"><span class="keyword">func</span><span class="params">(i, j, k <span class="type">int</span>)</span></span> <span class="type">int</span> &#123;</span><br><span class="line">		<span class="keyword">if</span> f[i][j][k] != P &#123;</span><br><span class="line">			<span class="keyword">return</span> f[i][j][k]</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span> k == <span class="number">0</span> &#123;</span><br><span class="line">			<span class="keyword">return</span> check(i, j, n, m)</span><br><span class="line">		&#125;</span><br><span class="line">		res := <span class="number">0</span></span><br><span class="line">		<span class="keyword">for</span> x := <span class="number">1</span>; x+i &lt;= n; x++ &#123;</span><br><span class="line">			tmp := dp(i+x, j, k<span class="number">-1</span>) * check(i, j, i+x<span class="number">-1</span>, m)</span><br><span class="line">			res = (res + tmp) % P</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="comment">// fmt.Println(res)</span></span><br><span class="line">		<span class="keyword">for</span> x := <span class="number">1</span>; x+j &lt;= m; x++ &#123;</span><br><span class="line">			tmp := dp(i, j+x, k<span class="number">-1</span>) * check(i, j, n, j+x<span class="number">-1</span>)</span><br><span class="line">			<span class="comment">// fmt.Println(x,dp(i,j+x,k-1),check(i,j,n,j+x-1))</span></span><br><span class="line">			res = (res + tmp) % P</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="comment">// fmt.Println(res)</span></span><br><span class="line">		f[i][j][k] = res</span><br><span class="line">		<span class="keyword">return</span> res</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> dp(<span class="number">1</span>, <span class="number">1</span>, k<span class="number">-1</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
</details>
]]></content>
      <categories>
        <category>刷题</category>
        <category>每日一题</category>
      </categories>
      <tags>
        <tag>刷题</tag>
      </tags>
  </entry>
  <entry>
    <title>leetcode2682.找出转圈游戏输家</title>
    <url>/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-8/leetcode2682-%E6%89%BE%E5%87%BA%E8%BD%AC%E5%9C%88%E6%B8%B8%E6%88%8F%E8%BE%93%E5%AE%B6.html</url>
    <content><![CDATA[<p><a href="https://leetcode.cn/problems/find-the-losers-of-the-circular-game/">原题链接 2682. 找出转圈游戏输家</a></p>
<hr>
<details>
    <summary>展开答案</summary>

<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">circularGameLosers</span><span class="params">(n <span class="type">int</span>, k <span class="type">int</span>)</span></span> (ans []<span class="type">int</span>) &#123;</span><br><span class="line">	used := <span class="built_in">make</span>(<span class="keyword">map</span>[<span class="type">int</span>]<span class="keyword">struct</span>&#123;&#125;, <span class="number">0</span>)</span><br><span class="line">	<span class="keyword">for</span> cur, i := <span class="number">0</span>, <span class="number">1</span>; ; i++ &#123;</span><br><span class="line">		<span class="keyword">if</span> _, e := used[cur]; e &#123;</span><br><span class="line">			<span class="keyword">break</span></span><br><span class="line">		&#125;</span><br><span class="line">		used[cur] = <span class="keyword">struct</span>&#123;&#125;&#123;&#125;</span><br><span class="line">		cur = (cur + i*k) % n</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">for</span> i := <span class="number">1</span>; i &lt;= n; i++ &#123;</span><br><span class="line">		<span class="keyword">if</span> _, e := used[i<span class="number">-1</span>]; !e &#123;</span><br><span class="line">			ans = <span class="built_in">append</span>(ans, i)</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> ans</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</details>]]></content>
      <categories>
        <category>刷题</category>
        <category>每日一题</category>
      </categories>
      <tags>
        <tag>刷题</tag>
      </tags>
  </entry>
  <entry>
    <title>leetcode833.字符串中的查找与替换</title>
    <url>/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-8/leetcode833-%E5%AD%97%E7%AC%A6%E4%B8%B2%E4%B8%AD%E7%9A%84%E6%9F%A5%E6%89%BE%E4%B8%8E%E6%9B%BF%E6%8D%A2.html</url>
    <content><![CDATA[<p><a href="https://leetcode.cn/problems/find-and-replace-in-string/">原题链接 833. 字符串中的查找与替换</a></p>
<hr>
<details>
    <summary>展开答案</summary>

<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">findReplaceString</span><span class="params">(s <span class="type">string</span>, indices []<span class="type">int</span>, sources []<span class="type">string</span>, targets []<span class="type">string</span>)</span></span> <span class="type">string</span> &#123;</span><br><span class="line">	n := <span class="built_in">len</span>(indices)</span><br><span class="line">	<span class="keyword">type</span> option <span class="keyword">struct</span> &#123;</span><br><span class="line">		index          <span class="type">int</span></span><br><span class="line">		source, target <span class="type">string</span></span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	options := <span class="built_in">make</span>([]option, n)</span><br><span class="line">	<span class="keyword">for</span> i := <span class="number">0</span>; i &lt; n; i++ &#123;</span><br><span class="line">		options[i].index, options[i].source, options[i].target = indices[i], sources[i], targets[i]</span><br><span class="line">	&#125;</span><br><span class="line">	sort.Slice(options, <span class="function"><span class="keyword">func</span><span class="params">(i, j <span class="type">int</span>)</span></span> <span class="type">bool</span> &#123; <span class="keyword">return</span> options[i].index &lt; options[j].index &#125;)</span><br><span class="line"></span><br><span class="line">	res := <span class="built_in">make</span>([]<span class="type">byte</span>, <span class="number">0</span>)</span><br><span class="line">	<span class="keyword">for</span> i, j := <span class="number">0</span>, <span class="number">0</span>; i &lt; <span class="built_in">len</span>(s); i++ &#123;</span><br><span class="line">		<span class="keyword">if</span> j &lt; n &amp;&amp; i == options[j].index &#123;</span><br><span class="line">			le := <span class="built_in">len</span>(options[j].source)</span><br><span class="line">			<span class="keyword">if</span> i+le &lt;= <span class="built_in">len</span>(s) &amp;&amp; s[i:i+le] == options[j].source &#123;</span><br><span class="line">				res = <span class="built_in">append</span>(res, options[j].target...)</span><br><span class="line">				i = i + le - <span class="number">1</span></span><br><span class="line">			&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">				res = <span class="built_in">append</span>(res, s[i])</span><br><span class="line">			&#125;</span><br><span class="line">			j++</span><br><span class="line">		&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">			res = <span class="built_in">append</span>(res, s[i])</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="type">string</span>(res)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</details>]]></content>
      <categories>
        <category>刷题</category>
        <category>每日一题</category>
      </categories>
      <tags>
        <tag>刷题</tag>
      </tags>
  </entry>
  <entry>
    <title>leetcode617.合并二叉树</title>
    <url>/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-8/leetcode617-%E5%90%88%E5%B9%B6%E4%BA%8C%E5%8F%89%E6%A0%91.html</url>
    <content><![CDATA[<p><a href="https://leetcode.cn/problems/merge-sorted-array/">原题链接 88. 合并两个有序数组</a></p>
<hr>
<details>
    <summary>展开答案</summary>
    
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Definition for a binary tree node.</span></span><br><span class="line"><span class="comment"> * type TreeNode struct &#123;</span></span><br><span class="line"><span class="comment"> *     Val int</span></span><br><span class="line"><span class="comment"> *     Left *TreeNode</span></span><br><span class="line"><span class="comment"> *     Right *TreeNode</span></span><br><span class="line"><span class="comment"> * &#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">mergeTrees</span><span class="params">(root1 *TreeNode, root2 *TreeNode)</span></span> *TreeNode &#123;</span><br><span class="line">	<span class="keyword">if</span> root1 == <span class="literal">nil</span> &#123;</span><br><span class="line">		<span class="keyword">return</span> root2</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span> root2 == <span class="literal">nil</span> &#123;</span><br><span class="line">		<span class="keyword">return</span> root1</span><br><span class="line">	&#125;</span><br><span class="line">	root1.Val += root2.Val</span><br><span class="line">	root1.Left = mergeTrees(root1.Left, root2.Left)</span><br><span class="line">	root1.Right = mergeTrees(root1.Right, root2.Right)</span><br><span class="line">	<span class="keyword">return</span> root1</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</details>]]></content>
      <categories>
        <category>刷题</category>
        <category>每日一题</category>
      </categories>
      <tags>
        <tag>刷题</tag>
      </tags>
  </entry>
  <entry>
    <title>leetcode2817.限制条件下元素之间的最小绝对差</title>
    <url>/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-8/leetcode2817-%E9%99%90%E5%88%B6%E6%9D%A1%E4%BB%B6%E4%B8%8B%E5%85%83%E7%B4%A0%E4%B9%8B%E9%97%B4%E7%9A%84%E6%9C%80%E5%B0%8F%E7%BB%9D%E5%AF%B9%E5%B7%AE.html</url>
    <content><![CDATA[<p><a href="https://leetcode.cn/problems/minimum-absolute-difference-between-elements-with-constraint/">原题链接 2817. 限制条件下元素之间的最小绝对差</a></p>
<hr>
<details>
    <summary>展开答案</summary>
    
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">minAbsoluteDifference</span><span class="params">(vector&lt;<span class="type">int</span>&gt; &amp;a, <span class="type">int</span> x)</span> </span>&#123;</span><br><span class="line">        <span class="type">int</span> ans = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line">        set&lt;<span class="type">int</span>&gt; s;</span><br><span class="line">        s.<span class="built_in">clear</span>();</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = x; i &lt; a.<span class="built_in">size</span>(); i++) &#123;</span><br><span class="line">            s.<span class="built_in">insert</span>(a[i - x]);</span><br><span class="line">            <span class="keyword">auto</span> it = s.<span class="built_in">lower_bound</span>(a[i]);</span><br><span class="line">            <span class="keyword">if</span> (it == s.<span class="built_in">end</span>()) &#123;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="type">int</span> r = *it;</span><br><span class="line">            ans = <span class="built_in">min</span>(ans, <span class="built_in">abs</span>(r - a[i]));</span><br><span class="line">        &#125;</span><br><span class="line">        s.<span class="built_in">clear</span>();</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; a.<span class="built_in">size</span>(); i++) a[i] = -a[i];</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = x; i &lt; a.<span class="built_in">size</span>(); i++) &#123;</span><br><span class="line">            s.<span class="built_in">insert</span>(a[i - x]);</span><br><span class="line">            <span class="keyword">auto</span> it = s.<span class="built_in">lower_bound</span>(a[i]);</span><br><span class="line">            <span class="comment">// for(int ii:s) cout&lt;&lt;ii&lt;&lt;&quot; &quot;;</span></span><br><span class="line">            <span class="comment">// cout&lt;&lt;&quot;\n&quot;;</span></span><br><span class="line">            <span class="keyword">if</span> (it == s.<span class="built_in">end</span>()) &#123;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="type">int</span> r = *it;</span><br><span class="line">            ans = <span class="built_in">min</span>(ans, <span class="built_in">abs</span>(r - a[i]));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
</details>

]]></content>
      <categories>
        <category>刷题</category>
        <category>每日一题</category>
      </categories>
      <tags>
        <tag>刷题</tag>
      </tags>
  </entry>
  <entry>
    <title>leetcode2818.操作使得分最大</title>
    <url>/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-8/leetcode2818-%E6%93%8D%E4%BD%9C%E4%BD%BF%E5%BE%97%E5%88%86%E6%9C%80%E5%A4%A7.html</url>
    <content><![CDATA[<p><a href="https://leetcode.cn/problems/apply-operations-to-maximize-score/">原题链接 2818. 操作使得分最大</a></p>
<hr>
<details>
    <summary>展开答案</summary>
    
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">maximumScore</span><span class="params">(nums []<span class="type">int</span>, k <span class="type">int</span>)</span></span> <span class="type">int</span> &#123;</span><br><span class="line">	<span class="keyword">const</span> (</span><br><span class="line">		N <span class="type">int</span> = <span class="number">1e5</span> + <span class="number">9</span></span><br><span class="line">		P <span class="type">int</span> = <span class="number">1e9</span> + <span class="number">7</span></span><br><span class="line">	)</span><br><span class="line">	sc := <span class="function"><span class="keyword">func</span><span class="params">()</span></span> (sc [N]<span class="type">int</span>) &#123;</span><br><span class="line">		<span class="keyword">for</span> i := <span class="number">2</span>; i &lt; N; i++ &#123;</span><br><span class="line">			<span class="keyword">if</span> sc[i] == <span class="number">0</span> &#123;</span><br><span class="line">				<span class="keyword">for</span> j := i; j &lt; N; j += i &#123;</span><br><span class="line">					sc[j]++</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">return</span></span><br><span class="line">	&#125;()</span><br><span class="line">	fastPow := <span class="function"><span class="keyword">func</span><span class="params">(x, y <span class="type">int</span>)</span></span> (ans <span class="type">int</span>) &#123;</span><br><span class="line">		ans = <span class="number">1</span></span><br><span class="line">		<span class="keyword">for</span> ; y &gt; <span class="number">0</span>; y /= <span class="number">2</span> &#123;</span><br><span class="line">			<span class="keyword">if</span> y&amp;<span class="number">1</span> == <span class="number">1</span> &#123;</span><br><span class="line">				ans = ans * x % P</span><br><span class="line">			&#125;</span><br><span class="line">			x = x * x % P</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">return</span></span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	n := <span class="built_in">len</span>(nums)</span><br><span class="line">	s, l, r := <span class="built_in">make</span>([]<span class="type">int</span>, n), <span class="built_in">make</span>([]<span class="type">int</span>, n), <span class="built_in">make</span>([]<span class="type">int</span>, n)</span><br><span class="line">	st, hh := <span class="built_in">make</span>([]<span class="type">int</span>, n+<span class="number">1</span>), <span class="number">0</span></span><br><span class="line">	<span class="keyword">for</span> i, v := <span class="keyword">range</span> nums &#123;</span><br><span class="line">		<span class="comment">//s[i] = gets(v)</span></span><br><span class="line">		s[i] = sc[v]</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span> i := <span class="number">0</span>; i &lt; n; i++ &#123;</span><br><span class="line">		<span class="keyword">for</span> hh != <span class="number">0</span> &amp;&amp; s[st[hh]] &lt; s[i] &#123;</span><br><span class="line">			hh--</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span> hh == <span class="number">0</span> &#123;</span><br><span class="line">			l[i] = <span class="number">0</span></span><br><span class="line">		&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">			l[i] = st[hh] + <span class="number">1</span></span><br><span class="line">		&#125;</span><br><span class="line">		st[hh+<span class="number">1</span>], hh = i, hh+<span class="number">1</span></span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	hh = <span class="number">0</span></span><br><span class="line">	<span class="keyword">for</span> i := n - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i-- &#123;</span><br><span class="line">		<span class="keyword">for</span> hh != <span class="number">0</span> &amp;&amp; s[st[hh]] &lt;= s[i] &#123;</span><br><span class="line">			hh--</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span> hh == <span class="number">0</span> &#123;</span><br><span class="line">			r[i] = n - <span class="number">1</span></span><br><span class="line">		&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">			r[i] = st[hh] - <span class="number">1</span></span><br><span class="line">		&#125;</span><br><span class="line">		st[hh+<span class="number">1</span>], hh = i, hh+<span class="number">1</span></span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">type</span> PII <span class="keyword">struct</span> &#123;</span><br><span class="line">		x, y <span class="type">int</span></span><br><span class="line">	&#125;</span><br><span class="line">	res := <span class="built_in">make</span>([]PII, n)</span><br><span class="line">	<span class="keyword">for</span> i := <span class="number">0</span>; i &lt; n; i++ &#123;</span><br><span class="line">		tmp := (r[i] - i + <span class="number">1</span>) * (i - l[i] + <span class="number">1</span>) % P</span><br><span class="line">		res[i] = PII&#123;nums[i], tmp&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	sort.Slice(res, <span class="function"><span class="keyword">func</span><span class="params">(i, j <span class="type">int</span>)</span></span> <span class="type">bool</span> &#123;</span><br><span class="line">		<span class="keyword">return</span> res[i].x &gt; res[j].x</span><br><span class="line">	&#125;)</span><br><span class="line"></span><br><span class="line">	<span class="comment">// fmt.Println(s,l,r)</span></span><br><span class="line"></span><br><span class="line">	ans := <span class="number">1</span></span><br><span class="line">	<span class="keyword">for</span> i := <span class="number">0</span>; i &lt; n &amp;&amp; k &gt; <span class="number">0</span>; i++ &#123;</span><br><span class="line">		x, y := res[i].x, res[i].y</span><br><span class="line">		<span class="keyword">if</span> k &gt;= y &#123;</span><br><span class="line">			ans = ans * fastPow(x, y) % P</span><br><span class="line">			k -= y</span><br><span class="line">		&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">			ans = ans * fastPow(x, k) % P</span><br><span class="line">			k = <span class="number">0</span></span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> ans</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</details>]]></content>
      <categories>
        <category>刷题</category>
        <category>每日一题</category>
      </categories>
      <tags>
        <tag>刷题</tag>
      </tags>
  </entry>
  <entry>
    <title>leetcode88.合并两个有序数组</title>
    <url>/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-8/leetcode88-%E5%90%88%E5%B9%B6%E4%B8%A4%E4%B8%AA%E6%9C%89%E5%BA%8F%E6%95%B0%E7%BB%84.html</url>
    <content><![CDATA[<p><a href="https://leetcode.cn/problems/merge-sorted-array/">原题链接 88. 合并两个有序数组</a></p>
<hr>
<details>
    <summary>展开答案</summary>
    
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">merge</span><span class="params">(nums1 []<span class="type">int</span>, m <span class="type">int</span>, nums2 []<span class="type">int</span>, n <span class="type">int</span>)</span></span> &#123;</span><br><span class="line">	i, j, e := m<span class="number">-1</span>, n<span class="number">-1</span>, n+m<span class="number">-1</span></span><br><span class="line">	<span class="keyword">for</span> ; i &gt;= <span class="number">0</span> &amp;&amp; j &gt;= <span class="number">0</span>; e-- &#123;</span><br><span class="line">		<span class="keyword">if</span> nums1[i] &gt; nums2[j] &#123;</span><br><span class="line">			nums1[e] = nums1[i]</span><br><span class="line">			i--</span><br><span class="line">		&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">			nums1[e] = nums2[j]</span><br><span class="line">			j--</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span> ; j &gt;= <span class="number">0</span>; e-- &#123;</span><br><span class="line">		nums1[e] = nums2[j]</span><br><span class="line">		j--</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</details>]]></content>
      <categories>
        <category>刷题</category>
        <category>每日一题</category>
      </categories>
      <tags>
        <tag>刷题</tag>
      </tags>
  </entry>
  <entry>
    <title>leetcode23.合并K个升序链表</title>
    <url>/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-8/leetcode23-%E5%90%88%E5%B9%B6K%E4%B8%AA%E5%8D%87%E5%BA%8F%E9%93%BE%E8%A1%A8.html</url>
    <content><![CDATA[<p><a href="https://leetcode.cn/problems/merge-k-sorted-lists">原题链接 23. 合并 K 个升序链表</a></p>
<hr>
<details>
    <summary>展开答案</summary>

<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Definition for singly-linked list.</span></span><br><span class="line"><span class="comment"> * type ListNode struct &#123;</span></span><br><span class="line"><span class="comment"> *     Val int</span></span><br><span class="line"><span class="comment"> *     Next *ListNode</span></span><br><span class="line"><span class="comment"> * &#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">merge</span><span class="params">(l1, l2 *ListNode)</span></span> *ListNode &#123;</span><br><span class="line">	<span class="keyword">if</span> l1 == <span class="literal">nil</span> &#123;</span><br><span class="line">		<span class="keyword">return</span> l2</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span> l2 == <span class="literal">nil</span> &#123;</span><br><span class="line">		<span class="keyword">return</span> l1</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span> l1.Val &lt; l2.Val &#123;</span><br><span class="line">		l1.Next = merge(l1.Next, l2)</span><br><span class="line">		<span class="keyword">return</span> l1</span><br><span class="line">	&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">		l2.Next = merge(l1, l2.Next)</span><br><span class="line">		<span class="keyword">return</span> l2</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">mergeKLists</span><span class="params">(lists []*ListNode)</span></span> *ListNode &#123;</span><br><span class="line">	n := <span class="built_in">len</span>(lists)</span><br><span class="line">	<span class="keyword">if</span> n == <span class="number">0</span> &#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span> n == <span class="number">1</span> &#123;</span><br><span class="line">		<span class="keyword">return</span> lists[<span class="number">0</span>]</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span> n == <span class="number">2</span> &#123;</span><br><span class="line">		<span class="keyword">return</span> merge(lists[<span class="number">0</span>], lists[<span class="number">1</span>])</span><br><span class="line">	&#125;</span><br><span class="line">	l := lists[<span class="number">0</span> : n/<span class="number">2</span>]</span><br><span class="line">	r := lists[n/<span class="number">2</span>:]</span><br><span class="line">	<span class="keyword">return</span> merge(mergeKLists(l), mergeKLists(r))</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</details>]]></content>
      <categories>
        <category>刷题</category>
        <category>每日一题</category>
      </categories>
      <tags>
        <tag>刷题</tag>
      </tags>
  </entry>
  <entry>
    <title>leetcode1572.矩阵对角线元素的和</title>
    <url>/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-8/leetcode1572-%E7%9F%A9%E9%98%B5%E5%AF%B9%E8%A7%92%E7%BA%BF%E5%85%83%E7%B4%A0%E7%9A%84%E5%92%8C.html</url>
    <content><![CDATA[<p><a href="https://leetcode.cn/problems/matrix-diagonal-sum/">原题链接 1572. 矩阵对角线元素的和</a></p>
<hr>
<details>
    <summary>展开答案</summary>
<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">diagonalSum</span><span class="params">(mat [][]<span class="type">int</span>)</span></span> (ans <span class="type">int</span>) &#123;</span><br><span class="line">	n := <span class="built_in">len</span>(mat)</span><br><span class="line">	<span class="keyword">for</span> i := <span class="number">0</span>; i &lt; n; i++ &#123;</span><br><span class="line">		ans += mat[i][i]</span><br><span class="line">		<span class="keyword">if</span> i != n<span class="number">-1</span>-i &#123;</span><br><span class="line">			ans += mat[i][n<span class="number">-1</span>-i]</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> ans</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</details>]]></content>
      <categories>
        <category>刷题</category>
        <category>每日一题</category>
      </categories>
      <tags>
        <tag>刷题</tag>
      </tags>
  </entry>
  <entry>
    <title>leetcode1289.下降路径最小和II</title>
    <url>/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-8/leetcode1289-%E4%B8%8B%E9%99%8D%E8%B7%AF%E5%BE%84%E6%9C%80%E5%B0%8F%E5%92%8CII.html</url>
    <content><![CDATA[<p><a href="https://leetcode.cn/problems/minimum-falling-path-sum-ii/">原题链接 1289. 下降路径最小和 II</a></p>
<hr>
<details>
    <summary>展开答案</summary>

<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">minFallingPathSum</span><span class="params">(grid [][]<span class="type">int</span>)</span></span> <span class="type">int</span> &#123;</span><br><span class="line">	min := <span class="function"><span class="keyword">func</span><span class="params">(x, y <span class="type">int</span>)</span></span> <span class="type">int</span> &#123;</span><br><span class="line">		<span class="keyword">if</span> x &gt; y &#123;</span><br><span class="line">			<span class="keyword">return</span> y</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">return</span> x</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">var</span> INF <span class="type">int</span> = <span class="number">0x3f3f3f3f</span></span><br><span class="line">	n := <span class="built_in">len</span>(grid)</span><br><span class="line">	f := <span class="built_in">make</span>([][]<span class="type">int</span>, n+<span class="number">1</span>)</span><br><span class="line">	<span class="keyword">for</span> i := <span class="number">0</span>; i &lt;= n; i++ &#123;</span><br><span class="line">		f[i] = <span class="built_in">make</span>([]<span class="type">int</span>, n+<span class="number">1</span>)</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span> i := <span class="number">1</span>; i &lt;= n; i++ &#123;</span><br><span class="line">		<span class="keyword">for</span> j := <span class="number">1</span>; j &lt;= n; j++ &#123;</span><br><span class="line">			f[i][j] = INF</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">for</span> j := <span class="number">1</span>; j &lt;= n; j++ &#123;</span><br><span class="line">			<span class="keyword">for</span> k := <span class="number">1</span>; k &lt;= n; k++ &#123;</span><br><span class="line">				<span class="keyword">if</span> k == j &amp;&amp; i != <span class="number">1</span> &#123;</span><br><span class="line">					<span class="keyword">continue</span></span><br><span class="line">				&#125;</span><br><span class="line">				f[i][j] = min(f[i][j], f[i<span class="number">-1</span>][k]+grid[i<span class="number">-1</span>][j<span class="number">-1</span>])</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">// fmt.Println(f)</span></span><br><span class="line">	ans := INF</span><br><span class="line">	<span class="keyword">for</span> i := <span class="number">1</span>; i &lt;= n; i++ &#123;</span><br><span class="line">		ans = min(ans, f[n][i])</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> ans</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</details>]]></content>
      <categories>
        <category>刷题</category>
        <category>每日一题</category>
      </categories>
      <tags>
        <tag>刷题</tag>
      </tags>
  </entry>
  <entry>
    <title>leetcode1281.整数的各位积和之差</title>
    <url>/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-8/leetcode1281-%E6%95%B4%E6%95%B0%E7%9A%84%E5%90%84%E4%BD%8D%E7%A7%AF%E5%92%8C%E4%B9%8B%E5%B7%AE.html</url>
    <content><![CDATA[<p><a href="https://leetcode.cn/problems/subtract-the-product-and-sum-of-digits-of-an-integer">原题链接 1281. 整数的各位积和之差</a></p>
<hr>
<details>
    <summary>展开答案</summary>

<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">subtractProductAndSum</span><span class="params">(n <span class="type">int</span>)</span></span> <span class="type">int</span> &#123;</span><br><span class="line">	mul, add := <span class="number">1</span>, <span class="number">0</span></span><br><span class="line">	<span class="keyword">for</span> n != <span class="number">0</span> &#123;</span><br><span class="line">		add += n % <span class="number">10</span></span><br><span class="line">		mul *= n % <span class="number">10</span></span><br><span class="line">		n /= <span class="number">10</span></span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> mul - add</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</details>
]]></content>
      <categories>
        <category>刷题</category>
        <category>每日一题</category>
      </categories>
      <tags>
        <tag>刷题</tag>
      </tags>
  </entry>
  <entry>
    <title>leetcode1749.任意子数组和的绝对值的最大值</title>
    <url>/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-8/leetcode1749-%E4%BB%BB%E6%84%8F%E5%AD%90%E6%95%B0%E7%BB%84%E5%92%8C%E7%9A%84%E7%BB%9D%E5%AF%B9%E5%80%BC%E7%9A%84%E6%9C%80%E5%A4%A7%E5%80%BC.html</url>
    <content><![CDATA[<p><a href="https://leetcode.cn/problems/maximum-absolute-sum-of-any-subarray">原题链接 1749. 任意子数组和的绝对值的最大值</a></p>
<hr>
<details>
    <summary>展开答案</summary>

<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">maxAbsoluteSum</span><span class="params">(nums []<span class="type">int</span>)</span></span> (ans <span class="type">int</span>) &#123;</span><br><span class="line">	max := <span class="function"><span class="keyword">func</span><span class="params">(x, y <span class="type">int</span>)</span></span> <span class="type">int</span> &#123;</span><br><span class="line">		<span class="keyword">if</span> x &gt; y &#123;</span><br><span class="line">			<span class="keyword">return</span> x</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">return</span> y</span><br><span class="line">	&#125;</span><br><span class="line">	res := <span class="number">0</span></span><br><span class="line">	<span class="keyword">for</span> _, v := <span class="keyword">range</span> nums &#123;</span><br><span class="line">		res = max(v, res+v)</span><br><span class="line">		ans = max(ans, res)</span><br><span class="line">	&#125;</span><br><span class="line">	res = <span class="number">0</span></span><br><span class="line">	<span class="keyword">for</span> _, v := <span class="keyword">range</span> nums &#123;</span><br><span class="line">		res = max(-v, res-v)</span><br><span class="line">		ans = max(ans, res)</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> ans</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</details>
]]></content>
      <categories>
        <category>刷题</category>
        <category>每日一题</category>
      </categories>
      <tags>
        <tag>刷题</tag>
      </tags>
  </entry>
  <entry>
    <title>leetcode344.反转字符串</title>
    <url>/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-8/leetcode344-%E5%8F%8D%E8%BD%AC%E5%AD%97%E7%AC%A6%E4%B8%B2.html</url>
    <content><![CDATA[<p><a href="https://leetcode.cn/problems/reverse-string/">原题链接 344. 反转字符串</a></p>
<hr>
<details>
    <summary>展开答案</summary>

<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">reverseString</span><span class="params">(s []<span class="type">byte</span>)</span></span> &#123;</span><br><span class="line">	<span class="keyword">for</span> i, j := <span class="number">0</span>, <span class="built_in">len</span>(s)<span class="number">-1</span>; i &lt; j; i, j = i+<span class="number">1</span>, j<span class="number">-1</span> &#123;</span><br><span class="line">		s[i], s[j] = s[j], s[i]</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</details>
]]></content>
      <categories>
        <category>刷题</category>
        <category>每日一题</category>
      </categories>
      <tags>
        <tag>刷题</tag>
      </tags>
  </entry>
  <entry>
    <title>codeforces1856E1.PermuTree easy version</title>
    <url>/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-8/codeforces1856E1-PermuTree-easy-version.html</url>
    <content><![CDATA[<p><a href="https://codeforces.com/contest/1856/problem/E1">原题链接 E1. PermuTree (easy version)</a></p>
<hr>
<details>
    <summary>展开答案</summary>

<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int long long</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> PII pair<span class="string">&lt;int,int&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> x first</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> y second</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">2e6</span> + <span class="number">9</span>, P = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"><span class="type">int</span> T, n, p, siz[N], ans;</span><br><span class="line">vector&lt;<span class="type">int</span>&gt; g[N];</span><br><span class="line">vector&lt;<span class="type">int</span>&gt; sum[N];</span><br><span class="line">vector&lt;<span class="type">int</span>&gt; si[N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">dfs1</span><span class="params">(<span class="type">int</span> u, <span class="type">int</span> fa)</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> ss = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; g[u].<span class="built_in">size</span>(); i++) &#123;</span><br><span class="line">        <span class="type">int</span> v = g[u][i];</span><br><span class="line">        <span class="keyword">if</span> (v != fa) &#123;</span><br><span class="line">            <span class="built_in">dfs1</span>(v, u);</span><br><span class="line">            siz[u] += siz[v];</span><br><span class="line">            si[u].<span class="built_in">push_back</span>(siz[v]);</span><br><span class="line">            ss += siz[v];</span><br><span class="line">            sum[u].<span class="built_in">push_back</span>(ss);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    siz[u]++;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">dfs2</span><span class="params">(<span class="type">int</span> u, <span class="type">int</span> fa)</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> kk = <span class="number">0</span>;</span><br><span class="line">    vector&lt;vector&lt;<span class="type">bool</span>&gt;&gt; <span class="built_in">f</span>(g[u].<span class="built_in">size</span>() + <span class="number">1</span>, <span class="built_in">vector</span>&lt;<span class="type">bool</span>&gt;(siz[u] + <span class="number">1</span>));</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt;= g[u].<span class="built_in">size</span>(); i++) &#123;</span><br><span class="line">        f[i][<span class="number">0</span>] = <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; g[u].<span class="built_in">size</span>(); i++) &#123;</span><br><span class="line">        <span class="type">int</span> v = g[u][i];</span><br><span class="line">        <span class="keyword">if</span> (v != fa) &#123;</span><br><span class="line">            f[i + <span class="number">1</span>][siz[v]] = <span class="literal">true</span>;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt;= siz[u]; j++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (j &gt;= siz[v]) f[i + <span class="number">1</span>][j] = (f[i][j - siz[v]] | f[i][j] | f[i + <span class="number">1</span>][j]);</span><br><span class="line">                <span class="keyword">else</span> f[i + <span class="number">1</span>][j] = f[i][j] | f[i + <span class="number">1</span>][j];</span><br><span class="line">            &#125;</span><br><span class="line"><span class="comment">//			int x, y;</span></span><br><span class="line"><span class="comment">//			x = sum[u][i];</span></span><br><span class="line"><span class="comment">//			y = siz[u] - 1 - x;</span></span><br><span class="line"><span class="comment">//			int res = x * y;</span></span><br><span class="line"><span class="comment">//			kk = max(kk, res);</span></span><br><span class="line">            <span class="built_in">dfs2</span>(v, u);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= siz[u]; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (f[g[u].<span class="built_in">size</span>()][i]) &#123;</span><br><span class="line">            kk = <span class="built_in">max</span>(kk, (siz[u] - <span class="number">1</span> - i) * i);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    ans += kk;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">2</span>; i &lt;= n; i++) &#123;</span><br><span class="line">        cin &gt;&gt; p;</span><br><span class="line">        g[p].<span class="built_in">push_back</span>(i);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">dfs1</span>(<span class="number">1</span>, <span class="number">0</span>);</span><br><span class="line">    <span class="comment">//	for (int i = 1; i &lt;= n; i++) &#123;</span></span><br><span class="line">    <span class="comment">//		cout &lt;&lt; i &lt;&lt; &quot; &quot; &lt;&lt; siz[i] &lt;&lt; &quot;\n&quot;;</span></span><br><span class="line">    <span class="comment">//	&#125;</span></span><br><span class="line">    <span class="built_in">dfs2</span>(<span class="number">1</span>, <span class="number">0</span>);</span><br><span class="line">    cout &lt;&lt; ans;</span><br><span class="line">    <span class="comment">//	cout &lt;&lt; &quot;\t\t&quot; &lt;&lt; ans;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">    <span class="comment">//	cin &gt;&gt; T;</span></span><br><span class="line">    T = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span> (T--) &#123;</span><br><span class="line">        <span class="built_in">solve</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</details>

]]></content>
      <categories>
        <category>刷题</category>
        <category>每日一题</category>
      </categories>
      <tags>
        <tag>刷题</tag>
      </tags>
  </entry>
  <entry>
    <title>codeforces1856C.To Become Max</title>
    <url>/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-8/codeforces1856C-To-Become-Max.html</url>
    <content><![CDATA[<p><a href="https://codeforces.com/contest/1856/problem/C">原题链接 1856C. To Become Max</a></p>
<hr>
<details>
    <summary>展开答案</summary>

<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int long long</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> PII pair<span class="string">&lt;int,int&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> x first</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> y second</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">2e6</span> + <span class="number">9</span>, P = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"><span class="type">int</span> T, n, a[N], k;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">ck</span><span class="params">(<span class="type">int</span> s, <span class="type">int</span> x)</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> rk = k;</span><br><span class="line">    <span class="keyword">while</span> (s &lt; n &amp;&amp; rk &gt;= <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (x &lt;= a[s]) &#123;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        rk -= (x - a[s]);</span><br><span class="line">        s++;</span><br><span class="line">        x--;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (s == n) &#123;</span><br><span class="line">        <span class="keyword">return</span> x &lt; a[n - <span class="number">1</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> rk &gt;= <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">check</span><span class="params">(<span class="type">int</span> x)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">ck</span>(i, x)) <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; k;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">        cin &gt;&gt; a[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">int</span> l = <span class="number">1</span>, r = <span class="number">1e9</span>;</span><br><span class="line">    <span class="keyword">while</span> (l != r) &#123;</span><br><span class="line">        <span class="type">int</span> mid = (l + r) &gt;&gt; <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">check</span>(mid)) &#123;</span><br><span class="line">            l = mid + <span class="number">1</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            r = mid;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">int</span> ans = l - <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    cout &lt;&lt; ans &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line"><span class="comment">//	cout &lt;&lt; &quot;\t\t\t&quot; &lt;&lt; ans &lt;&lt; &quot;\n&quot;;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">    cin &gt;&gt; T;</span><br><span class="line">    <span class="keyword">while</span> (T--) &#123;</span><br><span class="line">        <span class="built_in">solve</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</details>
]]></content>
      <categories>
        <category>刷题</category>
        <category>每日一题</category>
      </categories>
      <tags>
        <tag>刷题</tag>
      </tags>
  </entry>
  <entry>
    <title>codeforces1856B.Good Arrays</title>
    <url>/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-8/codeforces1856B-Good-Arrays.html</url>
    <content><![CDATA[<p><a href="https://codeforces.com/contest/1856/problem/B">原题链接 1856B. Good Arrays</a></p>
<hr>
<details>
    <summary>展开答案</summary>

<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> PII pair<span class="string">&lt;int,int&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> x first</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> y second</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int long long</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">2e6</span> + <span class="number">9</span>, P = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"><span class="type">int</span> T, n, a[N], mi[N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">        cin &gt;&gt; a[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">int</span> add = <span class="number">0</span>, sub = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (a[i] == <span class="number">1</span>) &#123;</span><br><span class="line">            add++;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            sub += (a[i] - <span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">//	cout &lt;&lt; add &lt;&lt; &quot; &quot; &lt;&lt; sub &lt;&lt; &quot;\n&quot;;</span></span><br><span class="line">    <span class="keyword">if</span> (add &lt;= sub &amp;&amp; n != <span class="number">1</span>) &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;YES\n&quot;</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        cout &lt;&lt; <span class="string">&quot;NO\n&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">    cin &gt;&gt; T;</span><br><span class="line">    <span class="keyword">while</span> (T--) &#123;</span><br><span class="line">        <span class="built_in">solve</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</details>
]]></content>
      <categories>
        <category>刷题</category>
        <category>每日一题</category>
      </categories>
      <tags>
        <tag>刷题</tag>
      </tags>
  </entry>
  <entry>
    <title>codeforces1856A.Tales of a Sort</title>
    <url>/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-8/codeforces1856A-Tales-of-a-Sort.html</url>
    <content><![CDATA[<p><a href="https://codeforces.com/contest/1856/problem/A">原题链接 1856A. Tales of a Sort</a></p>
<hr>
<details>
    <summary>展开答案</summary>

<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ll long long</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> PII pair<span class="string">&lt;int,int&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> x first</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> y second</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">2e6</span> + <span class="number">9</span>, P = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"><span class="type">int</span> T, n, a[N], mi[N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">        cin &gt;&gt; a[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">int</span> ans = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt; n; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (a[i] &lt; a[i - <span class="number">1</span>]) &#123;</span><br><span class="line">            ans = <span class="built_in">max</span>(ans, a[i - <span class="number">1</span>]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; ans &lt;&lt; <span class="string">&quot;\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">    cin &gt;&gt; T;</span><br><span class="line">    <span class="keyword">while</span> (T--) &#123;</span><br><span class="line">        <span class="built_in">solve</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</details>
]]></content>
      <categories>
        <category>刷题</category>
        <category>每日一题</category>
      </categories>
      <tags>
        <tag>刷题</tag>
      </tags>
  </entry>
  <entry>
    <title>leetcode334.递增的三元子序列</title>
    <url>/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-8/leetcode334-%E9%80%92%E5%A2%9E%E7%9A%84%E4%B8%89%E5%85%83%E5%AD%90%E5%BA%8F%E5%88%97.html</url>
    <content><![CDATA[<p><a href="https://leetcode.cn/problems/increasing-triplet-subsequence/">原题链接 334.递增的三元子序列</a></p>
<hr>
<details>
    <summary>展开答案</summary>

<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">increasingTriplet</span><span class="params">(nums []<span class="type">int</span>)</span></span> <span class="type">bool</span> &#123;</span><br><span class="line">	n := <span class="built_in">len</span>(nums)</span><br><span class="line">	mi := <span class="built_in">make</span>([]<span class="type">int</span>, n)</span><br><span class="line">	ma := <span class="built_in">make</span>([]<span class="type">int</span>, n)</span><br><span class="line">	mi[<span class="number">0</span>] = nums[<span class="number">0</span>]</span><br><span class="line">	ma[n<span class="number">-1</span>] = nums[n<span class="number">-1</span>]</span><br><span class="line">	<span class="keyword">for</span> i := <span class="number">1</span>; i &lt; n; i++ &#123;</span><br><span class="line">		mi[i] = min(mi[i<span class="number">-1</span>], nums[i])</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span> i := n - <span class="number">2</span>; i &gt;= <span class="number">0</span>; i-- &#123;</span><br><span class="line">		ma[i] = max(ma[i+<span class="number">1</span>], nums[i])</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span> i := <span class="number">1</span>; i &lt; n<span class="number">-1</span>; i++ &#123;</span><br><span class="line">		<span class="keyword">if</span> mi[i<span class="number">-1</span>] &lt; nums[i] &amp;&amp; nums[i] &lt; ma[i+<span class="number">1</span>] &#123;</span><br><span class="line">			<span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">min</span><span class="params">(x, y <span class="type">int</span>)</span></span> <span class="type">int</span> &#123;</span><br><span class="line">	<span class="keyword">if</span> x &gt; y &#123;</span><br><span class="line">		<span class="keyword">return</span> y</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> x</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">max</span><span class="params">(x, y <span class="type">int</span>)</span></span> <span class="type">int</span> &#123;</span><br><span class="line">	<span class="keyword">return</span> -min(-x, -y)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</details>]]></content>
      <categories>
        <category>刷题</category>
        <category>每日一题</category>
      </categories>
      <tags>
        <tag>刷题</tag>
      </tags>
  </entry>
  <entry>
    <title>leetcode24.两两交换链表中的节点</title>
    <url>/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-8/leetcode24-%E4%B8%A4%E4%B8%A4%E4%BA%A4%E6%8D%A2%E9%93%BE%E8%A1%A8%E4%B8%AD%E7%9A%84%E8%8A%82%E7%82%B9.html</url>
    <content><![CDATA[<p><a href="https://leetcode.cn/problems/swap-nodes-in-pairs/">原题链接 24.两两交换链表中的节点</a></p>
<hr>
<details>
    <summary>展开答案</summary>

<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Definition for singly-linked list.</span></span><br><span class="line"><span class="comment"> * type ListNode struct &#123;</span></span><br><span class="line"><span class="comment"> *     Val int</span></span><br><span class="line"><span class="comment"> *     Next *ListNode</span></span><br><span class="line"><span class="comment"> * &#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">swapPairs</span><span class="params">(head *ListNode)</span></span> *ListNode &#123;</span><br><span class="line">	<span class="keyword">if</span> head == <span class="literal">nil</span> || head.Next == <span class="literal">nil</span> &#123;</span><br><span class="line">		<span class="keyword">return</span> head</span><br><span class="line">	&#125;</span><br><span class="line">	head, head.Next, head.Next.Next = head.Next, swapPairs(head.Next.Next), head</span><br><span class="line">	<span class="keyword">return</span> head</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</details>]]></content>
      <categories>
        <category>刷题</category>
        <category>每日一题</category>
      </categories>
      <tags>
        <tag>刷题</tag>
      </tags>
  </entry>
  <entry>
    <title>leetcode6932.子序列最大优雅度</title>
    <url>/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-8/leetcode6932-%E5%AD%90%E5%BA%8F%E5%88%97%E6%9C%80%E5%A4%A7%E4%BC%98%E9%9B%85%E5%BA%A6.html</url>
    <content><![CDATA[<p><a href="https://leetcode.cn/problems/maximum-elegance-of-a-k-length-subsequence/">原题链接 6932.子序列最大优雅度</a></p>
<hr>
<details>
    <summary>展开答案</summary>

<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">findMaximumElegance</span><span class="params">(items [][]<span class="type">int</span>, k <span class="type">int</span>)</span></span> <span class="type">int64</span> &#123;</span><br><span class="line">	max := <span class="function"><span class="keyword">func</span><span class="params">(x, y <span class="type">int</span>)</span></span> <span class="type">int</span> &#123;</span><br><span class="line">		<span class="keyword">if</span> x &gt; y &#123;</span><br><span class="line">			<span class="keyword">return</span> x</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">return</span> y</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	n := <span class="built_in">len</span>(items)</span><br><span class="line">	ans := <span class="number">0</span></span><br><span class="line">	sort.Slice(items, <span class="function"><span class="keyword">func</span><span class="params">(i, j <span class="type">int</span>)</span></span> <span class="type">bool</span> &#123;</span><br><span class="line">		<span class="keyword">return</span> items[i][<span class="number">0</span>] &gt; items[j][<span class="number">0</span>]</span><br><span class="line">	&#125;)</span><br><span class="line">	tp := <span class="number">0</span></span><br><span class="line">	use := <span class="built_in">make</span>(<span class="keyword">map</span>[<span class="type">int</span>]<span class="keyword">struct</span>&#123;&#125;, <span class="number">0</span>)</span><br><span class="line">	st, hh := <span class="built_in">make</span>([]<span class="type">int</span>, n), <span class="number">0</span></span><br><span class="line">	<span class="keyword">for</span> i := <span class="number">0</span>; i &lt; k; i++ &#123;</span><br><span class="line">		p, c := items[i][<span class="number">0</span>], items[i][<span class="number">1</span>]</span><br><span class="line">		tp += p</span><br><span class="line">		<span class="keyword">if</span> _, e := use[c]; e &#123;</span><br><span class="line">			st[hh], hh = p, hh+<span class="number">1</span></span><br><span class="line">		&#125;</span><br><span class="line">		use[c] = <span class="keyword">struct</span>&#123;&#125;&#123;&#125;</span><br><span class="line">		res := tp + <span class="built_in">len</span>(use)*<span class="built_in">len</span>(use)</span><br><span class="line">		ans = max(ans, res)</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span> i := k; i &lt; n &amp;&amp; hh != <span class="number">0</span>; i++ &#123;</span><br><span class="line">		p, c := items[i][<span class="number">0</span>], items[i][<span class="number">1</span>]</span><br><span class="line">		<span class="keyword">if</span> _, e := use[c]; !e &#123;</span><br><span class="line">			use[c] = <span class="keyword">struct</span>&#123;&#125;&#123;&#125;</span><br><span class="line">			tp, hh = tp+p-st[hh<span class="number">-1</span>], hh<span class="number">-1</span></span><br><span class="line">		&#125;</span><br><span class="line">		res := tp + <span class="built_in">len</span>(use)*<span class="built_in">len</span>(use)</span><br><span class="line">		ans = max(ans, res)</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="type">int64</span>(ans)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</details>
]]></content>
      <categories>
        <category>刷题</category>
        <category>每日一题</category>
      </categories>
      <tags>
        <tag>刷题</tag>
      </tags>
  </entry>
  <entry>
    <title>leetcode6951.找出最安全路径</title>
    <url>/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-8/leetcode6951-%E6%89%BE%E5%87%BA%E6%9C%80%E5%AE%89%E5%85%A8%E8%B7%AF%E5%BE%84.html</url>
    <content><![CDATA[<p><a href="https://leetcode.cn/problems/find-the-safest-path-in-a-grid">原题链接 6951.找出最安全路径</a></p>
<hr>
<details>
    <summary>展开答案</summary>

<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">maximumSafenessFactor</span><span class="params">(grid [][]<span class="type">int</span>)</span></span> <span class="type">int</span> &#123;</span><br><span class="line">	dx := []<span class="type">int</span>&#123;<span class="number">-1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>&#125;</span><br><span class="line">	dy := []<span class="type">int</span>&#123;<span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">-1</span>&#125;</span><br><span class="line"></span><br><span class="line">	n := <span class="built_in">len</span>(grid)</span><br><span class="line">	rcx := <span class="function"><span class="keyword">func</span><span class="params">(x, y <span class="type">int</span>)</span></span> <span class="type">int</span> &#123;</span><br><span class="line">		<span class="keyword">return</span> x*n + y</span><br><span class="line">	&#125;</span><br><span class="line">	xrc := <span class="function"><span class="keyword">func</span><span class="params">(x <span class="type">int</span>)</span></span> (<span class="type">int</span>, <span class="type">int</span>) &#123;</span><br><span class="line">		<span class="keyword">return</span> x / n, x % n</span><br><span class="line">	&#125;</span><br><span class="line">	in := <span class="function"><span class="keyword">func</span><span class="params">(x, y <span class="type">int</span>)</span></span> <span class="type">bool</span> &#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="number">0</span> &lt;= x &amp;&amp; x &lt; n &amp;&amp; <span class="number">0</span> &lt;= y &amp;&amp; y &lt; n</span><br><span class="line">	&#125;</span><br><span class="line">	q, hh, tt := <span class="built_in">make</span>([]<span class="type">int</span>, n*n), <span class="number">0</span>, <span class="number">0</span></span><br><span class="line">	g := <span class="built_in">make</span>([][]<span class="type">int</span>, <span class="number">1</span>)</span><br><span class="line">	<span class="keyword">for</span> i := <span class="number">0</span>; i &lt; n; i++ &#123;</span><br><span class="line">		<span class="keyword">for</span> j := <span class="number">0</span>; j &lt; n; j++ &#123;</span><br><span class="line">			<span class="keyword">if</span> grid[i][j] == <span class="number">1</span> &#123;</span><br><span class="line">				g[<span class="number">0</span>] = <span class="built_in">append</span>(g[<span class="number">0</span>], rcx(i, j))</span><br><span class="line">				q[tt], tt = rcx(i, j), tt+<span class="number">1</span></span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">for</span> hh &lt; tt &#123;</span><br><span class="line">		x, y := xrc(q[hh])</span><br><span class="line">		hh++</span><br><span class="line">		<span class="keyword">for</span> i := <span class="number">0</span>; i &lt; <span class="number">4</span>; i++ &#123;</span><br><span class="line">			nx, ny := x+dx[i], y+dy[i]</span><br><span class="line">			<span class="keyword">if</span> in(nx, ny) &amp;&amp; grid[nx][ny] == <span class="number">0</span> &#123;</span><br><span class="line">				grid[nx][ny] = grid[x][y] + <span class="number">1</span></span><br><span class="line">				q[tt], tt = rcx(nx, ny), tt+<span class="number">1</span></span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">// fmt.Println(grid)</span></span><br><span class="line"></span><br><span class="line">	l, r := <span class="number">0</span>, n*n</span><br><span class="line">	<span class="keyword">for</span> l &lt; r &#123;</span><br><span class="line">		check := <span class="function"><span class="keyword">func</span><span class="params">(m <span class="type">int</span>)</span></span> <span class="type">bool</span> &#123;</span><br><span class="line">			<span class="keyword">var</span> dfs <span class="function"><span class="keyword">func</span><span class="params">(x, y <span class="type">int</span>)</span></span></span><br><span class="line">			vis := <span class="built_in">make</span>([][]<span class="type">bool</span>, n)</span><br><span class="line">			<span class="keyword">for</span> i := <span class="number">0</span>; i &lt; n; i++ &#123;</span><br><span class="line">				vis[i] = <span class="built_in">make</span>([]<span class="type">bool</span>, n)</span><br><span class="line">			&#125;</span><br><span class="line">			dfs = <span class="function"><span class="keyword">func</span><span class="params">(x, y <span class="type">int</span>)</span></span> &#123;</span><br><span class="line">				<span class="keyword">if</span> grid[x][y] &lt; m || vis[x][y] &#123;</span><br><span class="line">					<span class="keyword">return</span></span><br><span class="line">				&#125;</span><br><span class="line">				vis[x][y] = <span class="literal">true</span></span><br><span class="line">				<span class="keyword">for</span> i := <span class="number">0</span>; i &lt; <span class="number">4</span>; i++ &#123;</span><br><span class="line">					nx, ny := x+dx[i], y+dy[i]</span><br><span class="line">					<span class="keyword">if</span> in(nx, ny) &#123;</span><br><span class="line">						dfs(nx, ny)</span><br><span class="line">					&#125;</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">			dfs(<span class="number">0</span>, <span class="number">0</span>)</span><br><span class="line">			<span class="keyword">return</span> vis[n<span class="number">-1</span>][n<span class="number">-1</span>]</span><br><span class="line">		&#125;</span><br><span class="line">		m := (l + r) &gt;&gt; <span class="number">1</span></span><br><span class="line">		<span class="keyword">if</span> check(m) &#123;</span><br><span class="line">			l = m + <span class="number">1</span></span><br><span class="line">		&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">			r = m</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">if</span> l<span class="number">-2</span> &lt; <span class="number">0</span> &#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="number">0</span></span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> l - <span class="number">2</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</details>]]></content>
      <categories>
        <category>刷题</category>
        <category>每日一题</category>
      </categories>
      <tags>
        <tag>刷题</tag>
      </tags>
  </entry>
  <entry>
    <title>leetcode21.合并两个有序链表</title>
    <url>/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-8/leetcode21-%E5%90%88%E5%B9%B6%E4%B8%A4%E4%B8%AA%E6%9C%89%E5%BA%8F%E9%93%BE%E8%A1%A8.html</url>
    <content><![CDATA[<p><a href="https://leetcode.cn/problems/merge-two-sorted-lists/">原题链接 21.合并两个有序链表</a></p>
<hr>
<details>
    <summary>展开答案</summary>

<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Definition for singly-linked list.</span></span><br><span class="line"><span class="comment"> * type ListNode struct &#123;</span></span><br><span class="line"><span class="comment"> *     Val int</span></span><br><span class="line"><span class="comment"> *     Next *ListNode</span></span><br><span class="line"><span class="comment"> * &#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">mergeTwoLists</span><span class="params">(list1 *ListNode, list2 *ListNode)</span></span> *ListNode &#123;</span><br><span class="line">	<span class="keyword">if</span> list1 == <span class="literal">nil</span> &#123;</span><br><span class="line">		<span class="keyword">return</span> list2</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span> list2 == <span class="literal">nil</span> &#123;</span><br><span class="line">		<span class="keyword">return</span> list1</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span> list1.Val &lt; list2.Val &#123;</span><br><span class="line">		list1.Next = mergeTwoLists(list1.Next, list2)</span><br><span class="line">		<span class="keyword">return</span> list1</span><br><span class="line">	&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">		list2.Next = mergeTwoLists(list2.Next, list1)</span><br><span class="line">		<span class="keyword">return</span> list2</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</details>]]></content>
      <categories>
        <category>刷题</category>
        <category>每日一题</category>
      </categories>
      <tags>
        <tag>刷题</tag>
      </tags>
  </entry>
  <entry>
    <title>leetcode980.不同路径III</title>
    <url>/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-8/leetcode980-%E4%B8%8D%E5%90%8C%E8%B7%AF%E5%BE%84III.html</url>
    <content><![CDATA[<p><a href="https://leetcode.cn/problems/unique-paths-iii">原题链接 980.不同路径III</a></p>
<hr>
<details>
    <summary>展开答案</summary>

<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> dx [<span class="number">4</span>]<span class="type">int</span> = [<span class="number">4</span>]<span class="type">int</span>&#123;<span class="number">-1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>&#125;</span><br><span class="line"><span class="keyword">var</span> dy [<span class="number">4</span>]<span class="type">int</span> = [<span class="number">4</span>]<span class="type">int</span>&#123;<span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">-1</span>&#125;</span><br><span class="line"><span class="keyword">var</span> n, m, ans <span class="type">int</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">uniquePathsIII</span><span class="params">(grid [][]<span class="type">int</span>)</span></span> <span class="type">int</span> &#123;</span><br><span class="line">	ans = <span class="number">0</span></span><br><span class="line">	n, m = <span class="built_in">len</span>(grid), <span class="built_in">len</span>(grid[<span class="number">0</span>])</span><br><span class="line">	<span class="keyword">for</span> i := <span class="number">0</span>; i &lt; n; i++ &#123;</span><br><span class="line">		<span class="keyword">for</span> j := <span class="number">0</span>; j &lt; m; j++ &#123;</span><br><span class="line">			<span class="keyword">if</span> grid[i][j] == <span class="number">1</span> &#123;</span><br><span class="line">				dfs(grid, i, j)</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> ans</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">end</span><span class="params">(a [][]<span class="type">int</span>)</span></span> <span class="type">bool</span> &#123;</span><br><span class="line">	<span class="keyword">for</span> i := <span class="number">0</span>; i &lt; n; i++ &#123;</span><br><span class="line">		<span class="keyword">for</span> j := <span class="number">0</span>; j &lt; m; j++ &#123;</span><br><span class="line">			<span class="keyword">if</span> a[i][j] == <span class="number">0</span> &#123;</span><br><span class="line">				<span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">in</span><span class="params">(a [][]<span class="type">int</span>, x, y <span class="type">int</span>)</span></span> <span class="type">bool</span> &#123;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span> &lt;= x &amp;&amp; x &lt; n &amp;&amp; <span class="number">0</span> &lt;= y &amp;&amp; y &lt; m</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">dfs</span><span class="params">(a [][]<span class="type">int</span>, x, y <span class="type">int</span>)</span></span> &#123;</span><br><span class="line">	<span class="keyword">for</span> i := <span class="number">0</span>; i &lt; <span class="number">4</span>; i++ &#123;</span><br><span class="line">		nx, ny := x+dx[i], y+dy[i]</span><br><span class="line">		<span class="keyword">if</span> !in(a, nx, ny) &#123;</span><br><span class="line">			<span class="keyword">continue</span></span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span> a[nx][ny] == <span class="number">0</span> &#123;</span><br><span class="line">			a[nx][ny] = <span class="number">9</span></span><br><span class="line">			dfs(a, nx, ny)</span><br><span class="line">			a[nx][ny] = <span class="number">0</span></span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span> a[nx][ny] == <span class="number">2</span> &amp;&amp; end(a) &#123;</span><br><span class="line">			ans++</span><br><span class="line">			<span class="keyword">return</span></span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</details>

]]></content>
      <categories>
        <category>刷题</category>
        <category>每日一题</category>
      </categories>
      <tags>
        <tag>刷题</tag>
      </tags>
  </entry>
  <entry>
    <title>leetcode822.翻转卡片游戏</title>
    <url>/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-8/leetcode822-%E7%BF%BB%E8%BD%AC%E5%8D%A1%E7%89%87%E6%B8%B8%E6%88%8F.html</url>
    <content><![CDATA[<p><a href="https://leetcode.cn/problems/card-flipping-game">原题链接 822.翻转卡片游戏</a></p>
<hr>
<details>
    <summary>展开答案</summary>

<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">flipgame</span><span class="params">(fronts []<span class="type">int</span>, backs []<span class="type">int</span>)</span></span> (ans <span class="type">int</span>) &#123;</span><br><span class="line">	<span class="keyword">const</span> INF <span class="type">int</span> = <span class="number">0x3f3f3f3f</span></span><br><span class="line">	ans = INF</span><br><span class="line">	n := <span class="built_in">len</span>(fronts)</span><br><span class="line">	useless := <span class="built_in">make</span>(<span class="keyword">map</span>[<span class="type">int</span>]<span class="type">int</span>, <span class="number">0</span>)</span><br><span class="line">	cnt := <span class="built_in">make</span>(<span class="keyword">map</span>[<span class="type">int</span>]<span class="type">int</span>, <span class="number">0</span>)</span><br><span class="line">	<span class="keyword">for</span> i := <span class="number">0</span>; i &lt; n; i++ &#123;</span><br><span class="line">		<span class="keyword">if</span> fronts[i] == backs[i] &#123;</span><br><span class="line">			useless[fronts[i]] = <span class="number">1</span></span><br><span class="line">			<span class="keyword">continue</span></span><br><span class="line">		&#125;</span><br><span class="line">		cnt[fronts[i]]++</span><br><span class="line">		cnt[backs[i]]++</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span> i := <span class="number">0</span>; i &lt; n; i++ &#123;</span><br><span class="line">		v1, v2 := fronts[i], backs[i]</span><br><span class="line">		<span class="keyword">if</span> useless[v1] == <span class="number">0</span> &amp;&amp; cnt[v1] &lt;= n &#123;</span><br><span class="line">			ans = min(ans, v1)</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span> useless[v2] == <span class="number">0</span> &amp;&amp; cnt[v2] &lt;= n &#123;</span><br><span class="line">			ans = min(ans, v2)</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span> ans == INF &#123;</span><br><span class="line">		ans = <span class="number">0</span></span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> ans</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">min</span><span class="params">(x, y <span class="type">int</span>)</span></span> <span class="type">int</span> &#123;</span><br><span class="line">	<span class="keyword">if</span> x &gt; y &#123;</span><br><span class="line">		<span class="keyword">return</span> y</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> x</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</details>
]]></content>
      <categories>
        <category>刷题</category>
        <category>每日一题</category>
      </categories>
      <tags>
        <tag>刷题</tag>
      </tags>
  </entry>
  <entry>
    <title>leetcode2681.英雄的力量</title>
    <url>/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-7/leetcode2681-%E8%8B%B1%E9%9B%84%E7%9A%84%E5%8A%9B%E9%87%8F.html</url>
    <content><![CDATA[<p><a href="https://leetcode.cn/problems/power-of-heroes/">原题链接 2681.英雄的力量</a></p>
<hr>
<details>
    <summary>展开答案</summary>

<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">sumOfPower</span><span class="params">(nums []<span class="type">int</span>)</span></span> (ans <span class="type">int</span>) &#123;</span><br><span class="line">	<span class="keyword">const</span> P <span class="type">int</span> = <span class="number">1e9</span> + <span class="number">7</span></span><br><span class="line">	sort.Ints(nums)</span><br><span class="line">	pr := <span class="number">0</span></span><br><span class="line">	<span class="keyword">for</span> _, v := <span class="keyword">range</span> nums &#123;</span><br><span class="line">		res := v * pr % P * v</span><br><span class="line">		ans = (ans + res) % P</span><br><span class="line">		ans = (ans + v*v%P*v) % P</span><br><span class="line">		pr = (<span class="number">2</span>*pr + v) % P</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> ans</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</details>
]]></content>
      <categories>
        <category>刷题</category>
        <category>每日一题</category>
      </categories>
      <tags>
        <tag>刷题</tag>
      </tags>
  </entry>
  <entry>
    <title>leetcode143.重排链表</title>
    <url>/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-7/leetcode143-%E9%87%8D%E6%8E%92%E9%93%BE%E8%A1%A8.html</url>
    <content><![CDATA[<p><a href="https://leetcode.cn/problems/reorder-list">原题链接 143.重排链表</a></p>
<hr>
<details>
    <summary>展开答案</summary>

<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Definition for singly-linked list.</span></span><br><span class="line"><span class="comment"> * type ListNode struct &#123;</span></span><br><span class="line"><span class="comment"> *     Val int</span></span><br><span class="line"><span class="comment"> *     Next *ListNode</span></span><br><span class="line"><span class="comment"> * &#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">reorderList</span><span class="params">(head *ListNode)</span></span> &#123;</span><br><span class="line">	a := <span class="built_in">make</span>([]*ListNode, <span class="number">0</span>)</span><br><span class="line">	<span class="keyword">for</span> head != <span class="literal">nil</span> &#123;</span><br><span class="line">		a = <span class="built_in">append</span>(a, head)</span><br><span class="line">		head = head.Next</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span> i, j := <span class="number">0</span>, <span class="built_in">len</span>(a)<span class="number">-1</span>; i &lt;= j; i, j = i+<span class="number">1</span>, j<span class="number">-1</span> &#123;</span><br><span class="line">		<span class="keyword">if</span> i == j<span class="number">-1</span> &#123;</span><br><span class="line">			a[j].Next = <span class="literal">nil</span></span><br><span class="line">			<span class="keyword">break</span></span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span> i == j &#123;</span><br><span class="line">			a[i].Next, a[j].Next = <span class="literal">nil</span>, <span class="literal">nil</span></span><br><span class="line">			<span class="keyword">break</span></span><br><span class="line">		&#125;</span><br><span class="line">		a[i].Next, a[j].Next = a[j], a[i+<span class="number">1</span>]</span><br><span class="line">	&#125;</span><br><span class="line">	head = a[<span class="number">0</span>]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</details>
]]></content>
      <categories>
        <category>刷题</category>
        <category>每日一题</category>
      </categories>
      <tags>
        <tag>刷题</tag>
      </tags>
  </entry>
  <entry>
    <title>leetcode142.环形链表II</title>
    <url>/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-7/leetcode142-%E7%8E%AF%E5%BD%A2%E9%93%BE%E8%A1%A8II.html</url>
    <content><![CDATA[<p><a href="https://leetcode.cn/problems/linked-list-cycle-ii">原题链接 142.环形链表II</a></p>
<hr>
<details>
    <summary>展开答案</summary>

<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Definition for singly-linked list.</span></span><br><span class="line"><span class="comment"> * type ListNode struct &#123;</span></span><br><span class="line"><span class="comment"> *     Val int</span></span><br><span class="line"><span class="comment"> *     Next *ListNode</span></span><br><span class="line"><span class="comment"> * &#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">detectCycle</span><span class="params">(head *ListNode)</span></span> *ListNode &#123;</span><br><span class="line">	<span class="keyword">if</span> head == <span class="literal">nil</span> || head.Next == <span class="literal">nil</span> &#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">	&#125;</span><br><span class="line">	c1, c2 := head.Next, head.Next.Next</span><br><span class="line">	<span class="keyword">for</span> c1 != <span class="literal">nil</span> &amp;&amp; c2 != <span class="literal">nil</span> &#123;</span><br><span class="line">		<span class="keyword">if</span> c1 == c2 &#123;</span><br><span class="line">			ans := head</span><br><span class="line">			<span class="keyword">for</span> ans != c1 &#123;</span><br><span class="line">				ans = ans.Next</span><br><span class="line">				c1 = c1.Next</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">return</span> ans</span><br><span class="line">		&#125;</span><br><span class="line">		c1 = c1.Next</span><br><span class="line">		c2 = c2.Next</span><br><span class="line">		<span class="keyword">if</span> c2 == <span class="literal">nil</span> &#123;</span><br><span class="line">			<span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">		&#125;</span><br><span class="line">		c2 = c2.Next</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</details>]]></content>
      <categories>
        <category>刷题</category>
        <category>每日一题</category>
      </categories>
      <tags>
        <tag>刷题</tag>
      </tags>
  </entry>
  <entry>
    <title>leetcode141.环形链表</title>
    <url>/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-7/leetcode141-%E7%8E%AF%E5%BD%A2%E9%93%BE%E8%A1%A8.html</url>
    <content><![CDATA[<p><a href="https://leetcode.cn/problems/linked-list-cycle/">原题链接 141. 环形链表</a></p>
<hr>
<details>
    <summary>展开答案</summary>

<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Definition for singly-linked list.</span></span><br><span class="line"><span class="comment"> * type ListNode struct &#123;</span></span><br><span class="line"><span class="comment"> *     Val int</span></span><br><span class="line"><span class="comment"> *     Next *ListNode</span></span><br><span class="line"><span class="comment"> * &#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">hasCycle</span><span class="params">(head *ListNode)</span></span> <span class="type">bool</span> &#123;</span><br><span class="line">	<span class="keyword">if</span> head == <span class="literal">nil</span> || head.Next == <span class="literal">nil</span> &#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">	&#125;</span><br><span class="line">	c1, c2 := head.Next, head.Next.Next</span><br><span class="line">	<span class="keyword">for</span> c1 != <span class="literal">nil</span> &amp;&amp; c2 != <span class="literal">nil</span> &#123;</span><br><span class="line">		<span class="keyword">if</span> c1 == c2 &#123;</span><br><span class="line">			<span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">		&#125;</span><br><span class="line">		c1 = c1.Next</span><br><span class="line">		<span class="keyword">if</span> c2.Next == <span class="literal">nil</span> &#123;</span><br><span class="line">			<span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">		&#125;</span><br><span class="line">		c2 = c2.Next.Next</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</details>]]></content>
      <categories>
        <category>刷题</category>
        <category>每日一题</category>
      </categories>
      <tags>
        <tag>刷题</tag>
      </tags>
  </entry>
  <entry>
    <title>leetcode1851.包含每个查询的最小区间</title>
    <url>/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-7/leetcode1851-%E5%8C%85%E5%90%AB%E6%AF%8F%E4%B8%AA%E6%9F%A5%E8%AF%A2%E7%9A%84%E6%9C%80%E5%B0%8F%E5%8C%BA%E9%97%B4.html</url>
    <content><![CDATA[<p><a href="https://leetcode.cn/problems/minimum-interval-to-include-each-querys">原题链接 1851. 包含每个查询的最小区间</a></p>
<hr>
<details>
    <summary>展开答案</summary>

<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">minInterval</span><span class="params">(intervals [][]<span class="type">int</span>, queries []<span class="type">int</span>)</span></span> (ans []<span class="type">int</span>) &#123;</span><br><span class="line">	<span class="keyword">const</span> INF <span class="type">int</span> = <span class="number">0x3f3f3f3f</span></span><br><span class="line">	used := <span class="built_in">make</span>(<span class="keyword">map</span>[<span class="type">int</span>]<span class="type">int</span>, <span class="number">0</span>)</span><br><span class="line">	ks := <span class="built_in">make</span>([]<span class="type">int</span>, <span class="number">0</span>)</span><br><span class="line">	ks = <span class="built_in">append</span>(ks, <span class="number">0</span>)</span><br><span class="line">	<span class="keyword">for</span> _, v := <span class="keyword">range</span> intervals &#123;</span><br><span class="line">		<span class="keyword">if</span> used[v[<span class="number">0</span>]] == <span class="number">0</span> &#123;</span><br><span class="line">			ks = <span class="built_in">append</span>(ks, v[<span class="number">0</span>])</span><br><span class="line">			used[v[<span class="number">0</span>]] = <span class="number">1</span></span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span> used[v[<span class="number">1</span>]] == <span class="number">0</span> &#123;</span><br><span class="line">			ks = <span class="built_in">append</span>(ks, v[<span class="number">1</span>])</span><br><span class="line">			used[v[<span class="number">1</span>]] = <span class="number">1</span></span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span> _, v := <span class="keyword">range</span> queries &#123;</span><br><span class="line">		<span class="keyword">if</span> used[v] == <span class="number">0</span> &#123;</span><br><span class="line">			ks = <span class="built_in">append</span>(ks, v)</span><br><span class="line">			used[v] = <span class="number">1</span></span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	sort.Ints(ks)</span><br><span class="line">	<span class="comment">// fmt.Println(ks)</span></span><br><span class="line">	inv := <span class="built_in">make</span>(<span class="keyword">map</span>[<span class="type">int</span>]<span class="type">int</span>, <span class="built_in">len</span>(ks))</span><br><span class="line">	<span class="keyword">for</span> i, v := <span class="keyword">range</span> ks &#123;</span><br><span class="line">		inv[v] = i</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	min := <span class="function"><span class="keyword">func</span><span class="params">(x, y <span class="type">int</span>)</span></span> <span class="type">int</span> &#123;</span><br><span class="line">		<span class="keyword">if</span> x &gt; y &#123;</span><br><span class="line">			<span class="keyword">return</span> y</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">return</span> x</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">type</span> node <span class="keyword">struct</span> &#123;</span><br><span class="line">		l, r  <span class="type">int</span></span><br><span class="line">		mi, t <span class="type">int</span></span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">var</span> pushup <span class="function"><span class="keyword">func</span><span class="params">(u <span class="type">int</span>)</span></span></span><br><span class="line">	<span class="keyword">var</span> pushdown <span class="function"><span class="keyword">func</span><span class="params">(u <span class="type">int</span>)</span></span></span><br><span class="line">	<span class="keyword">var</span> build <span class="function"><span class="keyword">func</span><span class="params">(u, l, r <span class="type">int</span>)</span></span></span><br><span class="line">	<span class="keyword">var</span> modify <span class="function"><span class="keyword">func</span><span class="params">(u, l, r, x <span class="type">int</span>)</span></span></span><br><span class="line">	<span class="keyword">var</span> query <span class="function"><span class="keyword">func</span><span class="params">(u, k <span class="type">int</span>)</span></span> <span class="type">int</span></span><br><span class="line">	n := <span class="built_in">len</span>(ks) - <span class="number">1</span></span><br><span class="line">	tr := <span class="built_in">make</span>([]node, n&lt;&lt;<span class="number">2</span>)</span><br><span class="line">	pushup = <span class="function"><span class="keyword">func</span><span class="params">(u <span class="type">int</span>)</span></span> &#123;</span><br><span class="line">		tr[u].mi = min(tr[u&lt;&lt;<span class="number">1</span>].mi, tr[u&lt;&lt;<span class="number">1</span>|<span class="number">1</span>].mi)</span><br><span class="line">	&#125;</span><br><span class="line">	pushdown = <span class="function"><span class="keyword">func</span><span class="params">(u <span class="type">int</span>)</span></span> &#123;</span><br><span class="line">		tr[u&lt;&lt;<span class="number">1</span>].mi = min(tr[u&lt;&lt;<span class="number">1</span>].mi, tr[u].t)</span><br><span class="line">		tr[u&lt;&lt;<span class="number">1</span>].t = min(tr[u&lt;&lt;<span class="number">1</span>].t, tr[u].t)</span><br><span class="line">		tr[u&lt;&lt;<span class="number">1</span>|<span class="number">1</span>].mi = min(tr[u&lt;&lt;<span class="number">1</span>|<span class="number">1</span>].mi, tr[u].t)</span><br><span class="line">		tr[u&lt;&lt;<span class="number">1</span>|<span class="number">1</span>].t = min(tr[u&lt;&lt;<span class="number">1</span>|<span class="number">1</span>].t, tr[u].t)</span><br><span class="line">	&#125;</span><br><span class="line">	build = <span class="function"><span class="keyword">func</span><span class="params">(u, l, r <span class="type">int</span>)</span></span> &#123;</span><br><span class="line">		tr[u].l, tr[u].r, tr[u].t = l, r, INF</span><br><span class="line">		<span class="keyword">if</span> l == r &#123;</span><br><span class="line">			tr[u].mi = INF</span><br><span class="line">			<span class="keyword">return</span></span><br><span class="line">		&#125;</span><br><span class="line">		m := (l + r) &gt;&gt; <span class="number">1</span></span><br><span class="line">		build(u&lt;&lt;<span class="number">1</span>, l, m)</span><br><span class="line">		build(u&lt;&lt;<span class="number">1</span>|<span class="number">1</span>, m+<span class="number">1</span>, r)</span><br><span class="line">		pushup(u)</span><br><span class="line">	&#125;</span><br><span class="line">	modify = <span class="function"><span class="keyword">func</span><span class="params">(u, l, r, x <span class="type">int</span>)</span></span> &#123;</span><br><span class="line">		<span class="keyword">if</span> l &lt;= tr[u].l &amp;&amp; tr[u].r &lt;= r &#123;</span><br><span class="line">			tr[u].mi = min(tr[u].mi, x)</span><br><span class="line">			tr[u].t = min(tr[u].t, x)</span><br><span class="line">			<span class="keyword">return</span></span><br><span class="line">		&#125;</span><br><span class="line">		pushdown(u)</span><br><span class="line">		m := (tr[u].l + tr[u].r) &gt;&gt; <span class="number">1</span></span><br><span class="line">		<span class="keyword">if</span> l &lt;= m &#123;</span><br><span class="line">			modify(u&lt;&lt;<span class="number">1</span>, l, r, x)</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span> m+<span class="number">1</span> &lt;= r &#123;</span><br><span class="line">			modify(u&lt;&lt;<span class="number">1</span>|<span class="number">1</span>, l, r, x)</span><br><span class="line">		&#125;</span><br><span class="line">		pushup(u)</span><br><span class="line">	&#125;</span><br><span class="line">	query = <span class="function"><span class="keyword">func</span><span class="params">(u, k <span class="type">int</span>)</span></span> <span class="type">int</span> &#123;</span><br><span class="line">		<span class="keyword">if</span> tr[u].l == k &amp;&amp; tr[u].r == k &#123;</span><br><span class="line">			<span class="keyword">return</span> tr[u].mi</span><br><span class="line">		&#125;</span><br><span class="line">		pushdown(u)</span><br><span class="line">		m := (tr[u].l + tr[u].r) &gt;&gt; <span class="number">1</span></span><br><span class="line">		<span class="keyword">if</span> k &lt;= m &#123;</span><br><span class="line">			<span class="keyword">return</span> query(u&lt;&lt;<span class="number">1</span>, k)</span><br><span class="line">		&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">			<span class="keyword">return</span> query(u&lt;&lt;<span class="number">1</span>|<span class="number">1</span>, k)</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	build(<span class="number">1</span>, <span class="number">1</span>, n)</span><br><span class="line">	<span class="comment">// fmt.Println(tr)</span></span><br><span class="line">	<span class="keyword">for</span> _, v := <span class="keyword">range</span> intervals &#123;</span><br><span class="line">		l, r := v[<span class="number">0</span>], v[<span class="number">1</span>]</span><br><span class="line">		modify(<span class="number">1</span>, inv[l], inv[r], r-l+<span class="number">1</span>)</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span> _, v := <span class="keyword">range</span> queries &#123;</span><br><span class="line">		res := query(<span class="number">1</span>, inv[v])</span><br><span class="line">		<span class="keyword">if</span> res == INF &#123;</span><br><span class="line">			res = <span class="number">-1</span></span><br><span class="line">		&#125;</span><br><span class="line">		ans = <span class="built_in">append</span>(ans, res)</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">// fmt.Println(tr)</span></span><br><span class="line">	<span class="keyword">return</span> ans</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</details>]]></content>
      <categories>
        <category>刷题</category>
        <category>每日一题</category>
      </categories>
      <tags>
        <tag>刷题</tag>
      </tags>
  </entry>
  <entry>
    <title>leetcode2050.并行课程III</title>
    <url>/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-7/leetcode2050-%E5%B9%B6%E8%A1%8C%E8%AF%BE%E7%A8%8BIII.html</url>
    <content><![CDATA[<p><a href="https://leetcode.cn/problems/parallel-courses-iii">原题链接 2050. 并行课程III</a></p>
<hr>
<details>
    <summary>展开答案</summary>

<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">minimumTime</span><span class="params">(n <span class="type">int</span>, relations [][]<span class="type">int</span>, time []<span class="type">int</span>)</span></span> <span class="type">int</span> &#123;</span><br><span class="line">	g := <span class="built_in">make</span>([][]<span class="type">int</span>, n+<span class="number">1</span>)</span><br><span class="line">	in := <span class="built_in">make</span>(<span class="keyword">map</span>[<span class="type">int</span>]<span class="type">int</span>, <span class="number">0</span>)</span><br><span class="line">	<span class="keyword">for</span> _, v := <span class="keyword">range</span> relations &#123;</span><br><span class="line">		x, y := v[<span class="number">0</span>], v[<span class="number">1</span>]</span><br><span class="line">		g[y] = <span class="built_in">append</span>(g[y], x)</span><br><span class="line">		in[x]++</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span> i := <span class="number">1</span>; i &lt;= n; i++ &#123;</span><br><span class="line">		<span class="keyword">if</span> in[i] == <span class="number">0</span> &#123;</span><br><span class="line">			g[<span class="number">0</span>] = <span class="built_in">append</span>(g[<span class="number">0</span>], i)</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	f := <span class="built_in">make</span>([]<span class="type">int</span>, n+<span class="number">1</span>)</span><br><span class="line">	<span class="keyword">var</span> dp <span class="function"><span class="keyword">func</span><span class="params">(u <span class="type">int</span>)</span></span> <span class="type">int</span></span><br><span class="line">	dp = <span class="function"><span class="keyword">func</span><span class="params">(u <span class="type">int</span>)</span></span> <span class="type">int</span> &#123;</span><br><span class="line">		<span class="keyword">if</span> f[u] != <span class="number">0</span> &#123;</span><br><span class="line">			<span class="keyword">return</span> f[u]</span><br><span class="line">		&#125;</span><br><span class="line">		tmp := <span class="number">0</span></span><br><span class="line">		<span class="keyword">for</span> _, v := <span class="keyword">range</span> g[u] &#123;</span><br><span class="line">			tmp = max(tmp, dp(v))</span><br><span class="line">		&#125;</span><br><span class="line">		f[u] = max(f[u], time[u]+tmp)</span><br><span class="line">		<span class="keyword">return</span> f[u]</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> dp(<span class="number">0</span>)</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">max</span><span class="params">(x, y <span class="type">int</span>)</span></span> <span class="type">int</span> &#123;</span><br><span class="line">	<span class="keyword">if</span> x &gt; y &#123;</span><br><span class="line">		<span class="keyword">return</span> x</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> y</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</details>
]]></content>
      <categories>
        <category>刷题</category>
        <category>每日一题</category>
      </categories>
      <tags>
        <tag>刷题</tag>
      </tags>
  </entry>
  <entry>
    <title>leetcode2500.删除每行中的最大值</title>
    <url>/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-7/leetcode2500-%E5%88%A0%E9%99%A4%E6%AF%8F%E8%A1%8C%E4%B8%AD%E7%9A%84%E6%9C%80%E5%A4%A7%E5%80%BC.html</url>
    <content><![CDATA[<p><a href="https://leetcode.cn/problems/delete-greatest-value-in-each-row">原题链接 2500.删除每行中的最大值</a></p>
<hr>
<details>
    <summary>展开答案</summary>

<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">deleteGreatestValue</span><span class="params">(grid [][]<span class="type">int</span>)</span></span> (ans <span class="type">int</span>) &#123;</span><br><span class="line">	max := <span class="function"><span class="keyword">func</span><span class="params">(x, y <span class="type">int</span>)</span></span> <span class="type">int</span> &#123;</span><br><span class="line">		<span class="keyword">if</span> x &gt; y &#123;</span><br><span class="line">			<span class="keyword">return</span> x</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">return</span> y</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span> i := <span class="keyword">range</span> grid &#123;</span><br><span class="line">		sort.Ints(grid[i])</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span> i := <span class="built_in">len</span>(grid[<span class="number">0</span>]) - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i-- &#123;</span><br><span class="line">		res := <span class="number">0</span></span><br><span class="line">		<span class="keyword">for</span> j := <span class="keyword">range</span> grid &#123;</span><br><span class="line">			res = max(res, grid[j][i])</span><br><span class="line">		&#125;</span><br><span class="line">		ans += res</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> ans</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</details>
]]></content>
      <categories>
        <category>刷题</category>
        <category>每日一题</category>
      </categories>
      <tags>
        <tag>刷题</tag>
      </tags>
  </entry>
  <entry>
    <title>leetcode2791.树中可以形成回文的路径数</title>
    <url>/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-7/leetcode2791-%E6%A0%91%E4%B8%AD%E5%8F%AF%E4%BB%A5%E5%BD%A2%E6%88%90%E5%9B%9E%E6%96%87%E7%9A%84%E8%B7%AF%E5%BE%84%E6%95%B0.html</url>
    <content><![CDATA[<p><a href="https://leetcode.cn/problems/count-paths-that-can-form-a-palindrome-in-a-tree">原题链接 2791. 树中可以形成回文的路径数</a></p>
<hr>
<details>
    <summary>展开答案</summary>

<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">countPalindromePaths</span><span class="params">(parent []<span class="type">int</span>, s <span class="type">string</span>)</span></span> (ans <span class="type">int64</span>) &#123;</span><br><span class="line">	n := <span class="built_in">len</span>(parent)</span><br><span class="line">	g := <span class="built_in">make</span>([][]<span class="type">int</span>, n)</span><br><span class="line">	<span class="keyword">for</span> i := <span class="number">1</span>; i &lt; n; i++ &#123;</span><br><span class="line">		v := parent[i]</span><br><span class="line">		g[v] = <span class="built_in">append</span>(g[v], i)</span><br><span class="line">	&#125;</span><br><span class="line">	val := <span class="number">0</span></span><br><span class="line">	mp := <span class="built_in">make</span>(<span class="keyword">map</span>[<span class="type">int</span>]<span class="type">int</span>, n)</span><br><span class="line">	<span class="keyword">var</span> dfs <span class="function"><span class="keyword">func</span><span class="params">(u, fa <span class="type">int</span>)</span></span></span><br><span class="line">	dfs = <span class="function"><span class="keyword">func</span><span class="params">(u, fa <span class="type">int</span>)</span></span> &#123;</span><br><span class="line">		mp[val]++</span><br><span class="line">		<span class="comment">// fmt.Println(u,val)</span></span><br><span class="line">		<span class="keyword">for</span> _, v := <span class="keyword">range</span> g[u] &#123;</span><br><span class="line">			val ^= <span class="number">1</span> &lt;&lt; (s[v] - <span class="string">&#x27;a&#x27;</span>)</span><br><span class="line">			dfs(v, fa)</span><br><span class="line">			val ^= <span class="number">1</span> &lt;&lt; (s[v] - <span class="string">&#x27;a&#x27;</span>)</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	dfs(<span class="number">0</span>, <span class="number">-1</span>)</span><br><span class="line">	<span class="keyword">for</span> _, v := <span class="keyword">range</span> mp &#123;</span><br><span class="line">		ans += <span class="type">int64</span>(v)*<span class="type">int64</span>(v) - <span class="type">int64</span>(v)</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span> k, v := <span class="keyword">range</span> mp &#123;</span><br><span class="line">		<span class="keyword">for</span> i := <span class="number">0</span>; i &lt; <span class="number">26</span>; i++ &#123;</span><br><span class="line">			res := mp[k^(<span class="number">1</span>&lt;&lt;i)]</span><br><span class="line">			ans += <span class="type">int64</span>(res) * <span class="type">int64</span>(v)</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">// fmt.Println(mp)</span></span><br><span class="line">	<span class="keyword">return</span> ans / <span class="number">2</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
</details>
]]></content>
      <categories>
        <category>刷题</category>
        <category>每日一题</category>
      </categories>
      <tags>
        <tag>刷题</tag>
      </tags>
  </entry>
  <entry>
    <title>leetcode2790.长度递增组的最大数目</title>
    <url>/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-7/leetcode2790-%E9%95%BF%E5%BA%A6%E9%80%92%E5%A2%9E%E7%BB%84%E7%9A%84%E6%9C%80%E5%A4%A7%E6%95%B0%E7%9B%AE.html</url>
    <content><![CDATA[<p><a href="https://leetcode.cn/problems/maximum-number-of-groups-with-increasing-length">原题链接 2790. 长度递增组的最大数目</a></p>
<hr>
<details>
    <summary>展开答案</summary>

<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">maxIncreasingGroups</span><span class="params">(a []<span class="type">int</span>)</span></span> <span class="type">int</span> &#123;</span><br><span class="line">	cur, re := <span class="number">0</span>, <span class="number">0</span></span><br><span class="line">	sort.Ints(a)</span><br><span class="line">	<span class="keyword">for</span> _, v := <span class="keyword">range</span> a &#123;</span><br><span class="line">		<span class="keyword">if</span> v+re &gt; cur &#123;</span><br><span class="line">			cur++</span><br><span class="line">			re -= cur - v</span><br><span class="line">		&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">			re += v</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> cur</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</details>]]></content>
      <categories>
        <category>刷题</category>
        <category>每日一题</category>
      </categories>
      <tags>
        <tag>刷题</tag>
      </tags>
  </entry>
  <entry>
    <title>leetcode946.验证栈序列</title>
    <url>/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-7/leetcode946-%E9%AA%8C%E8%AF%81%E6%A0%88%E5%BA%8F%E5%88%97.html</url>
    <content><![CDATA[<p><a href="https://leetcode.cn/problems/validate-stack-sequences">原题链接 946.验证栈序列</a></p>
<hr>
<details>
    <summary>展开答案</summary>

<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">validateStackSequences</span><span class="params">(pushed []<span class="type">int</span>, popped []<span class="type">int</span>)</span></span> <span class="type">bool</span> &#123;</span><br><span class="line">	n := <span class="built_in">len</span>(pushed)</span><br><span class="line">	st, hh := <span class="built_in">make</span>([]<span class="type">int</span>, n), <span class="number">0</span></span><br><span class="line">	i, j := <span class="number">0</span>, <span class="number">0</span></span><br><span class="line">	<span class="keyword">for</span> i != n &#123;</span><br><span class="line">		<span class="keyword">for</span> (hh == <span class="number">0</span> || st[hh<span class="number">-1</span>] != popped[i]) &amp;&amp; j != n &#123;</span><br><span class="line">			st[hh] = pushed[j]</span><br><span class="line">			hh++</span><br><span class="line">			j++</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span> hh == <span class="number">0</span> || st[hh<span class="number">-1</span>] != popped[i] &#123;</span><br><span class="line">			<span class="keyword">break</span></span><br><span class="line">		&#125;</span><br><span class="line">		hh--</span><br><span class="line">		i++</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> i == n &amp;&amp; hh == <span class="number">0</span> &amp;&amp; j == n</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</details>]]></content>
      <categories>
        <category>刷题</category>
        <category>每日一题</category>
      </categories>
      <tags>
        <tag>刷题</tag>
      </tags>
  </entry>
  <entry>
    <title>leetcode2569.更新数组后处理求和查询</title>
    <url>/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-7/leetcode2569-%E6%9B%B4%E6%96%B0%E6%95%B0%E7%BB%84%E5%90%8E%E5%A4%84%E7%90%86%E6%B1%82%E5%92%8C%E6%9F%A5%E8%AF%A2.html</url>
    <content><![CDATA[<p><a href="https://leetcode.cn/problems/handling-sum-queries-after-update/">原题链接 2569. 更新数组后处理求和查询</a></p>
<hr>
<details>
    <summary>展开答案</summary>

<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">handleQuery</span><span class="params">(nums1 []<span class="type">int</span>, nums2 []<span class="type">int</span>, queries [][]<span class="type">int</span>)</span></span> (ans []<span class="type">int64</span>) &#123;</span><br><span class="line">	<span class="keyword">type</span> node <span class="keyword">struct</span> &#123;</span><br><span class="line">		l, r   <span class="type">int</span></span><br><span class="line">		sum, t <span class="type">int</span></span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">var</span> build <span class="function"><span class="keyword">func</span><span class="params">(u, l, r <span class="type">int</span>, tr []node)</span></span></span><br><span class="line">	<span class="keyword">var</span> pushup <span class="function"><span class="keyword">func</span><span class="params">(u <span class="type">int</span>, tr []node)</span></span></span><br><span class="line">	<span class="keyword">var</span> pushdown <span class="function"><span class="keyword">func</span><span class="params">(u <span class="type">int</span>, tr []node)</span></span></span><br><span class="line">	<span class="keyword">var</span> modify <span class="function"><span class="keyword">func</span><span class="params">(u, l, r, q <span class="type">int</span>, tr []node)</span></span></span><br><span class="line">	<span class="keyword">var</span> query <span class="function"><span class="keyword">func</span><span class="params">(u, l, r <span class="type">int</span>, tr []node)</span></span> <span class="type">int</span></span><br><span class="line"></span><br><span class="line">	<span class="keyword">var</span> init = <span class="function"><span class="keyword">func</span><span class="params">(n <span class="type">int</span>)</span></span> (res []node) &#123;</span><br><span class="line">		res = <span class="built_in">make</span>([]node, n&lt;&lt;<span class="number">2</span>)</span><br><span class="line">		build(<span class="number">1</span>, <span class="number">1</span>, n, res)</span><br><span class="line">		<span class="keyword">return</span> res</span><br><span class="line">	&#125;</span><br><span class="line">	pushup = <span class="function"><span class="keyword">func</span><span class="params">(u <span class="type">int</span>, tr []node)</span></span> &#123;</span><br><span class="line">		tr[u].sum = tr[u&lt;&lt;<span class="number">1</span>].sum + tr[u&lt;&lt;<span class="number">1</span>|<span class="number">1</span>].sum</span><br><span class="line">	&#125;</span><br><span class="line">	pushdown = <span class="function"><span class="keyword">func</span><span class="params">(u <span class="type">int</span>, tr []node)</span></span> &#123;</span><br><span class="line">		<span class="keyword">if</span> tr[u].t == <span class="number">0</span> &#123;</span><br><span class="line">			<span class="keyword">return</span></span><br><span class="line">		&#125;</span><br><span class="line">		tr[u&lt;&lt;<span class="number">1</span>].t ^= tr[u].t</span><br><span class="line">		tr[u&lt;&lt;<span class="number">1</span>].sum = (tr[u&lt;&lt;<span class="number">1</span>].r - tr[u&lt;&lt;<span class="number">1</span>].l + <span class="number">1</span>) - tr[u&lt;&lt;<span class="number">1</span>].sum</span><br><span class="line">		tr[u&lt;&lt;<span class="number">1</span>|<span class="number">1</span>].t ^= tr[u].t</span><br><span class="line">		tr[u&lt;&lt;<span class="number">1</span>|<span class="number">1</span>].sum = (tr[u&lt;&lt;<span class="number">1</span>|<span class="number">1</span>].r - tr[u&lt;&lt;<span class="number">1</span>|<span class="number">1</span>].l + <span class="number">1</span>) - tr[u&lt;&lt;<span class="number">1</span>|<span class="number">1</span>].sum</span><br><span class="line">		tr[u].t = <span class="number">0</span></span><br><span class="line">	&#125;</span><br><span class="line">	build = <span class="function"><span class="keyword">func</span><span class="params">(u, l, r <span class="type">int</span>, tr []node)</span></span> &#123;</span><br><span class="line">		<span class="keyword">if</span> l == r &#123;</span><br><span class="line">			tr[u] = node&#123;l, r, nums1[l<span class="number">-1</span>], <span class="number">0</span>&#125;</span><br><span class="line">			<span class="keyword">return</span></span><br><span class="line">		&#125;</span><br><span class="line">		tr[u].l, tr[u].r = l, r</span><br><span class="line">		m := (l + r) &gt;&gt; <span class="number">1</span></span><br><span class="line">		build(u&lt;&lt;<span class="number">1</span>, l, m, tr)</span><br><span class="line">		build(u&lt;&lt;<span class="number">1</span>|<span class="number">1</span>, m+<span class="number">1</span>, r, tr)</span><br><span class="line">		pushup(u, tr)</span><br><span class="line">	&#125;</span><br><span class="line">	modify = <span class="function"><span class="keyword">func</span><span class="params">(u, l, r, q <span class="type">int</span>, tr []node)</span></span> &#123;</span><br><span class="line">		<span class="keyword">if</span> l &lt;= tr[u].l &amp;&amp; tr[u].r &lt;= r &#123;</span><br><span class="line">			tr[u].t ^= q</span><br><span class="line">			tr[u].sum = (tr[u].r - tr[u].l + <span class="number">1</span>) - tr[u].sum</span><br><span class="line">			<span class="keyword">return</span></span><br><span class="line">		&#125;</span><br><span class="line">		pushdown(u, tr)</span><br><span class="line">		m := (tr[u].l + tr[u].r) &gt;&gt; <span class="number">1</span></span><br><span class="line">		<span class="keyword">if</span> l &lt;= m &#123;</span><br><span class="line">			modify(u&lt;&lt;<span class="number">1</span>, l, r, q, tr)</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span> m+<span class="number">1</span> &lt;= r &#123;</span><br><span class="line">			modify(u&lt;&lt;<span class="number">1</span>|<span class="number">1</span>, l, r, q, tr)</span><br><span class="line">		&#125;</span><br><span class="line">		pushup(u, tr)</span><br><span class="line">	&#125;</span><br><span class="line">	query = <span class="function"><span class="keyword">func</span><span class="params">(u, l, r <span class="type">int</span>, tr []node)</span></span> <span class="type">int</span> &#123;</span><br><span class="line">		<span class="keyword">if</span> l &lt;= tr[u].l &amp;&amp; tr[u].r &lt;= r &#123;</span><br><span class="line">			<span class="keyword">return</span> tr[u].sum</span><br><span class="line">		&#125;</span><br><span class="line">		pushdown(u, tr)</span><br><span class="line">		m := (tr[u].l + tr[u].r) &gt;&gt; <span class="number">1</span></span><br><span class="line">		res := <span class="number">0</span></span><br><span class="line">		<span class="keyword">if</span> l &lt;= m &#123;</span><br><span class="line">			res += query(u&lt;&lt;<span class="number">1</span>, l, r, tr)</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span> m+<span class="number">1</span> &lt;= r &#123;</span><br><span class="line">			res += query(u&lt;&lt;<span class="number">1</span>|<span class="number">1</span>, l, r, tr)</span><br><span class="line">		&#125;</span><br><span class="line">		pushup(u, tr)</span><br><span class="line">		<span class="keyword">return</span> res</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	res := <span class="type">int64</span>(<span class="number">0</span>)</span><br><span class="line">	<span class="keyword">for</span> _, v := <span class="keyword">range</span> nums2 &#123;</span><br><span class="line">		res += <span class="type">int64</span>(v)</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	n := <span class="built_in">len</span>(nums1)</span><br><span class="line">	tr := init(n)</span><br><span class="line">	<span class="comment">// fmt.Println(query(1,1,n,tr))</span></span><br><span class="line"></span><br><span class="line">	<span class="keyword">for</span> _, v := <span class="keyword">range</span> queries &#123;</span><br><span class="line">		<span class="keyword">if</span> v[<span class="number">0</span>] == <span class="number">1</span> &#123;</span><br><span class="line">			modify(<span class="number">1</span>, v[<span class="number">1</span>]+<span class="number">1</span>, v[<span class="number">2</span>]+<span class="number">1</span>, <span class="number">1</span>, tr)</span><br><span class="line">		&#125; <span class="keyword">else</span> <span class="keyword">if</span> v[<span class="number">0</span>] == <span class="number">2</span> &#123;</span><br><span class="line">			res += <span class="type">int64</span>(query(<span class="number">1</span>, <span class="number">1</span>, n, tr)) * <span class="type">int64</span>(v[<span class="number">1</span>])</span><br><span class="line">		&#125; <span class="keyword">else</span> <span class="keyword">if</span> v[<span class="number">0</span>] == <span class="number">3</span> &#123;</span><br><span class="line">			ans = <span class="built_in">append</span>(ans, res)</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="comment">// fmt.Println(res)</span></span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">return</span> ans</span><br><span class="line"></span><br></pre></td></tr></table></figure>
</details>]]></content>
      <categories>
        <category>刷题</category>
        <category>每日一题</category>
      </categories>
      <tags>
        <tag>刷题</tag>
      </tags>
  </entry>
  <entry>
    <title>leetcode2208.将数组和减半的最少操作次数</title>
    <url>/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-7/leetcode2208-%E5%B0%86%E6%95%B0%E7%BB%84%E5%92%8C%E5%87%8F%E5%8D%8A%E7%9A%84%E6%9C%80%E5%B0%91%E6%93%8D%E4%BD%9C%E6%AC%A1%E6%95%B0.html</url>
    <content><![CDATA[<p><a href="https://leetcode.cn/problems/minimum-operations-to-halve-array-sum/">原题链接 2208. 将数组和减半的最少操作次数</a></p>
<hr>
<details>
    <summary>展开答案</summary>

<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">halveArray</span><span class="params">(nums []<span class="type">int</span>)</span></span> (ans <span class="type">int</span>) &#123;</span><br><span class="line">	sort.Ints(nums)</span><br><span class="line">	a := <span class="built_in">make</span>([]<span class="type">float64</span>, <span class="number">0</span>)</span><br><span class="line">	<span class="keyword">var</span> sum <span class="type">float64</span> = <span class="number">0</span></span><br><span class="line">	<span class="keyword">for</span> _, v := <span class="keyword">range</span> nums &#123;</span><br><span class="line">		cur := <span class="type">float64</span>(v)</span><br><span class="line">		sum += cur</span><br><span class="line">		<span class="keyword">for</span> <span class="number">4</span>*cur &gt;= <span class="type">float64</span>(nums[<span class="built_in">len</span>(nums)/<span class="number">2</span>]) &#123;</span><br><span class="line">			cur /= <span class="number">2.0</span></span><br><span class="line">			a = <span class="built_in">append</span>(a, cur)</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	sum /= <span class="number">2.0</span></span><br><span class="line">	sort.Float64s(a)</span><br><span class="line">	<span class="keyword">for</span> i := <span class="built_in">len</span>(a) - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i-- &#123;</span><br><span class="line">		<span class="keyword">if</span> sum &lt;= <span class="number">0</span> &#123;</span><br><span class="line">			<span class="keyword">break</span></span><br><span class="line">		&#125;</span><br><span class="line">		sum -= a[i]</span><br><span class="line">		ans++</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> ans</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</details>

<details>
    <summary>展开答案(c++)</summary>

<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">halveArray</span><span class="params">(vector&lt;<span class="type">int</span>&gt; &amp;nums)</span> </span>&#123;</span><br><span class="line">        priority_queue&lt;<span class="type">double</span>&gt; q;</span><br><span class="line">        <span class="type">double</span> sum = <span class="number">0</span>, res = <span class="number">0</span>;</span><br><span class="line">        <span class="type">int</span> cnt = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i: nums) &#123;</span><br><span class="line">            sum += i;</span><br><span class="line">            q.<span class="built_in">push</span>(i);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">while</span> (res * <span class="number">2</span> &lt; sum) &#123;</span><br><span class="line">            cnt++;</span><br><span class="line">            <span class="type">double</span> cur = q.<span class="built_in">top</span>();</span><br><span class="line">            q.<span class="built_in">pop</span>();</span><br><span class="line">            res += cur / <span class="number">2.0</span>;</span><br><span class="line">            q.<span class="built_in">push</span>(cur / <span class="number">2.0</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> cnt;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
</details>]]></content>
      <categories>
        <category>刷题</category>
        <category>每日一题</category>
      </categories>
      <tags>
        <tag>刷题</tag>
      </tags>
  </entry>
  <entry>
    <title>leetcode771.宝石与石头</title>
    <url>/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-7/leetcode771-%E5%AE%9D%E7%9F%B3%E4%B8%8E%E7%9F%B3%E5%A4%B4.html</url>
    <content><![CDATA[<p><a href="https://leetcode.cn/problems/jewels-and-stones/">原题链接 771. 宝石与石头</a></p>
<hr>
<details>
    <summary>展开答案</summary>

<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">numJewelsInStones</span><span class="params">(jewels <span class="type">string</span>, stones <span class="type">string</span>)</span></span> (ans <span class="type">int</span>) &#123;</span><br><span class="line">	mp := <span class="built_in">make</span>(<span class="keyword">map</span>[<span class="type">rune</span>]<span class="type">int</span>, <span class="built_in">len</span>(jewels))</span><br><span class="line">	<span class="keyword">for</span> _, v := <span class="keyword">range</span> jewels &#123;</span><br><span class="line">		mp[v] = <span class="number">1</span></span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span> _, v := <span class="keyword">range</span> stones &#123;</span><br><span class="line">		ans += mp[v]</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> ans</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</details>]]></content>
      <categories>
        <category>刷题</category>
        <category>每日一题</category>
      </categories>
      <tags>
        <tag>刷题</tag>
      </tags>
  </entry>
  <entry>
    <title>leetcode42.接雨水</title>
    <url>/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-7/leetcode42-%E6%8E%A5%E9%9B%A8%E6%B0%B4.html</url>
    <content><![CDATA[<p><a href="https://leetcode.cn/problems/trapping-rain-water">原题链接 42. 接雨水</a></p>
<hr>
<details>
    <summary>展开答案</summary>

<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">trap</span><span class="params">(height []<span class="type">int</span>)</span></span> (ans <span class="type">int</span>) &#123;</span><br><span class="line">	n := <span class="built_in">len</span>(height)</span><br><span class="line">	a := <span class="built_in">make</span>([]<span class="type">int</span>, n)</span><br><span class="line">	cur := <span class="number">0</span></span><br><span class="line">	<span class="keyword">for</span> i := <span class="number">0</span>; i &lt; n; i++ &#123;</span><br><span class="line">		cur = max(cur, height[i])</span><br><span class="line">		a[i] = cur</span><br><span class="line">	&#125;</span><br><span class="line">	cur = <span class="number">0</span></span><br><span class="line">	<span class="keyword">for</span> i := n - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i-- &#123;</span><br><span class="line">		cur = max(cur, height[i])</span><br><span class="line">		a[i] = min(a[i], cur)</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span> i := <span class="number">0</span>; i &lt; n; i++ &#123;</span><br><span class="line">		ans += a[i] - height[i]</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> ans</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">max</span><span class="params">(x, y <span class="type">int</span>)</span></span> <span class="type">int</span> &#123;</span><br><span class="line">	<span class="keyword">return</span> -min(-x, -y)</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">min</span><span class="params">(x, y <span class="type">int</span>)</span></span> <span class="type">int</span> &#123;</span><br><span class="line">	<span class="keyword">if</span> x &lt; y &#123;</span><br><span class="line">		<span class="keyword">return</span> x</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> y</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</details>]]></content>
      <categories>
        <category>刷题</category>
        <category>每日一题</category>
      </categories>
      <tags>
        <tag>刷题</tag>
      </tags>
  </entry>
  <entry>
    <title>leetcode860.柠檬水找零</title>
    <url>/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-7/leetcode860-%E6%9F%A0%E6%AA%AC%E6%B0%B4%E6%89%BE%E9%9B%B6.html</url>
    <content><![CDATA[<p><a href="https://leetcode.cn/problems/lemonade-change">原题链接 860. 柠檬水找零</a></p>
<hr>
<details>
    <summary>展开答案</summary>

<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">lemonadeChange</span><span class="params">(bills []<span class="type">int</span>)</span></span> <span class="type">bool</span> &#123;</span><br><span class="line">	r1, r2, r3 := <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span></span><br><span class="line">	<span class="keyword">for</span> _, v := <span class="keyword">range</span> bills &#123;</span><br><span class="line">		<span class="keyword">if</span> v == <span class="number">5</span> &#123;</span><br><span class="line">			r1++</span><br><span class="line">		&#125; <span class="keyword">else</span> <span class="keyword">if</span> v == <span class="number">10</span> &#123;</span><br><span class="line">			r1--</span><br><span class="line">			r2++</span><br><span class="line">		&#125; <span class="keyword">else</span> <span class="keyword">if</span> v == <span class="number">20</span> &#123;</span><br><span class="line">			<span class="keyword">if</span> r2 &gt; <span class="number">0</span> &#123;</span><br><span class="line">				r2--</span><br><span class="line">				r1--</span><br><span class="line">				r3++</span><br><span class="line">			&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">				r1 -= <span class="number">3</span></span><br><span class="line">				r3++</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span> r1 &lt; <span class="number">0</span> &#123;</span><br><span class="line">			<span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</details>
]]></content>
      <categories>
        <category>刷题</category>
        <category>每日一题</category>
      </categories>
      <tags>
        <tag>刷题</tag>
      </tags>
  </entry>
  <entry>
    <title>leetcode1499.满足不等式的最大值</title>
    <url>/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-7/leetcode1499-%E6%BB%A1%E8%B6%B3%E4%B8%8D%E7%AD%89%E5%BC%8F%E7%9A%84%E6%9C%80%E5%A4%A7%E5%80%BC.html</url>
    <content><![CDATA[<p><a href="https://leetcode.cn/problems/maximum-sum-circular-subarray/">原题链接 918. 环形子数组的最大和</a></p>
<hr>
<details>
    <summary>展开答案</summary>

<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">findMaxValueOfEquation</span><span class="params">(points [][]<span class="type">int</span>, k <span class="type">int</span>)</span></span> (ans <span class="type">int</span>) &#123;</span><br><span class="line">	ans = <span class="number">-0x3f3f3f3f</span></span><br><span class="line">	hh, tt := <span class="number">0</span>, <span class="number">0</span></span><br><span class="line">	queue := <span class="built_in">make</span>([][<span class="number">2</span>]<span class="type">int</span>, <span class="built_in">len</span>(points))</span><br><span class="line">	queue[<span class="number">0</span>] = [<span class="number">2</span>]<span class="type">int</span>&#123;points[<span class="number">0</span>][<span class="number">0</span>], points[<span class="number">0</span>][<span class="number">1</span>] - points[<span class="number">0</span>][<span class="number">0</span>]&#125;</span><br><span class="line">	<span class="keyword">for</span> i := <span class="number">1</span>; i &lt; <span class="built_in">len</span>(points); i++ &#123;</span><br><span class="line">		x, y := points[i][<span class="number">0</span>], points[i][<span class="number">1</span>]</span><br><span class="line">		<span class="keyword">for</span> hh &lt;= tt &amp;&amp; queue[hh][<span class="number">0</span>]+k &lt; x &#123;</span><br><span class="line">			hh++</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span> hh &lt;= tt &#123;</span><br><span class="line">			res := x + y + queue[hh][<span class="number">1</span>]</span><br><span class="line">			ans = max(ans, res)</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">for</span> hh &lt;= tt &amp;&amp; queue[tt][<span class="number">1</span>] &lt; y-x &#123;</span><br><span class="line">			tt--</span><br><span class="line">		&#125;</span><br><span class="line">		tt++</span><br><span class="line">		queue[tt] = [<span class="number">2</span>]<span class="type">int</span>&#123;x, y - x&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> ans</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">max</span><span class="params">(x, y <span class="type">int</span>)</span></span> <span class="type">int</span> &#123;</span><br><span class="line">	<span class="keyword">if</span> x &gt; y &#123;</span><br><span class="line">		<span class="keyword">return</span> x</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> y</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</details>

<details>
    <summary>展开答案(c++)</summary>

<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> PII pair<span class="string">&lt;int,int&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> x first</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> y second</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">findMaxValueOfEquation</span><span class="params">(vector &lt;vector&lt;<span class="type">int</span>&gt;&gt; &amp;points, <span class="type">int</span> k)</span> </span>&#123;</span><br><span class="line">        <span class="type">int</span> ans = <span class="number">-1e9</span>;</span><br><span class="line">        priority_queue &lt;PII&gt; q;</span><br><span class="line">        q.<span class="built_in">push</span>(&#123;points[<span class="number">0</span>][<span class="number">1</span>] - points[<span class="number">0</span>][<span class="number">0</span>], points[<span class="number">0</span>][<span class="number">0</span>]&#125;);</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt; points.<span class="built_in">size</span>(); i++) &#123;</span><br><span class="line">            <span class="type">int</span> x = points[i][<span class="number">0</span>], y = points[i][<span class="number">1</span>];</span><br><span class="line">            <span class="keyword">while</span> (q.<span class="built_in">size</span>() &amp;&amp; q.<span class="built_in">top</span>().y + k &lt; x) &#123;</span><br><span class="line">                q.<span class="built_in">pop</span>();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (q.<span class="built_in">size</span>() != <span class="number">0</span>) &#123;</span><br><span class="line">                <span class="type">int</span> res = x + y + q.<span class="built_in">top</span>().x;</span><br><span class="line">                ans = <span class="built_in">max</span>(ans, res);</span><br><span class="line">            &#125;</span><br><span class="line">            q.<span class="built_in">push</span>(&#123;y - x, x&#125;);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
</details>
]]></content>
      <categories>
        <category>刷题</category>
        <category>每日一题</category>
      </categories>
      <tags>
        <tag>刷题</tag>
      </tags>
  </entry>
  <entry>
    <title>leetcode918.环形子数组的最大和</title>
    <url>/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-7/leetcode918-%E7%8E%AF%E5%BD%A2%E5%AD%90%E6%95%B0%E7%BB%84%E7%9A%84%E6%9C%80%E5%A4%A7%E5%92%8C.html</url>
    <content><![CDATA[<p><a href="https://leetcode.cn/problems/maximum-sum-circular-subarray/">原题链接 918. 环形子数组的最大和</a></p>
<hr>
<details>
    <summary>展开答案</summary>


<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">maxSubarraySumCircular</span><span class="params">(nums []<span class="type">int</span>)</span></span> (ans <span class="type">int</span>) &#123;</span><br><span class="line">	n, sum := <span class="built_in">len</span>(nums), <span class="number">0</span></span><br><span class="line">	dp1 := <span class="built_in">make</span>([]<span class="type">int</span>, n+<span class="number">1</span>)</span><br><span class="line">	dp2 := <span class="built_in">make</span>([]<span class="type">int</span>, n+<span class="number">1</span>)</span><br><span class="line">	ans = <span class="number">-0x3f3f3f3f</span></span><br><span class="line">	<span class="keyword">for</span> i := <span class="number">0</span>; i &lt; n; i++ &#123;</span><br><span class="line">		sum += nums[i]</span><br><span class="line">		ans = max(ans, nums[i])</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span> ans &lt; <span class="number">0</span> &#123;</span><br><span class="line">		<span class="keyword">return</span> ans</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span> i := <span class="number">1</span>; i &lt;= n; i++ &#123;</span><br><span class="line">		dp1[i] = max(dp1[i<span class="number">-1</span>]+nums[i<span class="number">-1</span>], nums[i<span class="number">-1</span>])</span><br><span class="line">		dp2[i] = min(dp2[i<span class="number">-1</span>]+nums[i<span class="number">-1</span>], nums[i<span class="number">-1</span>])</span><br><span class="line">		res := max(dp1[i], sum-dp2[i])</span><br><span class="line">		ans = max(ans, res)</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> ans</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">max</span><span class="params">(x, y <span class="type">int</span>)</span></span> <span class="type">int</span> &#123;</span><br><span class="line">	<span class="keyword">if</span> x &gt; y &#123;</span><br><span class="line">		<span class="keyword">return</span> x</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> y</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">min</span><span class="params">(x, y <span class="type">int</span>)</span></span> <span class="type">int</span> &#123;</span><br><span class="line">	<span class="keyword">return</span> -max(-x, -y)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</details>]]></content>
      <categories>
        <category>刷题</category>
        <category>每日一题</category>
      </categories>
      <tags>
        <tag>刷题</tag>
      </tags>
  </entry>
  <entry>
    <title>leetcode874.模拟行走机器人</title>
    <url>/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-7/leetcode874-%E6%A8%A1%E6%8B%9F%E8%A1%8C%E8%B5%B0%E6%9C%BA%E5%99%A8%E4%BA%BA.html</url>
    <content><![CDATA[<p><a href="https://leetcode.cn/problems/walking-robot-simulation/">原题链接 874. 模拟行走机器人</a></p>
<hr>
<details>
    <summary>展开答案</summary>

<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">robotSim</span><span class="params">(commands []<span class="type">int</span>, obstacles [][]<span class="type">int</span>)</span></span> (ans <span class="type">int</span>) &#123;</span><br><span class="line">	dx := [<span class="number">4</span>]<span class="type">int</span>&#123;<span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">-1</span>&#125;</span><br><span class="line">	dy := [<span class="number">4</span>]<span class="type">int</span>&#123;<span class="number">1</span>, <span class="number">0</span>, <span class="number">-1</span>, <span class="number">0</span>&#125;</span><br><span class="line"></span><br><span class="line">	mp := <span class="built_in">make</span>(<span class="keyword">map</span>[[<span class="number">2</span>]<span class="type">int</span>]<span class="type">int</span>, <span class="built_in">len</span>(obstacles))</span><br><span class="line">	<span class="keyword">for</span> _, v := <span class="keyword">range</span> obstacles &#123;</span><br><span class="line">		mp[[<span class="number">2</span>]<span class="type">int</span>&#123;v[<span class="number">0</span>], v[<span class="number">1</span>]&#125;] = <span class="number">1</span></span><br><span class="line">	&#125;</span><br><span class="line">	cx, cy, d := <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span></span><br><span class="line">	<span class="keyword">for</span> _, v := <span class="keyword">range</span> commands &#123;</span><br><span class="line">		<span class="keyword">if</span> v == <span class="number">-2</span> &#123;</span><br><span class="line">			d = (d + <span class="number">3</span>) % <span class="number">4</span></span><br><span class="line">		&#125; <span class="keyword">else</span> <span class="keyword">if</span> v == <span class="number">-1</span> &#123;</span><br><span class="line">			d = (d + <span class="number">1</span>) % <span class="number">4</span></span><br><span class="line">		&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">			<span class="keyword">for</span> i := <span class="number">0</span>; i &lt; v; i++ &#123;</span><br><span class="line">				nx, ny := cx+dx[d], cy+dy[d]</span><br><span class="line">				<span class="keyword">if</span> mp[[<span class="number">2</span>]<span class="type">int</span>&#123;nx, ny&#125;] == <span class="number">0</span> &#123;</span><br><span class="line">					cx, cy = nx, ny</span><br><span class="line">					ans = max(ans, nx*nx+ny*ny)</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> ans</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">max</span><span class="params">(x, y <span class="type">int</span>)</span></span> <span class="type">int</span> &#123;</span><br><span class="line">	<span class="keyword">if</span> x &gt; y &#123;</span><br><span class="line">		<span class="keyword">return</span> x</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> y</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</details>]]></content>
      <categories>
        <category>刷题</category>
        <category>每日一题</category>
      </categories>
      <tags>
        <tag>刷题</tag>
      </tags>
  </entry>
  <entry>
    <title>leetcode415.字符串相加</title>
    <url>/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-7/leetcode415-%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9B%B8%E5%8A%A0.html</url>
    <content><![CDATA[<p><a href="https://leetcode.cn/problems/add-strings/">原题链接 415. 字符串相加</a></p>
<hr>
<details>
    <summary>展开答案</summary>

<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">addStrings</span><span class="params">(num1 <span class="type">string</span>, num2 <span class="type">string</span>)</span></span> <span class="type">string</span> &#123;</span><br><span class="line">	x := <span class="built_in">make</span>([]<span class="type">int</span>, <span class="built_in">len</span>(num1))</span><br><span class="line">	y := <span class="built_in">make</span>([]<span class="type">int</span>, <span class="built_in">len</span>(num2))</span><br><span class="line">	<span class="keyword">for</span> i := <span class="built_in">len</span>(num1) - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i-- &#123;</span><br><span class="line">		x[<span class="built_in">len</span>(num1)<span class="number">-1</span>-i] = <span class="type">int</span>(num1[i] - <span class="string">&#x27;0&#x27;</span>)</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span> i := <span class="built_in">len</span>(num2) - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i-- &#123;</span><br><span class="line">		y[<span class="built_in">len</span>(num2)<span class="number">-1</span>-i] = <span class="type">int</span>(num2[i] - <span class="string">&#x27;0&#x27;</span>)</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">if</span> <span class="built_in">len</span>(x) &lt; <span class="built_in">len</span>(y) &#123;</span><br><span class="line">		x, y = y, x</span><br><span class="line">	&#125;</span><br><span class="line">	res := <span class="built_in">make</span>([]<span class="type">byte</span>, <span class="built_in">len</span>(x))</span><br><span class="line">	t := <span class="number">0</span></span><br><span class="line">	<span class="keyword">for</span> i := <span class="number">0</span>; i &lt; <span class="built_in">len</span>(x); i++ &#123;</span><br><span class="line">		t += x[i]</span><br><span class="line">		<span class="keyword">if</span> i &lt; <span class="built_in">len</span>(y) &#123;</span><br><span class="line">			t += y[i]</span><br><span class="line">		&#125;</span><br><span class="line">		res[i] = <span class="type">byte</span>(t%<span class="number">10</span> + <span class="string">&#x27;0&#x27;</span>)</span><br><span class="line">		t /= <span class="number">10</span></span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">if</span> t != <span class="number">0</span> &#123;</span><br><span class="line">		res = <span class="built_in">append</span>(res, <span class="type">byte</span>(t+<span class="string">&#x27;0&#x27;</span>))</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span> i, j := <span class="number">0</span>, <span class="built_in">len</span>(res)<span class="number">-1</span>; i &lt; j; i, j = i+<span class="number">1</span>, j<span class="number">-1</span> &#123;</span><br><span class="line">		res[i], res[j] = res[j], res[i]</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="type">string</span>(res)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</details>]]></content>
      <categories>
        <category>刷题</category>
        <category>每日一题</category>
      </categories>
      <tags>
        <tag>刷题</tag>
      </tags>
  </entry>
  <entry>
    <title>leetcode834.树中距离之和</title>
    <url>/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-7/leetcode834-%E6%A0%91%E4%B8%AD%E8%B7%9D%E7%A6%BB%E4%B9%8B%E5%92%8C.html</url>
    <content><![CDATA[<p><a href="https://leetcode.cn/problems/sum-of-distances-in-tree/">原题链接 834. 树中距离之和</a></p>
<hr>
<details>
    <summary>展开答案</summary>

<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">sumOfDistancesInTree</span><span class="params">(n <span class="type">int</span>, edges [][]<span class="type">int</span>)</span></span> (ans []<span class="type">int</span>) &#123;</span><br><span class="line">	ans = <span class="built_in">make</span>([]<span class="type">int</span>, n)</span><br><span class="line">	siz := <span class="built_in">make</span>([]<span class="type">int</span>, n)</span><br><span class="line">	g := <span class="built_in">make</span>([][]<span class="type">int</span>, n)</span><br><span class="line">	<span class="keyword">for</span> i := <span class="number">0</span>; i &lt; n; i++ &#123;</span><br><span class="line">		g[i] = <span class="built_in">make</span>([]<span class="type">int</span>, <span class="number">0</span>)</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span> i := <span class="number">0</span>; i &lt; n<span class="number">-1</span>; i++ &#123;</span><br><span class="line">		u, v := edges[i][<span class="number">0</span>], edges[i][<span class="number">1</span>]</span><br><span class="line">		g[u] = <span class="built_in">append</span>(g[u], v)</span><br><span class="line">		g[v] = <span class="built_in">append</span>(g[v], u)</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">var</span> getsiz, dfs <span class="function"><span class="keyword">func</span><span class="params">(u, fa <span class="type">int</span>)</span></span></span><br><span class="line">	dep := <span class="number">0</span></span><br><span class="line">	getsiz = <span class="function"><span class="keyword">func</span><span class="params">(u, fa <span class="type">int</span>)</span></span> &#123;</span><br><span class="line">		<span class="keyword">for</span> _, v := <span class="keyword">range</span> g[u] &#123;</span><br><span class="line">			<span class="keyword">if</span> v != fa &#123;</span><br><span class="line">				dep++</span><br><span class="line">				getsiz(v, u)</span><br><span class="line">				siz[u] += siz[v]</span><br><span class="line">				dep--</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		siz[u]++</span><br><span class="line">		ans[<span class="number">0</span>] += dep</span><br><span class="line">	&#125;</span><br><span class="line">	getsiz(<span class="number">0</span>, <span class="number">0</span>)</span><br><span class="line"></span><br><span class="line">	dfs = <span class="function"><span class="keyword">func</span><span class="params">(u, fa <span class="type">int</span>)</span></span> &#123;</span><br><span class="line">		<span class="keyword">for</span> _, v := <span class="keyword">range</span> g[u] &#123;</span><br><span class="line">			<span class="keyword">if</span> v != fa &#123;</span><br><span class="line">				ans[v] = ans[u] + (n - siz[v]) - (siz[v])</span><br><span class="line">				dfs(v, u)</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	dfs(<span class="number">0</span>, <span class="number">0</span>)</span><br><span class="line">	<span class="keyword">return</span> ans</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

</details>]]></content>
      <categories>
        <category>刷题</category>
        <category>每日一题</category>
      </categories>
      <tags>
        <tag>刷题</tag>
      </tags>
  </entry>
  <entry>
    <title>leetcode18.四数之和</title>
    <url>/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-7/leetcode18-%E5%9B%9B%E6%95%B0%E4%B9%8B%E5%92%8C.html</url>
    <content><![CDATA[<p><a href="https://leetcode.cn/problems/4sum/">原题链接 18. 四数之和</a></p>
<hr>
<details>
    <summary>展开答案</summary>

<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">fourSum</span><span class="params">(nums []<span class="type">int</span>, target <span class="type">int</span>)</span></span> (ans [][]<span class="type">int</span>) &#123;</span><br><span class="line">	n := <span class="built_in">len</span>(nums)</span><br><span class="line">	cnt := <span class="built_in">make</span>(<span class="keyword">map</span>[<span class="type">int</span>]<span class="type">int</span>, n)</span><br><span class="line"></span><br><span class="line">	sort.Ints(nums)</span><br><span class="line">	<span class="keyword">for</span> i := <span class="number">0</span>; i &lt; n; i++ &#123;</span><br><span class="line">		cnt[nums[i]]++</span><br><span class="line">	&#125;</span><br><span class="line">	used := <span class="built_in">make</span>(<span class="keyword">map</span>[[<span class="number">4</span>]<span class="type">int</span>]<span class="type">int</span>, <span class="number">0</span>)</span><br><span class="line"></span><br><span class="line">	<span class="keyword">for</span> i := <span class="number">0</span>; i &lt; n; i++ &#123;</span><br><span class="line">		<span class="keyword">for</span> j := i + <span class="number">1</span>; j &lt; n; j++ &#123;</span><br><span class="line">			<span class="keyword">for</span> k := j + <span class="number">1</span>; k &lt; n; k++ &#123;</span><br><span class="line">				a, b, c := nums[i], nums[j], nums[k]</span><br><span class="line">				cnt[a]--</span><br><span class="line">				cnt[b]--</span><br><span class="line">				cnt[c]--</span><br><span class="line">				<span class="keyword">if</span> cnt[target-a-b-c] != <span class="number">0</span> &amp;&amp; target-a-b-c &gt;= c &#123;</span><br><span class="line">					tmp := [<span class="number">4</span>]<span class="type">int</span>&#123;a, b, c, target - a - b - c&#125;</span><br><span class="line">					<span class="keyword">if</span> used[tmp] == <span class="number">0</span> &#123;</span><br><span class="line">						ans = <span class="built_in">append</span>(ans, []<span class="type">int</span>&#123;a, b, c, target - a - b - c&#125;)</span><br><span class="line">						used[tmp] = <span class="number">1</span></span><br><span class="line">					&#125;</span><br><span class="line">				&#125;</span><br><span class="line">				cnt[a]++</span><br><span class="line">				cnt[b]++</span><br><span class="line">				cnt[c]++</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> ans</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</details>]]></content>
      <categories>
        <category>刷题</category>
        <category>每日一题</category>
      </categories>
      <tags>
        <tag>刷题</tag>
      </tags>
  </entry>
  <entry>
    <title>leetcode979.在二叉树中分配硬币</title>
    <url>/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-7/leetcode979-%E5%9C%A8%E4%BA%8C%E5%8F%89%E6%A0%91%E4%B8%AD%E5%88%86%E9%85%8D%E7%A1%AC%E5%B8%81.html</url>
    <content><![CDATA[<p><a href="https://leetcode.cn/problems/distribute-coins-in-binary-tree/">原题链接 931. 下降路径最小和</a></p>
<hr>
<details>
    <summary>展开答案</summary>

<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Definition for a binary tree node.</span></span><br><span class="line"><span class="comment"> * type TreeNode struct &#123;</span></span><br><span class="line"><span class="comment"> *     Val int</span></span><br><span class="line"><span class="comment"> *     Left *TreeNode</span></span><br><span class="line"><span class="comment"> *     Right *TreeNode</span></span><br><span class="line"><span class="comment"> * &#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">distributeCoins</span><span class="params">(root *TreeNode)</span></span> <span class="type">int</span> &#123;</span><br><span class="line">	<span class="keyword">if</span> root == <span class="literal">nil</span> &#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="number">0</span></span><br><span class="line">	&#125;</span><br><span class="line">	l, r := root.Left, root.Right</span><br><span class="line">	resl := distributeCoins(l)</span><br><span class="line">	resr := distributeCoins(r)</span><br><span class="line">	sum, cnt := get(root)</span><br><span class="line">	<span class="keyword">return</span> resl + resr + abs(sum-cnt)</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">get</span><span class="params">(root *TreeNode)</span></span> (sum, cnt <span class="type">int</span>) &#123;</span><br><span class="line">	<span class="keyword">if</span> root == <span class="literal">nil</span> &#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="number">0</span>, <span class="number">0</span></span><br><span class="line">	&#125;</span><br><span class="line">	l, r := root.Left, root.Right</span><br><span class="line">	suml, cntl := get(l)</span><br><span class="line">	sumr, cntr := get(r)</span><br><span class="line">	sum = root.Val + suml + sumr</span><br><span class="line">	cnt = <span class="number">1</span> + cntl + cntr</span><br><span class="line">	<span class="keyword">return</span> sum, cnt</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">abs</span><span class="params">(x <span class="type">int</span>)</span></span> <span class="type">int</span> &#123;</span><br><span class="line">	<span class="keyword">if</span> x &gt; <span class="number">0</span> &#123;</span><br><span class="line">		<span class="keyword">return</span> x</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> -x</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</detail>]]></content>
      <categories>
        <category>刷题</category>
        <category>每日一题</category>
      </categories>
      <tags>
        <tag>刷题</tag>
      </tags>
  </entry>
  <entry>
    <title>leetcode931.下降路径最小和</title>
    <url>/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-7/leetcode931-%E4%B8%8B%E9%99%8D%E8%B7%AF%E5%BE%84%E6%9C%80%E5%B0%8F%E5%92%8C.html</url>
    <content><![CDATA[<p><a href="https://leetcode.cn/problems/minimum-falling-path-sum/">原题链接 931. 下降路径最小和</a></p>
<hr>
<details>
    <summary>展开答案</summary>

<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">minFallingPathSum</span><span class="params">(matrix [][]<span class="type">int</span>)</span></span> <span class="type">int</span> &#123;</span><br><span class="line">	n := <span class="built_in">len</span>(matrix)</span><br><span class="line">	dp := <span class="built_in">make</span>([][]<span class="type">int</span>, n+<span class="number">1</span>)</span><br><span class="line">	<span class="keyword">for</span> i := <span class="number">0</span>; i &lt;= n; i++ &#123;</span><br><span class="line">		dp[i] = <span class="built_in">make</span>([]<span class="type">int</span>, n+<span class="number">1</span>)</span><br><span class="line">		<span class="keyword">for</span> j := <span class="number">0</span>; j &lt;= n; j++ &#123;</span><br><span class="line">			dp[i][j] = <span class="number">0x3f3f3f3f</span></span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span> i := <span class="number">0</span>; i &lt;= n; i++ &#123;</span><br><span class="line">		dp[<span class="number">0</span>][i] = <span class="number">0</span></span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span> i := <span class="number">1</span>; i &lt;= n; i++ &#123;</span><br><span class="line">		<span class="keyword">for</span> j := <span class="number">1</span>; j &lt;= n; j++ &#123;</span><br><span class="line">			<span class="keyword">if</span> j != <span class="number">1</span> &#123;</span><br><span class="line">				dp[i][j] = min(dp[i<span class="number">-1</span>][j<span class="number">-1</span>]+matrix[i<span class="number">-1</span>][j<span class="number">-1</span>], dp[i][j])</span><br><span class="line">			&#125;</span><br><span class="line">			dp[i][j] = min(dp[i<span class="number">-1</span>][j]+matrix[i<span class="number">-1</span>][j<span class="number">-1</span>], dp[i][j])</span><br><span class="line">			<span class="keyword">if</span> j != n &#123;</span><br><span class="line">				dp[i][j] = min(dp[i<span class="number">-1</span>][j+<span class="number">1</span>]+matrix[i<span class="number">-1</span>][j<span class="number">-1</span>], dp[i][j])</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	ans := <span class="number">0x3f3f3f3f</span></span><br><span class="line">	<span class="keyword">for</span> i := <span class="number">1</span>; i &lt;= n; i++ &#123;</span><br><span class="line">		ans = min(ans, dp[n][i])</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> ans</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">min</span><span class="params">(x, y <span class="type">int</span>)</span></span> <span class="type">int</span> &#123;</span><br><span class="line">	<span class="keyword">if</span> x &gt; y &#123;</span><br><span class="line">		<span class="keyword">return</span> y</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> x</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</details>
]]></content>
      <categories>
        <category>刷题</category>
        <category>每日一题</category>
      </categories>
      <tags>
        <tag>刷题</tag>
      </tags>
  </entry>
  <entry>
    <title>leetcode2544.交替数字和</title>
    <url>/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/leetcode2544-%E4%BA%A4%E6%9B%BF%E6%95%B0%E5%AD%97%E5%92%8C.html</url>
    <content><![CDATA[<p><a href="https://leetcode.cn/problems/alternating-digit-sum">原题链接 2544. 交替数字和</a></p>
<hr>
<details>
    <summary>展开答案</summary>

<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">alternateDigitSum</span><span class="params">(n <span class="type">int</span>)</span></span> <span class="type">int</span> &#123;</span><br><span class="line">	ans, f := <span class="number">0</span>, <span class="number">1</span></span><br><span class="line">	<span class="keyword">for</span> n != <span class="number">0</span> &#123;</span><br><span class="line">		ans += f * (n % <span class="number">10</span>)</span><br><span class="line">		f *= <span class="number">-1</span></span><br><span class="line">		n /= <span class="number">10</span></span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> -f * ans</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</details>]]></content>
      <categories>
        <category>刷题</category>
        <category>每日一题</category>
      </categories>
      <tags>
        <tag>刷题</tag>
      </tags>
  </entry>
  <entry>
    <title>leetcode1911.最大子序列交替和</title>
    <url>/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/leetcode1911-%E6%9C%80%E5%A4%A7%E5%AD%90%E5%BA%8F%E5%88%97%E4%BA%A4%E6%9B%BF%E5%92%8C.html</url>
    <content><![CDATA[<p><a href="https://leetcode.cn/problems/maximum-alternating-subsequence-sum/">原题链接 1911. 最大子序列交替和</a></p>
<hr>
<details>
    <summary>展开答案</summary>

<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">maxAlternatingSum</span><span class="params">(nums []<span class="type">int</span>)</span></span> (ans <span class="type">int64</span>) &#123;</span><br><span class="line">	maxx := <span class="type">int</span>(<span class="number">1e9</span> + <span class="number">7</span>)</span><br><span class="line">	ans = <span class="number">0</span></span><br><span class="line">	cur, nex := nums[<span class="number">0</span>], maxx</span><br><span class="line">	<span class="keyword">for</span> i := <span class="number">1</span>; i &lt; <span class="built_in">len</span>(nums); i++ &#123;</span><br><span class="line">		<span class="keyword">if</span> nex == maxx &amp;&amp; cur &lt; nums[i] &#123;</span><br><span class="line">			cur = nums[i]</span><br><span class="line">		&#125; <span class="keyword">else</span> <span class="keyword">if</span> nex &gt; nums[i] &#123;</span><br><span class="line">			nex = nums[i]</span><br><span class="line">		&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">			ans += <span class="type">int64</span>(cur - nex)</span><br><span class="line">			<span class="comment">// fmt.Println(cur,nex)</span></span><br><span class="line">			cur, nex = nums[i], maxx</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> ans + <span class="type">int64</span>(cur)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</details>]]></content>
      <categories>
        <category>刷题</category>
        <category>每日一题</category>
      </categories>
      <tags>
        <tag>刷题</tag>
      </tags>
  </entry>
  <entry>
    <title>leetcode16.最接近的三数之和</title>
    <url>/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/leetcode16-%E6%9C%80%E6%8E%A5%E8%BF%91%E7%9A%84%E4%B8%89%E6%95%B0%E4%B9%8B%E5%92%8C.html</url>
    <content><![CDATA[<p><a href="https://leetcode.cn/problems/3sum-closest">原题链接 16.最接近的三数之和</a></p>
<hr>
<details>
    <summary>展开答案</summary>

<figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">threeSumClosest</span><span class="params">(nums []<span class="type">int</span>, target <span class="type">int</span>)</span></span> <span class="type">int</span> &#123;</span><br><span class="line">	<span class="keyword">var</span> ans, minn <span class="type">int</span> = <span class="number">1e9</span>, <span class="number">1e9</span></span><br><span class="line">	n := <span class="built_in">len</span>(nums)</span><br><span class="line">	sort.Ints(nums)</span><br><span class="line">	<span class="keyword">for</span> i := <span class="number">0</span>; i &lt; n; i++ &#123;</span><br><span class="line">		<span class="keyword">for</span> j := i + <span class="number">2</span>; j &lt; n; j++ &#123;</span><br><span class="line">			l, r := i+<span class="number">1</span>, j<span class="number">-1</span></span><br><span class="line">			<span class="keyword">for</span> l &lt; r &#123;</span><br><span class="line">				m1 := (<span class="number">2</span>*l + r) / <span class="number">3</span></span><br><span class="line">				m2 := (l + <span class="number">2</span>*r + <span class="number">2</span>) / <span class="number">3</span> <span class="comment">// 上取整</span></span><br><span class="line">				res1 := abs(target - nums[i] - nums[j] - nums[m1])</span><br><span class="line">				res2 := abs(target - nums[i] - nums[j] - nums[m2])</span><br><span class="line">				<span class="keyword">if</span> res1 &lt; res2 &#123;</span><br><span class="line">					r = m2 - <span class="number">1</span></span><br><span class="line">				&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">					l = m1 + <span class="number">1</span></span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">			res := abs(target - nums[i] - nums[j] - nums[r])</span><br><span class="line">			<span class="keyword">if</span> res &lt; minn &#123;</span><br><span class="line">				minn = res</span><br><span class="line">				ans = nums[i] + nums[j] + nums[r]</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> ans</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">min</span><span class="params">(x, y <span class="type">int</span>)</span></span> <span class="type">int</span> &#123;</span><br><span class="line">	<span class="keyword">if</span> x &gt; y &#123;</span><br><span class="line">		<span class="keyword">return</span> y</span><br><span class="line">	&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">		<span class="keyword">return</span> x</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">abs</span><span class="params">(x <span class="type">int</span>)</span></span> <span class="type">int</span> &#123;</span><br><span class="line">	<span class="keyword">if</span> x &gt; <span class="number">0</span> &#123;</span><br><span class="line">		<span class="keyword">return</span> x</span><br><span class="line">	&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">		<span class="keyword">return</span> -x</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</details>]]></content>
      <categories>
        <category>刷题</category>
        <category>每日一题</category>
      </categories>
      <tags>
        <tag>刷题</tag>
      </tags>
  </entry>
  <entry>
    <title>计算机网络</title>
    <url>/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C.html</url>
    <content><![CDATA[]]></content>
      <categories>
        <category>计算机基础</category>
        <category>计算机网络</category>
        <category>目录</category>
      </categories>
      <tags>
        <tag>计算机网络</tag>
      </tags>
  </entry>
  <entry>
    <title>计算机基础</title>
    <url>/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80.html</url>
    <content><![CDATA[<h2 id="1-操作系统"><a href="#1-操作系统" class="headerlink" title="1. 操作系统"></a>1. <strong><a href="/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F.html">操作系统</a></strong></h2><h2 id="2-计算机网络"><a href="#2-计算机网络" class="headerlink" title="2. 计算机网络"></a>2. <strong><a href="/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C.html">计算机网络</a></strong></h2><h2 id="3-数据结构"><a href="#3-数据结构" class="headerlink" title="3. 数据结构"></a>3. <strong><a href="/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84.html">数据结构</a></strong></h2><span id="more"></span>
<h2 id="4-数据库"><a href="#4-数据库" class="headerlink" title="4. 数据库"></a>4. <strong><a href="/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/%E6%95%B0%E6%8D%AE%E5%BA%93.html">数据库</a></strong></h2>]]></content>
      <categories>
        <category>计算机基础</category>
      </categories>
      <tags>
        <tag>计算机基础</tag>
      </tags>
  </entry>
  <entry>
    <title>每日一题</title>
    <url>/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98.html</url>
    <content><![CDATA[<p><a href="/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-8/leetcode16-%E6%9C%80%E6%8E%A5%E8%BF%91%E7%9A%84%E4%B8%89%E6%95%B0%E4%B9%8B%E5%92%8C.html">leetcode16. 最接近的三数之和</a><br><a href="/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-8/leetcode1911-%E6%9C%80%E5%A4%A7%E5%AD%90%E5%BA%8F%E5%88%97%E4%BA%A4%E6%9B%BF%E5%92%8C.html">leetcode1911. 最大子序列交替和</a><br><a href="/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-8/leetcode2544-%E4%BA%A4%E6%9B%BF%E6%95%B0%E5%AD%97%E5%92%8C.html">leetcode2544. 交替数字和</a><span id="more"></span></p>
<details>
    <summary>(2023.7)</summary>

<p><a href="/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-7/leetcode931-%E4%B8%8B%E9%99%8D%E8%B7%AF%E5%BE%84%E6%9C%80%E5%B0%8F%E5%92%8C.html">leetcode931. 下降路径最小和</a><br><a href="/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-7/leetcode979-%E5%9C%A8%E4%BA%8C%E5%8F%89%E6%A0%91%E4%B8%AD%E5%88%86%E9%85%8D%E7%A1%AC%E5%B8%81.html">leetcode979. 在二叉树中分配硬币</a><br><a href="/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-7/leetcode18-%E5%9B%9B%E6%95%B0%E4%B9%8B%E5%92%8C.html">leetcode18. 四数之和</a><br><a href="/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-7/leetcode834-%E6%A0%91%E4%B8%AD%E8%B7%9D%E7%A6%BB%E4%B9%8B%E5%92%8C.html">leetcode834. 树中距离之和</a><br><a href="/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-7/leetcode415-%E5%AD%97%E7%AC%A6%E4%B8%B2%E7%9B%B8%E5%8A%A0.html">leetcode415. 字符串相加</a><br><a href="/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-7/leetcode874-%E6%A8%A1%E6%8B%9F%E8%A1%8C%E8%B5%B0%E6%9C%BA%E5%99%A8%E4%BA%BA.html">leetcode874. 模拟行走机器人</a><br><a href="/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-7/leetcode918-%E7%8E%AF%E5%BD%A2%E5%AD%90%E6%95%B0%E7%BB%84%E7%9A%84%E6%9C%80%E5%A4%A7%E5%92%8C.html">leetcode918. 环形子数组的最大和</a><br><a href="/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-7/leetcode1499-%E6%BB%A1%E8%B6%B3%E4%B8%8D%E7%AD%89%E5%BC%8F%E7%9A%84%E6%9C%80%E5%A4%A7%E5%80%BC.html">leetcode1499. 满足不等式的最大值</a><br><a href="/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-7/leetcode860-%E6%9F%A0%E6%AA%AC%E6%B0%B4%E6%89%BE%E9%9B%B6.html">leetcode860. 柠檬水找零</a><br><a href="/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-7/leetcode42-%E6%8E%A5%E9%9B%A8%E6%B0%B4.html">leetcode42. 接雨水</a><br><a href="/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-7/leetcode771-%E5%AE%9D%E7%9F%B3%E4%B8%8E%E7%9F%B3%E5%A4%B4.html">leetcode771. 宝石与石头</a><br><a href="/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-7/leetcode2208-%E5%B0%86%E6%95%B0%E7%BB%84%E5%92%8C%E5%87%8F%E5%8D%8A%E7%9A%84%E6%9C%80%E5%B0%91%E6%93%8D%E4%BD%9C%E6%AC%A1%E6%95%B0.html">leetcode2208. 将数组和减半的最少操作次数</a><br><a href="/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-7/leetcode2569-%E6%9B%B4%E6%96%B0%E6%95%B0%E7%BB%84%E5%90%8E%E5%A4%84%E7%90%86%E6%B1%82%E5%92%8C%E6%9F%A5%E8%AF%A2.html">leetcode2569. 更新数组后处理求和查询</a><br><a href="/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-7/leetcode946-%E9%AA%8C%E8%AF%81%E6%A0%88%E5%BA%8F%E5%88%97.html">leetcode946. 验证栈序列</a><br><a href="/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-7/leetcode2790-%E9%95%BF%E5%BA%A6%E9%80%92%E5%A2%9E%E7%BB%84%E7%9A%84%E6%9C%80%E5%A4%A7%E6%95%B0%E7%9B%AE.html">leetcode2790. 长度递增组的最大数目</a><br><a href="/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-7/leetcode2791-%E6%A0%91%E4%B8%AD%E5%8F%AF%E4%BB%A5%E5%BD%A2%E6%88%90%E5%9B%9E%E6%96%87%E7%9A%84%E8%B7%AF%E5%BE%84%E6%95%B0.html">leetcode2791. 树中可以形成回文的路径数</a><br><a href="/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-7/leetcode2500-%E5%88%A0%E9%99%A4%E6%AF%8F%E8%A1%8C%E4%B8%AD%E7%9A%84%E6%9C%80%E5%A4%A7%E5%80%BC.html">leetcode2500. 删除每行中的最大值</a><br><a href="/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-7/leetcode2050-%E5%B9%B6%E8%A1%8C%E8%AF%BE%E7%A8%8BIII.html">leetcode2050. 并行课程III</a><br><a href="/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-7/leetcode1851-%E5%8C%85%E5%90%AB%E6%AF%8F%E4%B8%AA%E6%9F%A5%E8%AF%A2%E7%9A%84%E6%9C%80%E5%B0%8F%E5%8C%BA%E9%97%B4.html">leetcode1851. 包含每个查询的最小区间</a><br><a href="/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-7/leetcode141-%E7%8E%AF%E5%BD%A2%E9%93%BE%E8%A1%A8.html">leetcode141. 环形链表</a><br><a href="/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-7/leetcode142-%E7%8E%AF%E5%BD%A2%E9%93%BE%E8%A1%A8II.html">leetcode142. 环形链表II</a><br><a href="/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-7/leetcode143-%E9%87%8D%E6%8E%92%E9%93%BE%E8%A1%A8.html">leetcode143. 重排链表</a><br><a href="/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-7/leetcode2681-%E8%8B%B1%E9%9B%84%E7%9A%84%E5%8A%9B%E9%87%8F.html">leetcode2681. 英雄的力量</a></p>
</details>

<details>
    <summary>(2023.8)</summary>

<p><a href="/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-8/leetcode822-%E7%BF%BB%E8%BD%AC%E5%8D%A1%E7%89%87%E6%B8%B8%E6%88%8F.html">leetcode822. 翻转卡片游戏</a><br><a href="/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-8/leetcode980-%E4%B8%8D%E5%90%8C%E8%B7%AF%E5%BE%84III.html">leetcode980. 不同路径III</a><br><a href="/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-8/leetcode21-%E5%90%88%E5%B9%B6%E4%B8%A4%E4%B8%AA%E6%9C%89%E5%BA%8F%E9%93%BE%E8%A1%A8.html">leetcode21. 合并两个有序链表</a><br><a href="/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-8/leetcode6951-%E6%89%BE%E5%87%BA%E6%9C%80%E5%AE%89%E5%85%A8%E8%B7%AF%E5%BE%84.html">leetcode6951. 找出最安全路径</a><br><a href="/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-8/leetcode6932-%E5%AD%90%E5%BA%8F%E5%88%97%E6%9C%80%E5%A4%A7%E4%BC%98%E9%9B%85%E5%BA%A6.html">leetcode6932. 子序列最大优雅度</a><br><a href="/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-8/leetcode24-%E4%B8%A4%E4%B8%A4%E4%BA%A4%E6%8D%A2%E9%93%BE%E8%A1%A8%E4%B8%AD%E7%9A%84%E8%8A%82%E7%82%B9.html">leetcode24. 两两交换链表中的节点</a><br><a href="/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-8/leetcode334-%E9%80%92%E5%A2%9E%E7%9A%84%E4%B8%89%E5%85%83%E5%AD%90%E5%BA%8F%E5%88%97.html">leetcode334. 递增的三元子序列</a><br><a href="/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-8/codeforces1856A-Tales-of-a-Sort.html">codeforces1856A. Tales of a Sort</a><br><a href="/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-8/codeforces1856B-Good-Arrays.html">codeforces1856B. Good Arrays</a><br><a href="/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-8/codeforces1856C-To-Become-Max.html">codeforces185C. To Become Max</a><br><a href="/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-8/codeforces1856E1-PermuTree-easy-version.html">codeforces1856E1. PermuTree (easy version)</a><br><a href="/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-8/leetcode344-%E5%8F%8D%E8%BD%AC%E5%AD%97%E7%AC%A6%E4%B8%B2.html">leetcode344. 反转字符串</a><br><a href="/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-8/leetcode1749-%E4%BB%BB%E6%84%8F%E5%AD%90%E6%95%B0%E7%BB%84%E5%92%8C%E7%9A%84%E7%BB%9D%E5%AF%B9%E5%80%BC%E7%9A%84%E6%9C%80%E5%A4%A7%E5%80%BC.html">leetcode1749. 任意子数组和的绝对值的最大值</a><br><a href="/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-8/leetcode1281-%E6%95%B4%E6%95%B0%E7%9A%84%E5%90%84%E4%BD%8D%E7%A7%AF%E5%92%8C%E4%B9%8B%E5%B7%AE.html">leetcode1281. 整数的各位积和之差</a><br><a href="/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-8/leetcode1289-%E4%B8%8B%E9%99%8D%E8%B7%AF%E5%BE%84%E6%9C%80%E5%B0%8F%E5%92%8CII.html">leetcode1289. 下降路径最小和 II</a><br><a href="/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-8/leetcode1572-%E7%9F%A9%E9%98%B5%E5%AF%B9%E8%A7%92%E7%BA%BF%E5%85%83%E7%B4%A0%E7%9A%84%E5%92%8C.html">leetcode1572. 矩阵对角线元素的和</a><br><a href="/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-8/leetcode23-%E5%90%88%E5%B9%B6K%E4%B8%AA%E5%8D%87%E5%BA%8F%E9%93%BE%E8%A1%A8.html">leetcode23. 合并 K 个升序链表</a><br><a href="/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-8/leetcode88-%E5%90%88%E5%B9%B6%E4%B8%A4%E4%B8%AA%E6%9C%89%E5%BA%8F%E6%95%B0%E7%BB%84.html">leetcode88. 合并两个有序数组</a><br><a href="/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-8/leetcode2817-%E9%99%90%E5%88%B6%E6%9D%A1%E4%BB%B6%E4%B8%8B%E5%85%83%E7%B4%A0%E4%B9%8B%E9%97%B4%E7%9A%84%E6%9C%80%E5%B0%8F%E7%BB%9D%E5%AF%B9%E5%B7%AE.html">leetcode2817. 限制条件下元素之间的最小绝对差</a><br><a href="/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-8/leetcode2818-%E6%93%8D%E4%BD%9C%E4%BD%BF%E5%BE%97%E5%88%86%E6%9C%80%E5%A4%A7.html">leetcode2818. 操作使得分最大</a><br><a href="/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-8/leetcode617-%E5%90%88%E5%B9%B6%E4%BA%8C%E5%8F%89%E6%A0%91.html">leetcode617. 合并二叉树</a><br><a href="/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-8/leetcode833-%E5%AD%97%E7%AC%A6%E4%B8%B2%E4%B8%AD%E7%9A%84%E6%9F%A5%E6%89%BE%E4%B8%8E%E6%9B%BF%E6%8D%A2.html">leetcode833. 字符串中的查找与替换</a><br><a href="/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-8/leetcode2682-%E6%89%BE%E5%87%BA%E8%BD%AC%E5%9C%88%E6%B8%B8%E6%88%8F%E8%BE%93%E5%AE%B6%E6%8D%A2.html">leetcode2682. 找出转圈游戏输家</a><br><a href="/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-8/leetcode1444-%E5%88%87%E6%8A%AB%E8%90%A8%E7%9A%84%E6%96%B9%E6%A1%88%E6%95%B0.html">leetcode1444. 切披萨的方案数</a><br><a href="/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-8/leetcode1388-3n%E5%9D%97%E6%8A%AB%E8%90%A8.html">leetcode1388. 3n 块披萨</a><br><a href="/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-8/2023CCPC%E5%8D%8E%E4%B8%BA%E4%BA%91%E6%8C%91%E6%88%98%E8%B5%9B-1004%E5%A1%94.html">2023CCPC华为云挑战赛 1004塔</a><br><a href="/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-8/abc315C-Flavors.html">abc315 C - Flavors</a><br><a href="/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-8/abc315E-Prerequisites.html">abc315 E - Prerequisites</a><br><a href="/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-8/abc315F-Shortcuts.html">abc315 F - Shortcuts</a><br><a href="/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-8/abc315G-Ai-Bj-Ck-X-1-i-j-k-N.html">abc315 G - Ai + Bj + Ck &#x3D; X (1 &lt;&#x3D; i, j, k &lt;&#x3D; N)</a><br><a href="/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-8/leetcode2235-%E4%B8%A4%E6%95%B4%E6%95%B0%E7%9B%B8%E5%8A%A0.html">leetcode2235. 两整数相加</a><br><a href="/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-8/leetcode6954-%E7%BB%9F%E8%AE%A1%E5%92%8C%E5%B0%8F%E4%BA%8E%E7%9B%AE%E6%A0%87%E7%9A%84%E4%B8%8B%E6%A0%87%E5%AF%B9%E6%95%B0%E7%9B%AE.html">leetcode6954. 统计和小于目标的下标对数目</a><br><a href="/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-8/leetcode8014-%E5%BE%AA%E7%8E%AF%E5%A2%9E%E9%95%BF%E4%BD%BF%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%AD%90%E5%BA%8F%E5%88%97%E7%AD%89%E4%BA%8E%E5%8F%A6%E4%B8%80%E4%B8%AA%E5%AD%97%E7%AC%A6%E4%B8%B2.html">leetcode8014. 循环增长使字符串子序列等于另一个字符串</a><br><a href="/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-8/leetcode6941-%E5%B0%86%E4%B8%89%E4%B8%AA%E7%BB%84%E6%8E%92%E5%BA%8F.html">leetcode6941. 将三个组排序</a><br><a href="/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-8/leetcode2236-%E5%88%A4%E6%96%AD%E6%A0%B9%E7%BB%93%E7%82%B9%E6%98%AF%E5%90%A6%E7%AD%89%E4%BA%8E%E5%AD%90%E7%BB%93%E7%82%B9%E4%B9%8B%E5%92%8C.html">leetcode2236. 判断根结点是否等于子结点之和</a><br><a href="/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-8/leetcode7004-%E5%88%A4%E5%88%AB%E9%A6%96%E5%AD%97%E6%AF%8D%E7%BC%A9%E7%95%A5%E8%AF%8D.html">leetcode7004. 判别首字母缩略词</a><br><a href="/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-8/leetcode6450-k-avoiding%E6%95%B0%E7%BB%84%E7%9A%84%E6%9C%80%E5%B0%8F%E6%80%BB%E5%92%8C.html">leetcode6450. k-avoiding 数组的最小总和</a><br><a href="/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-8/leetcode7006-%E9%94%80%E5%94%AE%E5%88%A9%E6%B6%A6%E6%9C%80%E5%A4%A7%E5%8C%96.html">leetcode7006. 销售利润最大化</a><br><a href="/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-8/leetcode6467-%E6%89%BE%E5%87%BA%E6%9C%80%E9%95%BF%E7%AD%89%E5%80%BC%E5%AD%90%E6%95%B0%E7%BB%84.html">leetcode6467. 找出最长等值子数组</a><br><a href="/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-8/leetcode2337-%E7%A7%BB%E5%8A%A8%E7%89%87%E6%AE%B5%E5%BE%97%E5%88%B0%E5%AD%97%E7%AC%A6%E4%B8%B2.html">leetcode2337. 移动片段得到字符串</a><br><a href="/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-8/leetcode849-%E5%88%B0%E6%9C%80%E8%BF%91%E7%9A%84%E4%BA%BA%E7%9A%84%E6%9C%80%E5%A4%A7%E8%B7%9D%E7%A6%BB.html">leetcode849. 到最近的人的最大距离</a><br><a href="/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-8/leetcode1782-%E7%BB%9F%E8%AE%A1%E7%82%B9%E5%AF%B9%E7%9A%84%E6%95%B0%E7%9B%AE.html">leetcode1782. 统计点对的数目</a><br><a href="/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-8/leetcode1267-%E7%BB%9F%E8%AE%A1%E5%8F%82%E4%B8%8E%E9%80%9A%E4%BF%A1%E7%9A%84%E6%9C%8D%E5%8A%A1%E5%99%A8.html">leetcode1267. 统计参与通信的服务器</a><br><a href="/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-8/leetcode1448-%E7%BB%9F%E8%AE%A1%E4%BA%8C%E5%8F%89%E6%A0%91%E4%B8%AD%E5%A5%BD%E8%8A%82%E7%82%B9%E7%9A%84%E6%95%B0%E7%9B%AE.html">leetcode1448. 统计二叉树中好节点的数目</a><br><a href="/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-8/leetcode228-%E6%B1%87%E6%80%BB%E5%8C%BA%E9%97%B4.html">leetcode228. 汇总区间</a><br><a href="/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-8/leetcode8015-%E8%B7%9D%E7%A6%BB%E5%8E%9F%E7%82%B9%E6%9C%80%E8%BF%9C%E7%9A%84%E7%82%B9.html">leetcode8015. 距离原点最远的点</a><br><a href="/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-8/leetcode8022-%E6%89%BE%E5%87%BA%E7%BE%8E%E4%B8%BD%E6%95%B0%E7%BB%84%E7%9A%84%E6%9C%80%E5%B0%8F%E5%92%8C.html">leetcode8022. 找出美丽数组的最小和</a><br><a href="/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-8/leetcode56-%E5%90%88%E5%B9%B6%E5%8C%BA%E9%97%B4.html">leetcode56. 合并区间</a><br><a href="/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-8/leetcode2836-%E5%9C%A8%E4%BC%A0%E7%90%83%E6%B8%B8%E6%88%8F%E4%B8%AD%E6%9C%80%E5%A4%A7%E5%8C%96%E5%87%BD%E6%95%B0%E5%80%BC.html">leetcode2836. 在传球游戏中最大化函数值</a><br><a href="/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-8/leetcode57-%E6%8F%92%E5%85%A5%E5%8C%BA%E9%97%B4.html">leetcode57. 插入区间</a><br><a href="/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-8/leetcode823-%E5%B8%A6%E5%9B%A0%E5%AD%90%E7%9A%84%E4%BA%8C%E5%8F%89%E6%A0%91.html">leetcode823. 带因子的二叉树</a><br><a href="/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-8/leetcode1654-%E5%88%B0%E5%AE%B6%E7%9A%84%E6%9C%80%E5%B0%91%E8%B7%B3%E8%B7%83%E6%AC%A1%E6%95%B0.html">leetcode1654. 到家的最少跳跃次数</a><br><a href="/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-8/leetcode1761-%E4%B8%80%E4%B8%AA%E5%9B%BE%E4%B8%AD%E8%BF%9E%E9%80%9A%E4%B8%89%E5%85%83%E7%BB%84%E7%9A%84%E6%9C%80%E5%B0%8F%E5%BA%A6%E6%95%B0.html">leetcode1761. 一个图中连通三元组的最小度数</a></p>
</details>

<details>
    <summary>(2023.9)</summary>

<p><a href="/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-9/leetcode2240-%E4%B9%B0%E9%92%A2%E7%AC%94%E5%92%8C%E9%93%85%E7%AC%94%E7%9A%84%E6%96%B9%E6%A1%88%E6%95%B0.html">leetcode2240. 买钢笔和铅笔的方案数</a><br><a href="/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-9/leetcode2511-%E6%9C%80%E5%A4%9A%E5%8F%AF%E4%BB%A5%E6%91%A7%E6%AF%81%E7%9A%84%E6%95%8C%E4%BA%BA%E5%9F%8E%E5%A0%A1%E6%95%B0%E7%9B%AE.html">leetcode2511. 最多可以摧毁的敌人城堡数目</a><br><a href="/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-9/leetcode1921-%E6%B6%88%E7%81%AD%E6%80%AA%E7%89%A9%E7%9A%84%E6%9C%80%E5%A4%A7%E6%95%B0%E9%87%8F.html">leetcode1921. 消灭怪物的最大数量</a><br><a href="/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-9/leetcode449-%E5%BA%8F%E5%88%97%E5%8C%96%E5%92%8C%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E4%BA%8C%E5%8F%89%E6%90%9C%E7%B4%A2%E6%A0%91.html">leetcode449. 序列化和反序列化二叉搜索树</a><br><a href="/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-9/leetcode2605-%E4%BB%8E%E4%B8%A4%E4%B8%AA%E6%95%B0%E5%AD%97%E6%95%B0%E7%BB%84%E9%87%8C%E7%94%9F%E6%88%90%E6%9C%80%E5%B0%8F%E6%95%B0%E5%AD%97%E6%95%B0.html">leetcode2605. 从两个数字数组里生成最小数字</a><br><a href="/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-9/leetcode1123-%E6%9C%80%E6%B7%B1%E5%8F%B6%E8%8A%82%E7%82%B9%E7%9A%84%E6%9C%80%E8%BF%91%E5%85%AC%E5%85%B1%E7%A5%96%E5%85%88.html">leetcode1123. 最深叶节点的最近公共祖先</a><br><a href="/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-9/leetcode2594-%E4%BF%AE%E8%BD%A6%E7%9A%84%E6%9C%80%E5%B0%91%E6%97%B6%E9%97%B4.html">leetcode2594. 修车的最少时间</a><br><a href="/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-9/leetcode2651-%E8%AE%A1%E7%AE%97%E5%88%97%E8%BD%A6%E5%88%B0%E7%AB%99%E6%97%B6%E9%97%B4.html">leetcode2651. 计算列车到站时间</a><br><a href="/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-9/leetcode207-%E8%AF%BE%E7%A8%8B%E8%A1%A8.html">leetcode207. 课程表</a><br><a href="/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-8/abc319D-Minimum-Width.html">abc319 D - Minimum Width</a><br><a href="/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-8/abc319E-Bus-Stops.html">abc319 E - Bus Stops</a><br><a href="/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-9/leetcode210-%E8%AF%BE%E7%A8%8B%E8%A1%A8II.html">leetcode210. 课程表 II</a><br><a href="/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-9/leetcode1462-%E8%AF%BE%E7%A8%8B%E8%A1%A8IV.html">leetcode1462. 课程表 IV</a><br><a href="/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-9/leetcode2596-%E6%A3%80%E6%9F%A5%E9%AA%91%E5%A3%AB%E5%B7%A1%E8%A7%86%E6%96%B9%E6%A1%88.html">leetcode2596. 检查骑士巡视方案</a><br><a href="/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-9/leetcode1222-%E5%8F%AF%E4%BB%A5%E6%94%BB%E5%87%BB%E5%9B%BD%E7%8E%8B%E7%9A%84%E7%9A%87%E5%90%8E.html">leetcode1222. 可以攻击国王的皇后</a><br><a href="/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-9/leetcode50-%E5%AE%9D%E7%9F%B3%E8%A1%A5%E7%BB%99.html">leetcode50. 宝石补给</a><br><a href="/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-9/leetcode198-%E6%89%93%E5%AE%B6%E5%8A%AB%E8%88%8D.html">leetcode198. 打家劫舍</a><br><a href="/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-9/leetcode337-%E6%89%93%E5%AE%B6%E5%8A%AB%E8%88%8DIII.html">leetcode337. 打家劫舍 III</a><br><a href="/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-9/leetcode2560-%E6%89%93%E5%AE%B6%E5%8A%AB%E8%88%8DIV.html">leetcode2560. 打家劫舍 IV</a><br><a href="/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-9/leetcodeLCP06-%E6%8B%BF%E7%A1%AC%E5%B8%81.html">leetcodeLCP 06. 拿硬币</a><br><a href="/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-9/leetcodeLCR051-%E4%BA%8C%E5%8F%89%E6%A0%91%E4%B8%AD%E7%9A%84%E6%9C%80%E5%A4%A7%E8%B7%AF%E5%BE%84%E5%92%8C.html">leetcodeLCR 051. 二叉树中的最大路径和</a></p>
</details>

<details>
    <summary>(2023.10)</summary>

<p><a href="/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-10/leetcode2591-%E5%B0%86%E9%92%B1%E5%88%86%E7%BB%99%E6%9C%80%E5%A4%9A%E7%9A%84%E5%84%BF%E7%AB%A5.html">leetcode2591. 将钱分给最多的儿童</a><br><a href="/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-10/leetcode146-LRU%E7%BC%93%E5%AD%98.html">leetcode146. LRU 缓存</a><br><a href="/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-10/leetcode2582-%E9%80%92%E6%9E%95%E5%A4%B4.html">leetcode2582. 递枕头</a><br><a href="/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-10/leetcode605-%E7%A7%8D%E8%8A%B1%E9%97%AE%E9%A2%98.html">leetcode605. 种花问题</a><br><a href="/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-10/leetcode1333-%E9%A4%90%E5%8E%85%E8%BF%87%E6%BB%A4%E5%99%A8.html">leetcode1333. 餐厅过滤器</a><br><a href="/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-10/leetcode2136-%E5%85%A8%E9%83%A8%E5%BC%80%E8%8A%B1%E7%9A%84%E6%9C%80%E6%97%A9%E4%B8%80%E5%A4%A9.html">leetcode2136. 全部开花的最早一天</a><br><a href="/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-10/leetcode121-%E4%B9%B0%E5%8D%96%E8%82%A1%E7%A5%A8%E7%9A%84%E6%9C%80%E4%BD%B3%E6%97%B6%E6%9C%BA.html">leetcode121. 买卖股票的最佳时机</a><br><a href="/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-10/leetcode122-%E4%B9%B0%E5%8D%96%E8%82%A1%E7%A5%A8%E7%9A%84%E6%9C%80%E4%BD%B3%E6%97%B6%E6%9C%BAII.html">leetcode122. 买卖股票的最佳时机 II</a><br><a href="/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-10/leetcode123-%E4%B9%B0%E5%8D%96%E8%82%A1%E7%A5%A8%E7%9A%84%E6%9C%80%E4%BD%B3%E6%97%B6%E6%9C%BAIII.html">leetcode123. 买卖股票的最佳时机 III</a><br><a href="/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-10/leetcode188-%E4%B9%B0%E5%8D%96%E8%82%A1%E7%A5%A8%E7%9A%84%E6%9C%80%E4%BD%B3%E6%97%B6%E6%9C%BAIV.html">leetcode188. 买卖股票的最佳时机 IV</a><br><a href="/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-10/leetcode309-%E4%B9%B0%E5%8D%96%E8%82%A1%E7%A5%A8%E7%9A%84%E6%9C%80%E4%BD%B3%E6%97%B6%E6%9C%BA%E5%90%AB%E5%86%B7%E5%86%BB%E6%9C%9F.html">leetcode309. 买卖股票的最佳时机含冷冻期</a><br><a href="/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-10/leetcode714-%E4%B9%B0%E5%8D%96%E8%82%A1%E7%A5%A8%E7%9A%84%E6%9C%80%E4%BD%B3%E6%97%B6%E6%9C%BA%E5%90%AB%E6%89%8B%E7%BB%AD%E8%B4%B9.html">leetcode714. 买卖股票的最佳时机含手续费</a><br><a href="/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-10/leetcode901-%E8%82%A1%E7%A5%A8%E4%BB%B7%E6%A0%BC%E8%B7%A8%E5%BA%A6.html">leetcode901. 股票价格跨度</a><br><a href="/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-10/leetcode2034-%E8%82%A1%E7%A5%A8%E4%BB%B7%E6%A0%BC%E6%B3%A2%E5%8A%A8.html">leetcode2034. 股票价格波动</a><br><a href="/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-10/leetcode2578-%E6%9C%80%E5%B0%8F%E5%92%8C%E5%88%86%E5%89%B2.html">leetcode2578. 最小和分割</a><br><a href="/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-10/leetcode2731-%E7%A7%BB%E5%8A%A8%E6%9C%BA%E5%99%A8%E4%BA%BA.html">leetcode2731. 移动机器人</a><br><a href="/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-10/leetcode2512-%E5%A5%96%E5%8A%B1%E6%9C%80%E9%A1%B6%E5%B0%96%E7%9A%84K%E5%90%8D%E5%AD%A6%E7%94%9F.html">leetcode2512. 奖励最顶尖的 K 名学生</a><br><a href="/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-10/leetcode2562-%E6%89%BE%E5%87%BA%E6%95%B0%E7%BB%84%E7%9A%84%E4%B8%B2%E8%81%94%E5%80%BC.html">leetcode2562. 找出数组的串联值</a><br><a href="/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-10/leetcode1488-%E9%81%BF%E5%85%8D%E6%B4%AA%E6%B0%B4%E6%B3%9B%E6%BB%A5.html">leetcode1488. 避免洪水泛滥</a><br><a href="/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-10/leetcode136-%E5%8F%AA%E5%87%BA%E7%8E%B0%E4%B8%80%E6%AC%A1%E7%9A%84%E6%95%B0%E5%AD%97.html">leetcode136. 只出现一次的数字</a><br><a href="/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-10/leetcode137-%E5%8F%AA%E5%87%BA%E7%8E%B0%E4%B8%80%E6%AC%A1%E7%9A%84%E6%95%B0%E5%AD%97II.html">leetcode137. 只出现一次的数字 II</a><br><a href="/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-10/leetcode260.-%E5%8F%AA%E5%87%BA%E7%8E%B0%E4%B8%80%E6%AC%A1%E7%9A%84%E6%95%B0%E5%AD%97III.html">leetcode260. 只出现一次的数字 III</a><br><a href="/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-10/leetcode2652-%E5%80%8D%E6%95%B0%E6%B1%82%E5%92%8C.html">leetcode2652. 倍数求和</a><br><a href="/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-10/leetcode2530-%E6%89%A7%E8%A1%8CK%E6%AC%A1%E6%93%8D%E4%BD%9C%E5%90%8E%E7%9A%84%E6%9C%80%E5%A4%A7%E5%88%86%E6%95%B0.html">leetcode2530. 执行 K 次操作后的最大分数</a><br><a href="/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-10/leetcode1726-%E5%90%8C%E7%A7%AF%E5%85%83%E7%BB%84.html">leetcode1726. 同积元组</a><br><a href="/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-10/abc326C-Peak.html">abc326 C - Peak</a><br><a href="/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-10/abc326D-ABC-Puzzle.html">abc326 D - ABC Puzzle</a><br><a href="/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-10/abc326E-Revenge-of-The-Salary-of-AtCoder-Inc.html">abc326 E - Revenge of “The Salary of AtCoder Inc.”</a><br><a href="/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-10/codeforces1890E1-Doremy-s-Drying-Plan-Easy-Version.html">codeforces1890E1. Doremy’s Drying Plan (Easy Version)</a><br><a href="/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-10/codeforces1891C-Smilo-and-Monsters.html">codeforces1891C. Smilo and Monsters</a><br><a href="/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-10/codeforces1891D-Suspicious-logarithms.html">codeforces1891D. Suspicious logarithms</a></p>
</details>

<details>
    <summary>(2023.11)</summary>

<p><a href="/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-11/abc327E-Maximize-Rating.html">abc327 E - Maximize Rating</a><br><a href="/%E6%AF%8F%E6%97%A5%E4%B8%80%E9%A2%98/2023-11/codeforces1895C-Torn-Lucky-Ticket.html">codeforces1895C. Torn Lucky Ticket</a></p>
</details>

<details>
    <summary>(2023.12)</summary>


</details>]]></content>
      <categories>
        <category>刷题</category>
      </categories>
      <tags>
        <tag>刷题</tag>
      </tags>
  </entry>
  <entry>
    <title>其他</title>
    <url>/%E5%85%B6%E4%BB%96.html</url>
    <content><![CDATA[<p><a href="/%E5%85%B6%E4%BB%96/%E6%A8%A1%E6%9D%BF.html">模板</a></p>
]]></content>
      <categories>
        <category>其他</category>
      </categories>
      <tags>
        <tag>其他</tag>
      </tags>
  </entry>
  <entry>
    <title>变量</title>
    <url>/%E8%AF%AD%E8%A8%80/shell/%E5%8F%98%E9%87%8F.html</url>
    <content><![CDATA[<h2 id="定义变量"><a href="#定义变量" class="headerlink" title="定义变量"></a><strong>定义变量</strong></h2><p>定义变量，不需要加<code>$</code>符号，例如：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">name1=<span class="string">&#x27;catgok&#x27;</span>  <span class="comment"># 单引号定义字符串</span></span><br><span class="line">name2=<span class="string">&quot;catgok&quot;</span>  <span class="comment"># 双引号定义字符串</span></span><br><span class="line">name3=catgok    <span class="comment"># 也可以不加引号，同样表示字符串</span></span><br></pre></td></tr></table></figure>
<span id="more"></span>

<h2 id="使用变量"><a href="#使用变量" class="headerlink" title="使用变量"></a><strong>使用变量</strong></h2><p>使用变量，需要加上<code>$</code>符号，或者<code>$&#123;&#125;</code>符号。花括号是可选的，主要为了帮助解释器识别变量边界。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">name=catgok</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$name</span>  <span class="comment"># 输出catgok</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$&#123;name&#125;</span>  <span class="comment"># 输出catgok</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$&#123;name&#125;</span>123  <span class="comment"># 输出catgok123</span></span><br></pre></td></tr></table></figure>

<h2 id="只读变量"><a href="#只读变量" class="headerlink" title="只读变量"></a><strong>只读变量</strong></h2><p>使用<code>readonly</code>或者<code>declare</code>可以将变量变为只读。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">name=catgok</span><br><span class="line"><span class="built_in">readonly</span> name</span><br><span class="line"><span class="built_in">declare</span> -r name  <span class="comment"># 两种写法均可</span></span><br><span class="line">name=abc  <span class="comment"># 会报错，因为此时name只读</span></span><br></pre></td></tr></table></figure>

<h2 id="删除变量"><a href="#删除变量" class="headerlink" title="删除变量"></a><strong>删除变量</strong></h2><p><code>unset</code>可以删除变量。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">name=catgok</span><br><span class="line"><span class="built_in">unset</span> name</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$name</span>  <span class="comment"># 输出空行</span></span><br></pre></td></tr></table></figure>

<h2 id="变量类型"><a href="#变量类型" class="headerlink" title="变量类型"></a><strong>变量类型</strong></h2><ol>
<li>自定义变量（局部变量）<blockquote>
<p>子进程不能访问的变量</p>
</blockquote>
</li>
<li>环境变量（全局变量）<blockquote>
<p>子进程可以访问的变量</p>
</blockquote>
</li>
</ol>
<p>自定义变量改成环境变量：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">catgok@9e0ebfcd82d7:~$ name=catgok  <span class="comment"># 定义变量</span></span><br><span class="line">catgok@9e0ebfcd82d7:~$ <span class="built_in">export</span> name  <span class="comment"># 第一种方法</span></span><br><span class="line">catgok@9e0ebfcd82d7:~$ <span class="built_in">declare</span> -x name  <span class="comment"># 第二种方法</span></span><br></pre></td></tr></table></figure>
<p>环境变量改为自定义变量：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">catgok@9e0ebfcd82d7:~$ <span class="built_in">export</span> name=catgok  <span class="comment"># 定义环境变量</span></span><br><span class="line">catgok@9e0ebfcd82d7:~$ <span class="built_in">declare</span> +x name  <span class="comment"># 改为自定义变量</span></span><br></pre></td></tr></table></figure>

<h2 id="字符串"><a href="#字符串" class="headerlink" title="字符串"></a><strong>字符串</strong></h2><p>字符串可以用单引号，也可以用双引号，也可以不用引号。</p>
<h3 id="单引号与双引号的区别："><a href="#单引号与双引号的区别：" class="headerlink" title="单引号与双引号的区别："></a><strong>单引号与双引号的区别：</strong></h3><ul>
<li>单引号中的内容会<strong>原样输出</strong>，不会执行、不会取变量</li>
<li>双引号中的内容可以<strong>执行</strong>、可以<strong>取变量</strong><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">name=catgok  <span class="comment"># 不用引号</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;hello, $name \&quot;hh\&quot;&#x27;</span>  <span class="comment"># 单引号字符串，输出 hello, $name \&quot;hh\&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;hello, <span class="variable">$name</span> \&quot;hh\&quot;&quot;</span>  <span class="comment"># 双引号字符串，输出 hello, catgok &quot;hh&quot;</span></span><br></pre></td></tr></table></figure></li>
</ul>
<h3 id="获取字符串长度"><a href="#获取字符串长度" class="headerlink" title="获取字符串长度"></a><strong>获取字符串长度</strong></h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">name=<span class="string">&quot;catgok&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$&#123;#name&#125;</span>  <span class="comment"># 输出3</span></span><br></pre></td></tr></table></figure>
<h3 id="提取子串"><a href="#提取子串" class="headerlink" title="提取子串"></a><strong>提取子串</strong></h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">name=<span class="string">&quot;hello, catgok&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$&#123;name:0:5&#125;</span>  <span class="comment"># 提取从0开始的5个字符</span></span><br></pre></td></tr></table></figure>

<hr>
<center>

<p><a href="/%E8%AF%AD%E8%A8%80/shell.html">返回目录</a></p>
</center>]]></content>
      <categories>
        <category>语言</category>
        <category>shell</category>
      </categories>
      <tags>
        <tag>shell</tag>
      </tags>
  </entry>
  <entry>
    <title>引入外部脚本</title>
    <url>/%E8%AF%AD%E8%A8%80/shell/%E5%BC%95%E5%85%A5%E5%A4%96%E9%83%A8%E8%84%9A%E6%9C%AC.html</url>
    <content><![CDATA[<p>类似于<code>C/C++</code>中的<code>include</code>操作，<code>bash</code>也可以引入其他文件中的代码。</p>
<span id="more"></span>
<p>语法格式</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">. filename  <span class="comment"># 注意点和文件名之间有一个空格</span></span><br></pre></td></tr></table></figure>
<p>或</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">source</span> filename</span><br></pre></td></tr></table></figure>

<h2 id="示例"><a href="#示例" class="headerlink" title="示例"></a><strong>示例</strong></h2><p>创建<code>test1.sh</code>，内容为</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#! /bin/bash</span></span><br><span class="line"></span><br><span class="line">name=catgok  <span class="comment"># 定义变量name</span></span><br></pre></td></tr></table></figure>
<p>然后创建test2.sh，内容为</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#! /bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">source</span> test1.sh <span class="comment"># 或 . test1.sh</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> My name is: <span class="variable">$name</span>  <span class="comment"># 可以使用test1.sh中的变量</span></span><br></pre></td></tr></table></figure>
<p>执行命令：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">catgok@9e0ebfcd82d7:~$ chmod +x test2.sh </span><br><span class="line">catgok@9e0ebfcd82d7:~$ ./test2.sh </span><br><span class="line">My name is: catgok</span><br></pre></td></tr></table></figure>

<hr>
<center>

<p><a href="/%E8%AF%AD%E8%A8%80/shell.html">返回目录</a></p>
</center>]]></content>
      <categories>
        <category>语言</category>
        <category>shell</category>
      </categories>
      <tags>
        <tag>shell</tag>
      </tags>
  </entry>
  <entry>
    <title>文件重定向</title>
    <url>/%E8%AF%AD%E8%A8%80/shell/%E6%96%87%E4%BB%B6%E9%87%8D%E5%AE%9A%E5%90%91.html</url>
    <content><![CDATA[<p>每个进程默认打开3个文件描述符：</p>
<blockquote>
<p><code>stdin</code>标准输入，从命令行读取数据，文件描述符为<code>0</code><br><code>stdout</code>标准输出，向命令行输出数据，文件描述符为<code>1</code><br><code>stderr</code>标准错误输出，向命令行输出数据，文件描述符为<code>2</code></p>
</blockquote>
<span id="more"></span>
<p>可以用文件重定向将这三个文件重定向到其他文件中。</p>
<h2 id="重定向命令列表"><a href="#重定向命令列表" class="headerlink" title="重定向命令列表"></a><strong>重定向命令列表</strong></h2><table>
<thead>
<tr>
<th>命令</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td><code>command &gt; file</code></td>
<td>将<code>stdout</code>重定向到file中</td>
</tr>
<tr>
<td><code>command &lt; file</code></td>
<td>将<code>stdin</code>重定向到file中</td>
</tr>
<tr>
<td><code>command &gt;&gt; file</code></td>
<td>将<code>stdout</code>以<strong>追加</strong>方式重定向到<code>file</code>中</td>
</tr>
<tr>
<td><code>command n&gt; file</code></td>
<td>将文件描述符<code>n</code>重定向到<code>file</code>中</td>
</tr>
<tr>
<td><code>command n&gt;&gt; file</code></td>
<td>将文件描述符<code>n</code>以<strong>追加</strong>方式重定向到<code>file</code>中</td>
</tr>
</tbody></table>
<h2 id="输入和输出重定向"><a href="#输入和输出重定向" class="headerlink" title="输入和输出重定向"></a><strong>输入和输出重定向</strong></h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">echo</span> -e <span class="string">&quot;Hello \c&quot;</span> &gt; output.txt     <span class="comment"># 将stdout重定向到output.txt中</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;World&quot;</span> &gt;&gt; output.txt          <span class="comment"># 将字符串追加到output.txt中</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">read</span> str &lt; output.txt               <span class="comment"># 从output.txt中读取字符串</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$str</span>                           <span class="comment"># 输出结果：Hello World</span></span><br></pre></td></tr></table></figure>

<h2 id="同时重定向stdin和stdout"><a href="#同时重定向stdin和stdout" class="headerlink" title="同时重定向stdin和stdout"></a><strong>同时重定向stdin和stdout</strong></h2><p>创建bash脚本</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#! /bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">read</span> a</span><br><span class="line"><span class="built_in">read</span> b</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> $(<span class="built_in">expr</span> <span class="string">&quot;<span class="variable">$a</span>&quot;</span> + <span class="string">&quot;<span class="variable">$b</span>&quot;</span>)</span><br></pre></td></tr></table></figure>
<p>创建input.txt，里面的内容为</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">3</span><br><span class="line">4</span><br></pre></td></tr></table></figure>
<p>执行命令</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">catgok@9e0ebfcd82d7:~$ <span class="built_in">chmod</span> +x test.sh     <span class="comment"># 添加可执行权限</span></span><br><span class="line">catgok@9e0ebfcd82d7:~$ ./test.sh &lt; input.txt &gt; output.txt  <span class="comment"># 从input.txt中读取内容，将输出写入output.txt中</span></span><br><span class="line">catgok@9e0ebfcd82d7:~$ <span class="built_in">cat</span> output.txt       <span class="comment"># 查看output.txt中的内容</span></span><br><span class="line">7</span><br></pre></td></tr></table></figure>

<hr>
<center>

<p><a href="/%E8%AF%AD%E8%A8%80/shell.html">返回目录</a></p>
</center>]]></content>
      <categories>
        <category>语言</category>
        <category>shell</category>
      </categories>
      <tags>
        <tag>shell</tag>
      </tags>
  </entry>
  <entry>
    <title>exit命令</title>
    <url>/%E8%AF%AD%E8%A8%80/shell/exit%E5%91%BD%E4%BB%A4.html</url>
    <content><![CDATA[<p><code>exit</code>命令用来退出当前<code>shell</code>进程，并返回一个退出状态；使用<code>$?</code>可以接收这个退出状态。<br><code>exit</code>命令可以接受一个整数值作为参数，代表退出状态。如果不指定，默认状态值是<code>0</code>。<br>exit退出状态只能是一个介于<code>0~255</code>之间的整数，其中只有<code>0</code>表示成功，其它值都表示失败。</p>
<span id="more"></span>
<p>示例</p>
<p>创建脚本<code>test.sh</code>，内容如下：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#! /bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$#</span> -ne 1 ]  <span class="comment"># 如果传入参数个数等于1，则正常退出；否则非正常退出。</span></span><br><span class="line"><span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;arguments not valid&quot;</span></span><br><span class="line">    <span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;arguments valid&quot;</span></span><br><span class="line">    <span class="built_in">exit</span> 0</span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure>
<p>执行该脚本：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">catgok@9e0ebfcd82d7:~$ chmod +x test.sh </span><br><span class="line">catgok@9e0ebfcd82d7:~$ ./test.sh 123</span><br><span class="line">arguments valid</span><br><span class="line">catgok@9e0ebfcd82d7:~$ echo $?  # 传入一个参数，则正常退出，exit code为0</span><br><span class="line">0</span><br><span class="line">catgok@9e0ebfcd82d7:~$ ./test.sh </span><br><span class="line">arguments not valid</span><br><span class="line">catgok@9e0ebfcd82d7:~$ echo $?  # 传入参数个数不是1，则非正常退出，exit code为1</span><br><span class="line">1</span><br></pre></td></tr></table></figure>

<hr>
<center>

<p><a href="/%E8%AF%AD%E8%A8%80/shell.html">返回目录</a></p>
</center>]]></content>
      <categories>
        <category>语言</category>
        <category>shell</category>
      </categories>
      <tags>
        <tag>shell</tag>
      </tags>
  </entry>
  <entry>
    <title>概论</title>
    <url>/%E8%AF%AD%E8%A8%80/shell/%E6%A6%82%E8%AE%BA.html</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a><strong>简介</strong></h2><p>shell是我们通过命令行与操作系统沟通的语言。<br>shell脚本可以直接在命令行中执行，也可以将一套逻辑组织成一个文件，方便复用。 </p>
<span id="more"></span>
<p>Linux中常见的shell脚本有很多种，常见的有：</p>
<ul>
<li>Bourne Shell(<code>/usr/bin/sh</code>或<code>/bin/sh</code>)</li>
<li>Bourne Again Shell(<code>/bin/bash</code>)</li>
<li>C Shell(<code>/usr/bin/csh</code>)</li>
<li>K Shell(<code>/usr/bin/ksh</code>)</li>
<li><a href="https://ohmyz.sh/">zsh</a></li>
</ul>
<p>Linux系统中一般默认使用bash，所以接下来讲解bash中的语法。<br>文件开头需要写<code>#! /bin/bash</code>，指明bash为脚本解释器。  </p>
<h2 id="运行方式"><a href="#运行方式" class="headerlink" title="运行方式"></a><strong>运行方式</strong></h2><h3 id="作为可执行文件"><a href="#作为可执行文件" class="headerlink" title="作为可执行文件"></a><strong>作为可执行文件</strong></h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">catgok@9e0ebfcd82d7:~$ <span class="built_in">chmod</span> +x test.sh  <span class="comment"># 使脚本具有可执行权限</span></span><br><span class="line">catgok@9e0ebfcd82d7:~$ ./test.sh  <span class="comment"># 当前路径下执行</span></span><br><span class="line">Hello World!  <span class="comment"># 脚本输出</span></span><br><span class="line">catgok@9e0ebfcd82d7:~$ /home/catgok/test.sh  <span class="comment"># 绝对路径下执行</span></span><br><span class="line">Hello World!  <span class="comment"># 脚本输出</span></span><br><span class="line">catgok@9e0ebfcd82d7:~$ ~/test.sh  <span class="comment"># 家目录路径下执行</span></span><br><span class="line">Hello World!  <span class="comment"># 脚本输出</span></span><br></pre></td></tr></table></figure>
<h3 id="用解释器执行"><a href="#用解释器执行" class="headerlink" title="用解释器执行"></a><strong>用解释器执行</strong></h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">catgok@9e0ebfcd82d7:~$ bash test.sh</span><br><span class="line">Hello World!  <span class="comment"># 脚本输出</span></span><br></pre></td></tr></table></figure>

<hr>
<center>

<p><a href="/%E8%AF%AD%E8%A8%80/shell.html">返回目录</a></p>
</center>]]></content>
      <categories>
        <category>语言</category>
        <category>shell</category>
      </categories>
      <tags>
        <tag>shell</tag>
      </tags>
  </entry>
  <entry>
    <title>注释</title>
    <url>/%E8%AF%AD%E8%A8%80/shell/%E6%B3%A8%E9%87%8A.html</url>
    <content><![CDATA[<h2 id="单行注释"><a href="#单行注释" class="headerlink" title="单行注释"></a><strong>单行注释</strong></h2><p>每行中<code>#</code>之后的内容均是注释。 </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 这是一行注释</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;Hello World&#x27;</span>  <span class="comment">#`  这也是注释</span></span><br></pre></td></tr></table></figure>
<span id="more"></span>

<h2 id="多行注释"><a href="#多行注释" class="headerlink" title="多行注释"></a><strong>多行注释</strong></h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">:&lt;&lt;<span class="string">EOF</span></span><br><span class="line"><span class="string">第一行注释</span></span><br><span class="line"><span class="string">第二行注释</span></span><br><span class="line"><span class="string">第三行注释</span></span><br><span class="line"><span class="string">EOF</span></span><br></pre></td></tr></table></figure>
<p>其中<code>EOF</code>可以换成其它任意字符串。例如：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">:&lt;&lt;<span class="string">abc</span></span><br><span class="line"><span class="string">第一行注释</span></span><br><span class="line"><span class="string">第二行注释</span></span><br><span class="line"><span class="string">第三行注释</span></span><br><span class="line"><span class="string">abc</span></span><br><span class="line"></span><br><span class="line">:&lt;&lt;<span class="string">x</span></span><br><span class="line"><span class="string">第一行注释</span></span><br><span class="line"><span class="string">第二行注释</span></span><br><span class="line"><span class="string">第三行注释</span></span><br><span class="line"><span class="string">x</span></span><br></pre></td></tr></table></figure>

<hr>
<center>

<p><a href="/%E8%AF%AD%E8%A8%80/shell.html">返回目录</a></p>
</center>]]></content>
      <categories>
        <category>语言</category>
        <category>shell</category>
      </categories>
      <tags>
        <tag>shell</tag>
      </tags>
  </entry>
  <entry>
    <title>默认变量</title>
    <url>/%E8%AF%AD%E8%A8%80/shell/%E9%BB%98%E8%AE%A4%E5%8F%98%E9%87%8F.html</url>
    <content><![CDATA[<h2 id="文件参数变量"><a href="#文件参数变量" class="headerlink" title="文件参数变量"></a><strong>文件参数变量</strong></h2><p>在执行shell脚本时，可以向脚本传递参数。<code>$1</code>是第一个参数，<code>$2</code>是第二个参数，以此类推。特殊的，<code>$0</code>是文件名（包含路径）。例如(文件名为<code>test.sh</code>):</p>
<span id="more"></span>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#! /bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;文件名：&quot;</span><span class="variable">$0</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;第一个参数：&quot;</span><span class="variable">$1</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;第二个参数：&quot;</span><span class="variable">$2</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;第三个参数：&quot;</span><span class="variable">$3</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;第四个参数：&quot;</span><span class="variable">$4</span></span><br></pre></td></tr></table></figure>
<p>执行该脚本：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">catgok@9e0ebfcd82d7:~$ <span class="built_in">chmod</span> +x test.sh </span><br><span class="line">catgok@9e0ebfcd82d7:~$ ./test.sh 1 2 3 4</span><br><span class="line">文件名：./test.sh</span><br><span class="line">第一个参数：1</span><br><span class="line">第二个参数：2</span><br><span class="line">第三个参数：3</span><br><span class="line">第四个参数：4</span><br></pre></td></tr></table></figure>

<h2 id="其它参数相关变量"><a href="#其它参数相关变量" class="headerlink" title="其它参数相关变量"></a><strong>其它参数相关变量</strong></h2><table>
<thead>
<tr>
<th>参数</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td><code>$#</code></td>
<td>代表文件传入的<strong>参数个数</strong>，如上例中值为4</td>
</tr>
<tr>
<td><code>$*</code></td>
<td>由<strong>所有参数</strong>构成的用空格隔开的字符串，如上例中值为<code>&quot;$1 $2 $3 $4&quot;</code></td>
</tr>
<tr>
<td><code>$@</code></td>
<td><strong>每个参数</strong>分别用双引号括起来的字符串，如上例中值为<code>&quot;$1&quot; &quot;$2&quot; &quot;$3&quot; &quot;$4&quot;</code></td>
</tr>
<tr>
<td><code>$$</code></td>
<td>脚本当前运行的<strong>进程ID</strong></td>
</tr>
<tr>
<td><code>$?</code></td>
<td>上一条命令的退出状态(注意不是stdout，而是<strong>exit code</strong>)。0表示正常退出，其他值表示错误</td>
</tr>
<tr>
<td><code>$(command)</code></td>
<td>返回<code>command</code>这条命令的stdout(<strong>可嵌套</strong>)</td>
</tr>
<tr>
<td>`command`</td>
<td>返回<code>command</code>这条命令的stdout(<strong>不可嵌套</strong>)</td>
</tr>
</tbody></table>
<hr>
<center>

<p><a href="/%E8%AF%AD%E8%A8%80/shell.html">返回目录</a></p>
</center>]]></content>
      <categories>
        <category>语言</category>
        <category>shell</category>
      </categories>
      <tags>
        <tag>shell</tag>
      </tags>
  </entry>
  <entry>
    <title>数组</title>
    <url>/%E8%AF%AD%E8%A8%80/shell/%E6%95%B0%E7%BB%84.html</url>
    <content><![CDATA[<p>数组中可以存放多个不同类型的值，只支持一维数组，初始化时不需要指明数组大小。数组<strong>下标从0开始</strong>。</p>
<span id="more"></span>
<h2 id="定义"><a href="#定义" class="headerlink" title="定义"></a><strong>定义</strong></h2><p>数组用小括号表示，元素之间用空格隔开。例如：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">array=(1 abc <span class="string">&quot;def&quot;</span> catgok)</span><br></pre></td></tr></table></figure>
<p>也可以直接定义数组中某个元素的值：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">array[0]=1</span><br><span class="line">array[1]=abc</span><br><span class="line">array[2]=<span class="string">&quot;def&quot;</span></span><br><span class="line">array[3]=catgok</span><br></pre></td></tr></table></figure>

<h2 id="读取数组中某个元素的值"><a href="#读取数组中某个元素的值" class="headerlink" title="读取数组中某个元素的值"></a><strong>读取数组中某个元素的值</strong></h2><p>格式：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="variable">$&#123;array[index]&#125;</span></span><br></pre></td></tr></table></figure>
<p>例如：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">array=(1 abc <span class="string">&quot;def&quot;</span> catgok)</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$&#123;array[0]&#125;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$&#123;array[1]&#125;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$&#123;array[2]&#125;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$&#123;array[3]&#125;</span></span><br></pre></td></tr></table></figure>

<h2 id="读取整个数组"><a href="#读取整个数组" class="headerlink" title="读取整个数组"></a><strong>读取整个数组</strong></h2><p>格式：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="variable">$&#123;array[@]&#125;</span>  <span class="comment"># 第一种写法</span></span><br><span class="line"><span class="variable">$&#123;array[*]&#125;</span>  <span class="comment"># 第二种写法</span></span><br></pre></td></tr></table></figure>
<p>例如：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">array=(1 abc <span class="string">&quot;def&quot;</span> catgok)</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$&#123;array[@]&#125;</span>  <span class="comment"># 第一种写法</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$&#123;array[*]&#125;</span>  <span class="comment"># 第二种写法</span></span><br></pre></td></tr></table></figure>

<h2 id="数组长度"><a href="#数组长度" class="headerlink" title="数组长度"></a><strong>数组长度</strong></h2><p>类似于字符串</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="variable">$&#123;#array[@]&#125;</span>  <span class="comment"># 第一种写法</span></span><br><span class="line"><span class="variable">$&#123;#array[*]&#125;</span>  <span class="comment"># 第二种写法</span></span><br></pre></td></tr></table></figure>
<p>例如：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">array=(1 abc <span class="string">&quot;def&quot;</span> catgok)</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$&#123;#array[@]&#125;</span>  <span class="comment"># 第一种写法</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$&#123;#array[*]&#125;</span>  <span class="comment"># 第二种写法</span></span><br></pre></td></tr></table></figure>

<hr>
<center>

<p><a href="/%E8%AF%AD%E8%A8%80/shell.html">返回目录</a></p>
</center>]]></content>
      <categories>
        <category>语言</category>
        <category>shell</category>
      </categories>
      <tags>
        <tag>shell</tag>
      </tags>
  </entry>
  <entry>
    <title>expr命令</title>
    <url>/%E8%AF%AD%E8%A8%80/shell/expr%E5%91%BD%E4%BB%A4.html</url>
    <content><![CDATA[<p><code>expr</code>命令用于求表达式的值</p>
<span id="more"></span>
<h2 id="命令格式"><a href="#命令格式" class="headerlink" title="命令格式"></a><strong>命令格式</strong></h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">expr</span> 表达式</span><br></pre></td></tr></table></figure>

<p>表达式说明：</p>
<ul>
<li>用空格隔开每一项</li>
<li>用反斜杠放在shell特定的字符前面（发现表达式运行错误时，可以试试转义）</li>
<li>对包含空格和其他特殊字符的字符串要用引号括起来</li>
<li><code>expr</code>会在<code>stdout</code>中输出结果。如果为逻辑关系表达式，则结果为真时，<code>stdout</code>输出1，否则输出0。</li>
<li><code>expr</code>的<code>exit code</code>：如果为逻辑关系表达式，则结果为真时，<code>exit code</code>为0，否则为1。</li>
</ul>
<h2 id="字符串表达式"><a href="#字符串表达式" class="headerlink" title="字符串表达式"></a><strong>字符串表达式</strong></h2><ul>
<li><code>length STRING</code> <blockquote>
<p>返回STRING的长度</p>
</blockquote>
</li>
<li><code>index STRING CHARSET</code><blockquote>
<p><code>CHARSET</code>中任意单个字符在<code>STRING</code>中最前面的字符位置，<strong>下标从1开始</strong>。如果在<code>STRING</code>中完全不存在<code>CHARSET</code>中的字符，则返回0。</p>
</blockquote>
</li>
<li><code>substr STRING POSITION LENGTH</code><blockquote>
<p>返回<code>STRING</code>字符串中从<code>POSITION</code>开始，长度最大为<code>LENGTH</code>的子串。如果<code>POSITION</code>或<code>LENGTH</code>为负数，0或非数值，则返回空字符串。</p>
</blockquote>
</li>
</ul>
<p>示例：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">str=<span class="string">&quot;Hello World!&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> `<span class="built_in">expr</span> length <span class="string">&quot;<span class="variable">$str</span>&quot;</span>`       <span class="comment"># ``不是单引号，表示执行该命令，输出12</span></span><br><span class="line"><span class="built_in">echo</span> `<span class="built_in">expr</span> index <span class="string">&quot;<span class="variable">$str</span>&quot;</span> aWd`    <span class="comment"># 输出7，下标从1开始</span></span><br><span class="line"><span class="built_in">echo</span> `<span class="built_in">expr</span> substr <span class="string">&quot;<span class="variable">$str</span>&quot;</span> 2 3`   <span class="comment"># 输出 ell</span></span><br></pre></td></tr></table></figure>

<h2 id="整数表达式"><a href="#整数表达式" class="headerlink" title="整数表达式"></a><strong>整数表达式</strong></h2><p>expr支持普通的算术操作，算术表达式优先级低于字符串表达式，高于逻辑关系表达式。</p>
<ul>
<li><code>+ -</code> 加减运算。两端参数会转换为整数，如果转换失败则报错。</li>
<li><code>* / %</code> 乘，除，取模运算。两端参数会转换为整数，如果转换失败则报错。</li>
<li><code>()</code> 可以改变优先级，但需要用反斜杠转义<br>示例：<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">a=3</span><br><span class="line">b=4</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> `<span class="built_in">expr</span> <span class="variable">$a</span> + <span class="variable">$b</span>`     <span class="comment"># 输出7</span></span><br><span class="line"><span class="built_in">echo</span> `<span class="built_in">expr</span> <span class="variable">$a</span> - <span class="variable">$b</span>`     <span class="comment"># 输出-1</span></span><br><span class="line"><span class="built_in">echo</span> `<span class="built_in">expr</span> <span class="variable">$a</span> \* <span class="variable">$b</span>`    <span class="comment"># 输出12，*需要转义</span></span><br><span class="line"><span class="built_in">echo</span> `<span class="built_in">expr</span> <span class="variable">$a</span> / <span class="variable">$b</span>`     <span class="comment"># 输出0，整除</span></span><br><span class="line"><span class="built_in">echo</span> `<span class="built_in">expr</span> <span class="variable">$a</span> % <span class="variable">$b</span>`     <span class="comment"># 输出3</span></span><br><span class="line"><span class="built_in">echo</span> `<span class="built_in">expr</span> \( <span class="variable">$a</span> + 1 \) \* \( <span class="variable">$b</span> + 1 \)`  <span class="comment"># 输出20，值为(a + 1) * (b + 1)</span></span><br></pre></td></tr></table></figure></li>
</ul>
<h2 id="逻辑关系表达式"><a href="#逻辑关系表达式" class="headerlink" title="逻辑关系表达式"></a><strong>逻辑关系表达式</strong></h2><ul>
<li><code>|</code><blockquote>
<p>如果第一个参数非空且非0，则返回第一个参数的值，否则返回第二个参数的值，但要求第二个参数的值也是非空或非0，否则返回0。如果第一个参数是非空或非0时，不会计算第二个参数。</p>
</blockquote>
</li>
<li><code>&amp;</code><blockquote>
<p>如果两个参数都非空且非0，则返回第一个参数，否则返回0。如果第一个参为0或为空，则不会计算第二个参数。</p>
</blockquote>
</li>
<li><code>&lt; &lt;= = == != &gt;= &gt;</code><blockquote>
<p>比较两端的参数，如果为true，则返回1，否则返回0。”&#x3D;&#x3D;”是”&#x3D;”的同义词。”expr”首先尝试将两端参数转换为整数，并做算术比较，如果转换失败，则按字符集排序规则做字符比较。</p>
</blockquote>
</li>
<li><code>()</code><blockquote>
<p>可以改变优先级，但需要用反斜杠转义</p>
</blockquote>
</li>
</ul>
<p>示例：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">a=3</span><br><span class="line">b=4</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> `<span class="built_in">expr</span> <span class="variable">$a</span> \&gt; <span class="variable">$b</span>`    <span class="comment"># 输出0，&gt;需要转义</span></span><br><span class="line"><span class="built_in">echo</span> `<span class="built_in">expr</span> <span class="variable">$a</span> <span class="string">&#x27;&lt;&#x27;</span> <span class="variable">$b</span>`   <span class="comment"># 输出1，也可以将特殊字符用引号引起来</span></span><br><span class="line"><span class="built_in">echo</span> `<span class="built_in">expr</span> <span class="variable">$a</span> <span class="string">&#x27;&gt;=&#x27;</span> <span class="variable">$b</span>`  <span class="comment"># 输出0</span></span><br><span class="line"><span class="built_in">echo</span> `<span class="built_in">expr</span> <span class="variable">$a</span> \&lt;\= <span class="variable">$b</span>`  <span class="comment"># 输出1</span></span><br><span class="line"></span><br><span class="line">c=0</span><br><span class="line">d=5</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> `<span class="built_in">expr</span> <span class="variable">$c</span> \&amp; <span class="variable">$d</span>`  <span class="comment"># 输出0</span></span><br><span class="line"><span class="built_in">echo</span> `<span class="built_in">expr</span> <span class="variable">$a</span> \&amp; <span class="variable">$b</span>`  <span class="comment"># 输出3</span></span><br><span class="line"><span class="built_in">echo</span> `<span class="built_in">expr</span> <span class="variable">$c</span> \| <span class="variable">$d</span>`  <span class="comment"># 输出5</span></span><br><span class="line"><span class="built_in">echo</span> `<span class="built_in">expr</span> <span class="variable">$a</span> \| <span class="variable">$b</span>`  <span class="comment"># 输出3</span></span><br></pre></td></tr></table></figure>

<hr>
<center>

<p><a href="/%E8%AF%AD%E8%A8%80/shell.html">返回目录</a></p>
</center>]]></content>
      <categories>
        <category>语言</category>
        <category>shell</category>
      </categories>
      <tags>
        <tag>shell</tag>
      </tags>
  </entry>
  <entry>
    <title>read命令</title>
    <url>/%E8%AF%AD%E8%A8%80/shell/read%E5%91%BD%E4%BB%A4.html</url>
    <content><![CDATA[<p><code>read</code>命令用于从标准输入中读取单行数据。当读到文件结束符时，<code>exit code</code>为1，否则为0。</p>
<span id="more"></span>
<p>参数说明</p>
<ul>
<li>-p: 后面可以接提示信息</li>
<li>-t：后面跟秒数，定义输入字符的等待时间，超过等待时间后会自动忽略此命令</li>
</ul>
<p>示例:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">catgok@9e0ebfcd82d7:~$ <span class="built_in">read</span> name    <span class="comment"># 读入name的值</span></span><br><span class="line">catgok  <span class="comment"># 标准输入</span></span><br><span class="line">catgok@9e0ebfcd82d7:~$ <span class="built_in">echo</span> <span class="variable">$name</span>   <span class="comment"># 输出name的值</span></span><br><span class="line">catgok  <span class="comment"># 标准输出</span></span><br><span class="line">catgok@9e0ebfcd82d7:~$ <span class="built_in">read</span> -p <span class="string">&quot;Please input your name: &quot;</span> -t 30 name    <span class="comment"># 读入name的值，等待时间30秒</span></span><br><span class="line">Please input your name:  catgok     <span class="comment"># 标准输入</span></span><br><span class="line">catgok@9e0ebfcd82d7:~$ <span class="built_in">echo</span> <span class="variable">$name</span>   <span class="comment"># 输出name的值</span></span><br><span class="line">catgok  <span class="comment"># 标准输出</span></span><br></pre></td></tr></table></figure>

<hr>
<center>

<p><a href="/%E8%AF%AD%E8%A8%80/shell.html">返回目录</a></p>
</center>]]></content>
      <categories>
        <category>语言</category>
        <category>shell</category>
      </categories>
      <tags>
        <tag>shell</tag>
      </tags>
  </entry>
  <entry>
    <title>echo命令</title>
    <url>/%E8%AF%AD%E8%A8%80/shell/echo%E5%91%BD%E4%BB%A4.html</url>
    <content><![CDATA[<p><code>echo</code>用于输出字符串。</p>
<span id="more"></span>
<h2 id="命令格式"><a href="#命令格式" class="headerlink" title="命令格式"></a><strong>命令格式</strong></h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">echo</span> STRING</span><br></pre></td></tr></table></figure>

<h2 id="显示普通字符串"><a href="#显示普通字符串" class="headerlink" title="显示普通字符串"></a><strong>显示普通字符串</strong></h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&quot;Hello Terminal&quot;</span></span><br><span class="line"><span class="built_in">echo</span> Hello Terminal <span class="comment"># 引号可以省略</span></span><br></pre></td></tr></table></figure>

<h2 id="显示转义字符"><a href="#显示转义字符" class="headerlink" title="显示转义字符"></a><strong>显示转义字符</strong></h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&quot;\&quot;Hello Terminal\&quot;&quot;</span>  <span class="comment"># 注意只能使用双引号，如果使用单引号，则不转义</span></span><br><span class="line"><span class="built_in">echo</span> \&quot;Hello Terminal\&quot;  <span class="comment"># 也可以省略双引号</span></span><br></pre></td></tr></table></figure>

<h2 id="显示变量"><a href="#显示变量" class="headerlink" title="显示变量"></a><strong>显示变量</strong></h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">name=catgok</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;My name is <span class="variable">$name</span>&quot;</span>  <span class="comment"># 输出 My name is catgok</span></span><br></pre></td></tr></table></figure>

<h2 id="显示换行"><a href="#显示换行" class="headerlink" title="显示换行"></a><strong>显示换行</strong></h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">echo</span> -e <span class="string">&quot;Hi\n&quot;</span>  <span class="comment"># -e 开启转义</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;catgok&quot;</span></span><br></pre></td></tr></table></figure>
<p>输出结果</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Hi</span><br><span class="line"></span><br><span class="line">catgok</span><br></pre></td></tr></table></figure>

<h2 id="显示不换行"><a href="#显示不换行" class="headerlink" title="显示不换行"></a><strong>显示不换行</strong></h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">echo</span> -e <span class="string">&quot;Hi \c&quot;</span> <span class="comment"># -e 开启转义 \c 不换行</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;catgok&quot;</span></span><br></pre></td></tr></table></figure>
<p>输出结果</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Hi catgok</span><br></pre></td></tr></table></figure>

<h2 id="显示结果定向至文件"><a href="#显示结果定向至文件" class="headerlink" title="显示结果定向至文件"></a><strong>显示结果定向至文件</strong></h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&quot;Hello World&quot;</span> &gt; output.txt  <span class="comment"># 将内容以覆盖的方式输出到output.txt中</span></span><br></pre></td></tr></table></figure>

<h2 id="原样输出字符串，不进行转义或取变量-用单引号"><a href="#原样输出字符串，不进行转义或取变量-用单引号" class="headerlink" title="原样输出字符串，不进行转义或取变量(用单引号)"></a><strong>原样输出字符串，不进行转义或取变量(用单引号)</strong></h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">name=catgok</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;$name\&quot;&#x27;</span></span><br></pre></td></tr></table></figure>
<p>输出结果</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="variable">$name</span>\&quot;</span><br></pre></td></tr></table></figure>

<h2 id="显示命令的执行结果"><a href="#显示命令的执行结果" class="headerlink" title="显示命令的执行结果"></a><strong>显示命令的执行结果</strong></h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">echo</span> `<span class="built_in">date</span>`</span><br></pre></td></tr></table></figure>

<p>输出结果</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Wed Sep 1 11:45:33 CST 2021</span><br></pre></td></tr></table></figure>

<hr>
<center>

<p><a href="/%E8%AF%AD%E8%A8%80/shell.html">返回目录</a></p>
</center>]]></content>
      <categories>
        <category>语言</category>
        <category>shell</category>
      </categories>
      <tags>
        <tag>shell</tag>
      </tags>
  </entry>
  <entry>
    <title>printf命令</title>
    <url>/%E8%AF%AD%E8%A8%80/shell/printf%E5%91%BD%E4%BB%A4.html</url>
    <content><![CDATA[<p><code>printf</code>命令用于格式化输出，类似于<code>C/C++</code>中的<code>printf</code>函数。</p>
<span id="more"></span>
<p>默认不会在字符串末尾添加换行符。</p>
<h2 id="命令格式"><a href="#命令格式" class="headerlink" title="命令格式"></a><strong>命令格式</strong></h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">printf</span> format-string [arguments...]</span><br></pre></td></tr></table></figure>

<h2 id="用法示例"><a href="#用法示例" class="headerlink" title="用法示例"></a><strong>用法示例</strong></h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">printf</span> <span class="string">&quot;%10d.\n&quot;</span> 123                <span class="comment"># 占10位，右对齐</span></span><br><span class="line"><span class="built_in">printf</span> <span class="string">&quot;%-10.2f.\n&quot;</span> 123.123321      <span class="comment"># 占10位，保留2位小数，左对齐</span></span><br><span class="line"><span class="built_in">printf</span> <span class="string">&quot;My name is %s\n&quot;</span> <span class="string">&quot;catgok&quot;</span>   <span class="comment"># 格式化输出字符串</span></span><br><span class="line"><span class="built_in">printf</span> <span class="string">&quot;%d * %d = %d\n&quot;</span>  2 3 `<span class="built_in">expr</span> 2 \* 3`  <span class="comment"># 表达式的值作为参数</span></span><br></pre></td></tr></table></figure>
<p>输出结果</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">       123.</span><br><span class="line">123.12    .</span><br><span class="line">My name is catgok</span><br><span class="line">2 * 3 = 6</span><br></pre></td></tr></table></figure>

<hr>
<center>

<p><a href="/%E8%AF%AD%E8%A8%80/shell.html">返回目录</a></p>
</center>]]></content>
      <categories>
        <category>语言</category>
        <category>shell</category>
      </categories>
      <tags>
        <tag>shell</tag>
      </tags>
  </entry>
  <entry>
    <title>test命令与判断符号</title>
    <url>/%E8%AF%AD%E8%A8%80/shell/test%E5%91%BD%E4%BB%A4%E4%B8%8E%E5%88%A4%E6%96%AD%E7%AC%A6%E5%8F%B7.html</url>
    <content><![CDATA[<h2 id="逻辑运算符-amp-amp-和"><a href="#逻辑运算符-amp-amp-和" class="headerlink" title="逻辑运算符&amp;&amp;和||"></a><strong>逻辑运算符&amp;&amp;和||</strong></h2><ul>
<li><code>&amp;&amp;</code> 表示与，<code>||</code> 表示或</li>
<li>二者具有短路原则：<ul>
<li><code>expr1 &amp;&amp; expr2</code>：当expr1为假时，直接忽略expr2</li>
<li><code>expr1 || expr2</code>：当expr1为真时，直接忽略expr2</li>
</ul>
</li>
<li>表达式的<code>exit code</code>为0，表示真；为非零，表示假。（与C&#x2F;C++中的定义<strong>相反</strong>）<span id="more"></span></li>
</ul>
<h2 id="test命令"><a href="#test命令" class="headerlink" title="test命令"></a><strong>test命令</strong></h2><p>在命令行中输入<code>man test</code>，可以查看<code>test</code>命令的用法。<br><code>test</code>命令用于判断文件类型，以及对变量做比较。<br><code>test</code>命令用<code>exit code</code>返回结果，而不是使用<code>stdout</code>。0表示真，非0表示假。</p>
<p>例如：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">test</span> 2 -lt 3    <span class="comment"># 为真，返回值为0</span></span><br><span class="line"><span class="built_in">echo</span> $?         <span class="comment"># 输出上个命令的返回值，输出0</span></span><br></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">catgok@9e0ebfcd82d7:~$ <span class="built_in">ls</span>  <span class="comment"># 列出当前目录下的所有文件</span></span><br><span class="line">homework  output.txt  test.sh  tmp</span><br><span class="line">catgok@9e0ebfcd82d7:~$ <span class="built_in">test</span> -e test.sh &amp;&amp; <span class="built_in">echo</span> <span class="string">&quot;exist&quot;</span> || <span class="built_in">echo</span> <span class="string">&quot;Not exist&quot;</span></span><br><span class="line">exist       <span class="comment"># test.sh 文件存在</span></span><br><span class="line">catgok@9e0ebfcd82d7:~$ <span class="built_in">test</span> -e test2.sh &amp;&amp; <span class="built_in">echo</span> <span class="string">&quot;exist&quot;</span> || <span class="built_in">echo</span> <span class="string">&quot;Not exist&quot;</span></span><br><span class="line">Not exist   <span class="comment"># testh2.sh 文件不存在</span></span><br></pre></td></tr></table></figure>

<h3 id="文件类型判断"><a href="#文件类型判断" class="headerlink" title="文件类型判断"></a><strong>文件类型判断</strong></h3><p>命令格式</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">test</span> -e filename  <span class="comment"># 判断文件是否存在</span></span><br></pre></td></tr></table></figure>
<table>
<thead>
<tr>
<th>参数</th>
<th>代表意义</th>
</tr>
</thead>
<tbody><tr>
<td><code>-e</code></td>
<td>文件是否存在</td>
</tr>
<tr>
<td><code>-f</code></td>
<td>是否为文件</td>
</tr>
<tr>
<td><code>-d</code></td>
<td>是否为目录</td>
</tr>
</tbody></table>
<h3 id="文件权限判断"><a href="#文件权限判断" class="headerlink" title="文件权限判断"></a><strong>文件权限判断</strong></h3><p>命令格式</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">test</span> -r filename  <span class="comment"># 判断文件是否可读</span></span><br></pre></td></tr></table></figure>

<table>
<thead>
<tr>
<th>参数</th>
<th>代表意义</th>
</tr>
</thead>
<tbody><tr>
<td><code>-r</code></td>
<td>文件是否可读</td>
</tr>
<tr>
<td><code>-w</code></td>
<td>文件是否可写</td>
</tr>
<tr>
<td><code>-x</code></td>
<td>文件是否可执行</td>
</tr>
<tr>
<td><code>-s</code></td>
<td>是否为非空文件</td>
</tr>
</tbody></table>
<h3 id="整数间的比较"><a href="#整数间的比较" class="headerlink" title="整数间的比较"></a><strong>整数间的比较</strong></h3><p>命令格式</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">test</span> <span class="variable">$a</span> -eq <span class="variable">$b</span>  <span class="comment"># a是否等于b</span></span><br></pre></td></tr></table></figure>
<table>
<thead>
<tr>
<th>参数</th>
<th>代表意义</th>
</tr>
</thead>
<tbody><tr>
<td><code>-eq</code></td>
<td>a是否等于b</td>
</tr>
<tr>
<td><code>-ne</code></td>
<td>a是否不等于b</td>
</tr>
<tr>
<td><code>-gt</code></td>
<td>a是否大于b</td>
</tr>
<tr>
<td><code>-lt</code></td>
<td>a是否小于b</td>
</tr>
<tr>
<td><code>-ge</code></td>
<td>a是否大于等于b</td>
</tr>
<tr>
<td><code>-le</code></td>
<td>a是否小于等于b</td>
</tr>
</tbody></table>
<h3 id="字符串比较"><a href="#字符串比较" class="headerlink" title="字符串比较"></a><strong>字符串比较</strong></h3><table>
<thead>
<tr>
<th>参数</th>
<th>代表意义</th>
</tr>
</thead>
<tbody><tr>
<td><code>test -z STRING</code></td>
<td>判断STRING是否为空，如果为空，则返回true</td>
</tr>
<tr>
<td><code>test -n STRING</code></td>
<td>判断STRING是否非空，如果非空，则返回true（-n可以省略）</td>
</tr>
<tr>
<td><code>test str1 == str2</code></td>
<td>判断str1是否等于str2</td>
</tr>
<tr>
<td><code>test str1 != str2</code></td>
<td>判断str1是否不等于str2</td>
</tr>
</tbody></table>
<h3 id="多重条件判定"><a href="#多重条件判定" class="headerlink" title="多重条件判定"></a><strong>多重条件判定</strong></h3><p>命令格式</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">test</span> -r filename -a -x filename</span><br></pre></td></tr></table></figure>
<table>
<thead>
<tr>
<th>参数</th>
<th>代表意义</th>
</tr>
</thead>
<tbody><tr>
<td><code>-a</code></td>
<td>两条件是否同时成立</td>
</tr>
<tr>
<td><code>-o</code></td>
<td>两条件是否至少一个成立</td>
</tr>
<tr>
<td><code>!</code></td>
<td>取反。如 test ! -x file，当file不可执行时，返回true</td>
</tr>
</tbody></table>
<h2 id="判断符号"><a href="#判断符号" class="headerlink" title="判断符号[]"></a><strong>判断符号[]</strong></h2><p><code>[]</code>与<code>test</code>用法几乎一模一样，更常用于<code>if</code>语句中。另外<code>[[]]</code>是<code>[]</code>的加强版，支持的特性更多。<br>例如：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[ 2 -lt 3 ]  <span class="comment"># 为真，返回值为0</span></span><br><span class="line"><span class="built_in">echo</span> $?  <span class="comment"># 输出上个命令的返回值，输出0</span></span><br><span class="line">catgok@9e0ebfcd82d7:~$ <span class="built_in">ls</span>  <span class="comment"># 列出当前目录下的所有文件</span></span><br><span class="line">homework  output.txt  test.sh  tmp</span><br><span class="line">catgok@9e0ebfcd82d7:~$ [ -e test.sh ] &amp;&amp; <span class="built_in">echo</span> <span class="string">&quot;exist&quot;</span> || <span class="built_in">echo</span> <span class="string">&quot;Not exist&quot;</span></span><br><span class="line">exist  <span class="comment"># test.sh 文件存在</span></span><br><span class="line">catgok@9e0ebfcd82d7:~$ [ -e test2.sh ] &amp;&amp; <span class="built_in">echo</span> <span class="string">&quot;exist&quot;</span> || <span class="built_in">echo</span> <span class="string">&quot;Not exist&quot;</span></span><br><span class="line">Not exist  <span class="comment"># testh2.sh 文件不存在</span></span><br></pre></td></tr></table></figure>
<p>注意：</p>
<ul>
<li><code>[]</code>内的每一项都要用空格隔开</li>
<li>中括号内的变量，最好用双引号括起来</li>
<li>中括号内的常数，最好用单或双引号括起来</li>
</ul>
<p>例如：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">name=<span class="string">&quot;catgok 123&quot;</span></span><br><span class="line">[ <span class="variable">$name</span> == <span class="string">&quot;catgok 123&quot;</span> ]  <span class="comment"># 错误，等价于 [ catgok 123 == &quot;catgok 123&quot; ]，参数太多</span></span><br><span class="line">[ <span class="string">&quot;<span class="variable">$name</span>&quot;</span> == <span class="string">&quot;catgok&quot;</span> ]  <span class="comment"># 正确</span></span><br></pre></td></tr></table></figure>

<hr>
<center>

<p><a href="/%E8%AF%AD%E8%A8%80/shell.html">返回目录</a></p>
</center>]]></content>
      <categories>
        <category>语言</category>
        <category>shell</category>
      </categories>
      <tags>
        <tag>shell</tag>
      </tags>
  </entry>
  <entry>
    <title>判断语句</title>
    <url>/%E8%AF%AD%E8%A8%80/shell/%E5%88%A4%E6%96%AD%E8%AF%AD%E5%8F%A5.html</url>
    <content><![CDATA[<h2 id="if…then形式"><a href="#if…then形式" class="headerlink" title="if…then形式"></a><strong>if…then形式</strong></h2><p>类似于<code>C/C++</code>中的<code>if-else</code>语句。</p>
<span id="more"></span>

<h2 id="单层if"><a href="#单层if" class="headerlink" title="单层if"></a><strong>单层if</strong></h2><p>命令格式</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> condition</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line">    语句1</span><br><span class="line">    语句2</span><br><span class="line">    ...</span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure>
<p>示例</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">a=3</span><br><span class="line">b=4</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$a</span>&quot;</span> -lt <span class="string">&quot;<span class="variable">$b</span>&quot;</span> ] &amp;&amp; [ <span class="string">&quot;<span class="variable">$a</span>&quot;</span> -gt 2 ]</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="variable">$&#123;a&#125;</span>在范围内</span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure>
<p>输出结果</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">3在范围内</span><br></pre></td></tr></table></figure>

<h2 id="单层if-else"><a href="#单层if-else" class="headerlink" title="单层if-else"></a><strong>单层if-else</strong></h2><p>命令格式</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> condition</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line">    语句1</span><br><span class="line">    语句2</span><br><span class="line">    ...</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    语句1</span><br><span class="line">    语句2</span><br><span class="line">    ...</span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure>
<p>示例</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">a=3</span><br><span class="line">b=4</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> ! [ <span class="string">&quot;<span class="variable">$a</span>&quot;</span> -lt <span class="string">&quot;<span class="variable">$b</span>&quot;</span> ]</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="variable">$&#123;a&#125;</span>不小于<span class="variable">$&#123;b&#125;</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="variable">$&#123;a&#125;</span>小于<span class="variable">$&#123;b&#125;</span></span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure>
<p>输出结果</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">3小于4</span><br></pre></td></tr></table></figure>

<h2 id="多层if-elif-elif-else"><a href="#多层if-elif-elif-else" class="headerlink" title="多层if-elif-elif-else"></a><strong>多层if-elif-elif-else</strong></h2><p>命令格式</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> condition</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line">    语句1</span><br><span class="line">    语句2</span><br><span class="line">    ...</span><br><span class="line"><span class="keyword">elif</span> condition</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line">    语句1</span><br><span class="line">    语句2</span><br><span class="line">    ...</span><br><span class="line"><span class="keyword">elif</span> condition</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line">    语句1</span><br><span class="line">    语句2</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    语句1</span><br><span class="line">    语句2</span><br><span class="line">    ...</span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure>
<p>示例</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">a=4</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$a</span> -eq 1 ]</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="variable">$&#123;a&#125;</span>等于1</span><br><span class="line"><span class="keyword">elif</span> [ <span class="variable">$a</span> -eq 2 ]</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="variable">$&#123;a&#125;</span>等于2</span><br><span class="line"><span class="keyword">elif</span> [ <span class="variable">$a</span> -eq 3 ]</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="variable">$&#123;a&#125;</span>等于3</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    <span class="built_in">echo</span> 其他</span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure>
<p>输出结果</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">其他</span><br></pre></td></tr></table></figure>

<h2 id="case…esac形式"><a href="#case…esac形式" class="headerlink" title="case…esac形式"></a><strong>case…esac形式</strong></h2><p>类似于<code>C/C++</code>中的<code>switch</code>语句。<br>命令格式</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="keyword">case</span> $变量名称 <span class="keyword">in</span></span><br><span class="line">    值1)</span><br><span class="line">        语句1</span><br><span class="line">        语句2</span><br><span class="line">        ...</span><br><span class="line">        ;;  <span class="comment"># 类似于C/C++中的break</span></span><br><span class="line">    值2)</span><br><span class="line">        语句1</span><br><span class="line">        语句2</span><br><span class="line">        ...</span><br><span class="line">        ;;</span><br><span class="line">    *)  <span class="comment"># 类似于C/C++中的default</span></span><br><span class="line">        语句1</span><br><span class="line">        语句2</span><br><span class="line">        ...</span><br><span class="line">        ;;</span><br><span class="line"><span class="keyword">esac</span></span><br></pre></td></tr></table></figure>
<p>示例</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">a=4</span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="variable">$a</span> <span class="keyword">in</span></span><br><span class="line">    1)</span><br><span class="line">        <span class="built_in">echo</span> <span class="variable">$&#123;a&#125;</span>等于1</span><br><span class="line">        ;;  </span><br><span class="line">    2)</span><br><span class="line">        <span class="built_in">echo</span> <span class="variable">$&#123;a&#125;</span>等于2</span><br><span class="line">        ;;  </span><br><span class="line">    3)                                                </span><br><span class="line">        <span class="built_in">echo</span> <span class="variable">$&#123;a&#125;</span>等于3</span><br><span class="line">        ;;  </span><br><span class="line">    *)</span><br><span class="line">        <span class="built_in">echo</span> 其他</span><br><span class="line">        ;;  </span><br><span class="line"><span class="keyword">esac</span></span><br></pre></td></tr></table></figure>
<p>输出结果</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">其他</span><br></pre></td></tr></table></figure>

<hr>
<center>

<p><a href="/%E8%AF%AD%E8%A8%80/shell.html">返回目录</a></p>
</center>]]></content>
      <categories>
        <category>语言</category>
        <category>shell</category>
      </categories>
      <tags>
        <tag>shell</tag>
      </tags>
  </entry>
  <entry>
    <title>循环语句</title>
    <url>/%E8%AF%AD%E8%A8%80/shell/%E5%BE%AA%E7%8E%AF%E8%AF%AD%E5%8F%A5.html</url>
    <content><![CDATA[<h2 id="for…in…do…done"><a href="#for…in…do…done" class="headerlink" title="for…in…do…done"></a><strong>for…in…do…done</strong></h2><p>命令格式</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> var <span class="keyword">in</span> val1 val2 val3</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    语句1</span><br><span class="line">    语句2</span><br><span class="line">    ...</span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure>
<span id="more"></span>

<p>示例1，输出<code>a 2 cc</code>，每个元素一行</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> a 2 cc</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="variable">$i</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure>
<p>示例2，输出当前路径下的所有文件名，每个文件名一行</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> file <span class="keyword">in</span> `<span class="built_in">ls</span>`</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="variable">$file</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure>
<p>示例3，输出<code>1-10</code></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> $(<span class="built_in">seq</span> 1 10)</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="variable">$i</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure>
<p>示例4，使用<code>&#123;1..10&#125;</code> 或者 <code>&#123;a..z&#125;</code></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> &#123;a..z&#125;</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="variable">$i</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure>

<h2 id="for-…-…-…-do…done"><a href="#for-…-…-…-do…done" class="headerlink" title="for ((…;…;…)) do…done"></a><strong>for ((…;…;…)) do…done</strong></h2><p>命令格式</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> ((expression; condition; expression))</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    语句1</span><br><span class="line">    语句2</span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure>
<p>示例，输出<code>1-10</code>，每个数占一行</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> ((i=<span class="number">1</span>; i&lt;=<span class="number">10</span>; i++))</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="variable">$i</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure>

<h2 id="while…do…done循环"><a href="#while…do…done循环" class="headerlink" title="while…do…done循环"></a><strong>while…do…done循环</strong></h2><p>命令格式</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="keyword">while</span> condition</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    语句1</span><br><span class="line">    语句2</span><br><span class="line">    ...</span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure>
<p>示例，文件结束符为<code>Ctrl+d</code>，输入文件结束符后<code>read</code>指令返回false。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="keyword">while</span> <span class="built_in">read</span> name</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="variable">$name</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure>

<h2 id="until…do…done循环"><a href="#until…do…done循环" class="headerlink" title="until…do…done循环"></a><strong>until…do…done循环</strong></h2><p>当条件为真时结束<br>命令格式</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="keyword">until</span> condition</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    语句1</span><br><span class="line">    语句2</span><br><span class="line">    ...</span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure>
<p>示例，当用户输入<code>yes</code>或者<code>YES</code>时结束，否则一直等待读入。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="keyword">until</span> [ <span class="string">&quot;<span class="variable">$&#123;word&#125;</span>&quot;</span> == <span class="string">&quot;yes&quot;</span> ] || [ <span class="string">&quot;<span class="variable">$&#123;word&#125;</span>&quot;</span> == <span class="string">&quot;YES&quot;</span> ]</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    <span class="built_in">read</span> -p <span class="string">&quot;Please input yes/YES to stop this program: &quot;</span> word</span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure>

<h2 id="break命令"><a href="#break命令" class="headerlink" title="break命令"></a><strong>break命令</strong></h2><p>跳出当前一层循环，注意与<code>C/C++</code>不同的是，<code>break</code>不能跳出<code>case</code>语句。<br>示例</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="keyword">while</span> <span class="built_in">read</span> name</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    <span class="keyword">for</span> ((i=<span class="number">1</span>;i&lt;=<span class="number">10</span>;i++))</span><br><span class="line">    <span class="keyword">do</span></span><br><span class="line">        <span class="keyword">case</span> <span class="variable">$i</span> <span class="keyword">in</span></span><br><span class="line">            8)</span><br><span class="line">                <span class="built_in">break</span></span><br><span class="line">                ;;</span><br><span class="line">            *)</span><br><span class="line">                <span class="built_in">echo</span> <span class="variable">$i</span></span><br><span class="line">                ;;</span><br><span class="line">        <span class="keyword">esac</span></span><br><span class="line">    <span class="keyword">done</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure>
<p>该示例每读入非EOF的字符串，会输出一遍1-7。<br>该程序可以输入<code>Ctrl+d</code>文件结束符来结束，也可以直接用<code>Ctrl+c</code>杀掉该进程。</p>
<h2 id="continue命令"><a href="#continue命令" class="headerlink" title="continue命令"></a><strong>continue命令</strong></h2><p>跳出当前循环。<br>示例</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> ((i=<span class="number">1</span>;i&lt;=<span class="number">10</span>;i++))</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    <span class="keyword">if</span> [ `<span class="built_in">expr</span> <span class="variable">$i</span> % 2` -eq 0 ]</span><br><span class="line">    <span class="keyword">then</span></span><br><span class="line">        <span class="built_in">continue</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="variable">$i</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure>
<p>该程序输出<code>1-10</code>中的所有奇数。</p>
<h2 id="死循环的处理方式"><a href="#死循环的处理方式" class="headerlink" title="死循环的处理方式"></a><strong>死循环的处理方式</strong></h2><ul>
<li>如果可以打开该程序，则输入<code>Ctrl+c</code>即可。</li>
<li>否则可以直接关闭进程<blockquote>
<p>使用<code>top</code>命令找到进程的PID<br>  输入<code>kill -9 PID</code>即可关掉此进程</p>
</blockquote>
</li>
</ul>
<hr>
<center>

<p><a href="/%E8%AF%AD%E8%A8%80/shell.html">返回目录</a></p>
</center>]]></content>
      <categories>
        <category>语言</category>
        <category>shell</category>
      </categories>
      <tags>
        <tag>shell</tag>
      </tags>
  </entry>
  <entry>
    <title>函数</title>
    <url>/%E8%AF%AD%E8%A8%80/shell/%E5%87%BD%E6%95%B0.html</url>
    <content><![CDATA[<p><code>bash</code>中的函数类似于<code>C/C++</code>中的函数，但<code>return</code>的返回值与<code>C/C++</code>不同，返回的是<code>exit code</code>，取值为<code>0-255</code>，<code>0</code>表示正常结束。</p>
<blockquote>
<p>如果想获取函数的输出结果，可以通过<code>echo</code>输出到<code>stdout</code>中，然后通过<code>$(function_name)</code>来获取<code>stdout</code>中的结果。</p>
</blockquote>
<p>函数的<code>return</code>值可以通过<code>$?</code>来获取。</p>
<span id="more"></span>
<p>命令格式</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[<span class="keyword">function</span>] <span class="function"><span class="title">func_name</span></span>() &#123;  <span class="comment"># function关键字可以省略</span></span><br><span class="line">    语句1</span><br><span class="line">    语句2</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="不获取-return值和stdout值"><a href="#不获取-return值和stdout值" class="headerlink" title="不获取 return值和stdout值"></a><strong>不获取 return值和stdout值</strong></h2><p>示例</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="title">func</span></span>() &#123;</span><br><span class="line">    name=catgok</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;Hello <span class="variable">$name</span>&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">func</span><br></pre></td></tr></table></figure>
<p>输出结果</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Hello catgok</span><br></pre></td></tr></table></figure>

<h2 id="获取-return值和stdout值"><a href="#获取-return值和stdout值" class="headerlink" title="获取 return值和stdout值"></a><strong>获取 return值和stdout值</strong></h2><p>不写<code>return</code>时，默认<code>return 0</code>。</p>
<p>示例</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="title">func</span></span>() &#123;</span><br><span class="line">    name=catgok</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;Hello <span class="variable">$name</span>&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">return</span> 123</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">output=$(func)</span><br><span class="line">ret=$?</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;output = <span class="variable">$output</span>&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;return = <span class="variable">$ret</span>&quot;</span></span><br></pre></td></tr></table></figure>
<p>输出结果</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">output = Hello catgok</span><br><span class="line">return = 123</span><br></pre></td></tr></table></figure>

<h2 id="函数的输入参数"><a href="#函数的输入参数" class="headerlink" title="函数的输入参数"></a><strong>函数的输入参数</strong></h2><p>在函数内，<code>$1</code>表示第一个输入参数，<code>$2</code>表示第二个输入参数，依此类推。    </p>
<blockquote>
<p><strong>注意：函数内的<code>$0</code>仍然是文件名，而不是函数名。</strong></p>
</blockquote>
<p>示例</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="title">func</span></span>() &#123;  <span class="comment"># 递归计算 $1 + ($1 - 1) + ($1 - 2) + ... + 0</span></span><br><span class="line">    word=<span class="string">&quot;&quot;</span></span><br><span class="line">    <span class="keyword">while</span> [ <span class="string">&quot;<span class="variable">$&#123;word&#125;</span>&quot;</span> != <span class="string">&#x27;y&#x27;</span> ] &amp;&amp; [ <span class="string">&quot;<span class="variable">$&#123;word&#125;</span>&quot;</span> != <span class="string">&#x27;n&#x27;</span> ]</span><br><span class="line">    <span class="keyword">do</span></span><br><span class="line">        <span class="built_in">read</span> -p <span class="string">&quot;要进入func(<span class="variable">$1</span>)函数吗？请输入y/n：&quot;</span> word</span><br><span class="line">    <span class="keyword">done</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$word</span>&quot;</span> == <span class="string">&#x27;n&#x27;</span> ]</span><br><span class="line">    <span class="keyword">then</span></span><br><span class="line">        <span class="built_in">echo</span> 0</span><br><span class="line">        <span class="built_in">return</span> 0</span><br><span class="line">    <span class="keyword">fi</span>  </span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> [ <span class="variable">$1</span> -le 0 ] </span><br><span class="line">    <span class="keyword">then</span></span><br><span class="line">        <span class="built_in">echo</span> 0</span><br><span class="line">        <span class="built_in">return</span> 0</span><br><span class="line">    <span class="keyword">fi</span>  </span><br><span class="line"></span><br><span class="line">    <span class="built_in">sum</span>=$(func $(<span class="built_in">expr</span> <span class="variable">$1</span> - 1))</span><br><span class="line">    <span class="built_in">echo</span> $(<span class="built_in">expr</span> <span class="variable">$sum</span> + <span class="variable">$1</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> $(func 10)</span><br></pre></td></tr></table></figure>
<p>输出结果</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">55</span><br></pre></td></tr></table></figure>

<h2 id="函数内的局部变量"><a href="#函数内的局部变量" class="headerlink" title="函数内的局部变量"></a><strong>函数内的局部变量</strong></h2><p>可以在函数内定义局部变量，作用范围仅在当前函数内。<br>可以在递归函数中定义局部变量。</p>
<p>命令格式</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">local</span> 变量名=变量值</span><br></pre></td></tr></table></figure>
<p>例如</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#! /bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">func</span></span>() &#123;</span><br><span class="line">    <span class="built_in">local</span> name=catgok</span><br><span class="line">    <span class="built_in">echo</span> <span class="variable">$name</span></span><br><span class="line">&#125;</span><br><span class="line">func</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$name</span></span><br></pre></td></tr></table></figure>
<p>输出结果</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">catgok</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>第一行为函数内的name变量，第二行为函数外调用name变量，会发现此时该变量不存在。</p>
<hr>
<center>

<p><a href="/%E8%AF%AD%E8%A8%80/shell.html">返回目录</a></p>
</center>]]></content>
      <categories>
        <category>语言</category>
        <category>shell</category>
      </categories>
      <tags>
        <tag>shell</tag>
      </tags>
  </entry>
  <entry>
    <title>go</title>
    <url>/%E8%AF%AD%E8%A8%80/go.html</url>
    <content><![CDATA[]]></content>
      <categories>
        <category>语言</category>
        <category>go</category>
        <category>目录</category>
      </categories>
      <tags>
        <tag>go</tag>
      </tags>
  </entry>
  <entry>
    <title>shell</title>
    <url>/%E8%AF%AD%E8%A8%80/shell.html</url>
    <content><![CDATA[<h2 id="1-概论"><a href="#1-概论" class="headerlink" title="1. 概论"></a>1. <strong><a href="/%E8%AF%AD%E8%A8%80/shell/%E6%A6%82%E8%AE%BA.html">概论</a></strong></h2><h2 id="2-注释"><a href="#2-注释" class="headerlink" title="2. 注释"></a>2. <strong><a href="/%E8%AF%AD%E8%A8%80/shell/%E6%B3%A8%E9%87%8A.html">注释</a></strong></h2><h2 id="3-变量"><a href="#3-变量" class="headerlink" title="3. 变量"></a>3. <strong><a href="/%E8%AF%AD%E8%A8%80/shell/%E5%8F%98%E9%87%8F.html">变量</a></strong></h2><span id="more"></span>
<h2 id="4-默认变量"><a href="#4-默认变量" class="headerlink" title="4. 默认变量"></a>4. <strong><a href="/%E8%AF%AD%E8%A8%80/shell/%E9%BB%98%E8%AE%A4%E5%8F%98%E9%87%8F.html">默认变量</a></strong></h2><h2 id="5-数组"><a href="#5-数组" class="headerlink" title="5. 数组"></a>5. <strong><a href="/%E8%AF%AD%E8%A8%80/shell/%E6%95%B0%E7%BB%84.html">数组</a></strong></h2><h2 id="6-expr命令"><a href="#6-expr命令" class="headerlink" title="6. expr命令"></a>6. <strong><a href="/%E8%AF%AD%E8%A8%80/shell/expr%E5%91%BD%E4%BB%A4.html">expr命令</a></strong></h2><h2 id="7-read命令"><a href="#7-read命令" class="headerlink" title="7. read命令"></a>7. <strong><a href="/%E8%AF%AD%E8%A8%80/shell/read%E5%91%BD%E4%BB%A4.html">read命令</a></strong></h2><h2 id="8-echo命令"><a href="#8-echo命令" class="headerlink" title="8. echo命令"></a>8. <strong><a href="/%E8%AF%AD%E8%A8%80/shell/echo%E5%91%BD%E4%BB%A4.html">echo命令</a></strong></h2><h2 id="9-printf命令"><a href="#9-printf命令" class="headerlink" title="9. printf命令"></a>9. <strong><a href="/%E8%AF%AD%E8%A8%80/shell/printf%E5%91%BD%E4%BB%A4.html">printf命令</a></strong></h2><h2 id="10-test命令与判断符号"><a href="#10-test命令与判断符号" class="headerlink" title="10. test命令与判断符号"></a>10. <strong><a href="/%E8%AF%AD%E8%A8%80/shell/test%E5%91%BD%E4%BB%A4%E4%B8%8E%E5%88%A4%E6%96%AD%E7%AC%A6%E5%8F%B7.html">test命令与判断符号</a></strong></h2><h2 id="11-判断语句"><a href="#11-判断语句" class="headerlink" title="11. 判断语句"></a>11. <strong><a href="/%E8%AF%AD%E8%A8%80/shell/%E5%88%A4%E6%96%AD%E8%AF%AD%E5%8F%A5.html">判断语句</a></strong></h2><h2 id="12-循环语句"><a href="#12-循环语句" class="headerlink" title="12. 循环语句"></a>12. <strong><a href="/%E8%AF%AD%E8%A8%80/shell/%E5%BE%AA%E7%8E%AF%E8%AF%AD%E5%8F%A5.html">循环语句</a></strong></h2><h2 id="13-函数"><a href="#13-函数" class="headerlink" title="13. 函数"></a>13. <strong><a href="/%E8%AF%AD%E8%A8%80/shell/%E5%87%BD%E6%95%B0.html">函数</a></strong></h2><h2 id="14-exit命令"><a href="#14-exit命令" class="headerlink" title="14. exit命令"></a>14. <strong><a href="/%E8%AF%AD%E8%A8%80/shell/exit%E5%91%BD%E4%BB%A4.html">exit命令</a></strong></h2><h2 id="15-文件重定向"><a href="#15-文件重定向" class="headerlink" title="15. 文件重定向"></a>15. <strong><a href="/%E8%AF%AD%E8%A8%80/shell/%E6%96%87%E4%BB%B6%E9%87%8D%E5%AE%9A%E5%90%91.html">文件重定向</a></strong></h2><h2 id="16-引入外部脚本"><a href="#16-引入外部脚本" class="headerlink" title="16. 引入外部脚本"></a>16. <strong><a href="/%E8%AF%AD%E8%A8%80/shell/%E5%BC%95%E5%85%A5%E5%A4%96%E9%83%A8%E8%84%9A%E6%9C%AC.html">引入外部脚本</a></strong></h2>]]></content>
      <categories>
        <category>语言</category>
        <category>shell</category>
        <category>目录</category>
      </categories>
      <tags>
        <tag>shell</tag>
      </tags>
  </entry>
  <entry>
    <title>语言</title>
    <url>/%E8%AF%AD%E8%A8%80.html</url>
    <content><![CDATA[<h2 id="1-go"><a href="#1-go" class="headerlink" title="1. go"></a>1. <strong><a href="/%E8%AF%AD%E8%A8%80/go.html">go</a></strong></h2><h2 id="2-shell"><a href="#2-shell" class="headerlink" title="2. shell"></a>2. <strong><a href="/%E8%AF%AD%E8%A8%80/shell.html">shell</a></strong></h2><h2 id="3-java"><a href="#3-java" class="headerlink" title="3. java"></a>3. <strong><a href="/%E8%AF%AD%E8%A8%80/java.html">java</a></strong></h2><span id="more"></span>
<h2 id="4-cpp"><a href="#4-cpp" class="headerlink" title="4. cpp"></a>4. <strong><a href="/%E8%AF%AD%E8%A8%80/cpp.html">cpp</a></strong></h2><h2 id="5-python"><a href="#5-python" class="headerlink" title="5. python"></a>5. <strong><a href="/%E8%AF%AD%E8%A8%80/python.html">python</a></strong></h2>]]></content>
      <categories>
        <category>语言</category>
      </categories>
  </entry>
  <entry>
    <title>模板</title>
    <url>/%E5%85%B6%E4%BB%96/%E6%A8%A1%E6%9D%BF.html</url>
    <content><![CDATA[<h1 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h1><h2 id="本地图片"><a href="#本地图片" class="headerlink" title="本地图片"></a>本地图片</h2><span id="more"></span>

<img data-src="/%E5%85%B6%E4%BB%96/%E6%A8%A1%E6%9D%BF/img.png" class="" title="本地图片">

<h2 id="网络图片"><a href="#网络图片" class="headerlink" title="网络图片"></a>网络图片</h2><p><img data-src="https://th.bing.com/th/id/OIP.cwIF_kizVZuERn_K9z4lgAHaHa?pid=ImgDet&rs=1" alt="网络图片"></p>
<h1 id="文字"><a href="#文字" class="headerlink" title="文字"></a>文字</h1><h2 id="1"><a href="#1" class="headerlink" title="1"></a>1</h2><h3 id="1-1"><a href="#1-1" class="headerlink" title="1.1"></a>1.1</h3><p>1.1</p>
<h3 id="1-2"><a href="#1-2" class="headerlink" title="1.2"></a>1.2</h3><p>1.2</p>
<h2 id="2"><a href="#2" class="headerlink" title="2"></a>2</h2><p>2</p>
<h1 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h1><figure class="highlight go"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    fmt.Println()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="数学公式"><a href="#数学公式" class="headerlink" title="数学公式"></a>数学公式</h1><p><a href="https://zhuanlan.zhihu.com/p/441454622">MarkDown数学公式</a></p>
<p><a href="https://zhuanlan.zhihu.com/p/450465546">Markdown&#x2F;LaTeX 数学公式和符号表</a></p>
<p>注意添加<code>mathjax: true</code><br>$e&#x3D;mc^2$</p>
<p>$a\le sl$</p>
<h1 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h1><p><a href="https://markdown.com.cn/editor">模板链接</a></p>
]]></content>
      <categories>
        <category>其他</category>
        <category>模板</category>
      </categories>
      <tags>
        <tag>其他,模板</tag>
      </tags>
  </entry>
</search>
